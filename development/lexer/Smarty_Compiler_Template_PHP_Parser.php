<?php
/**
* Smarty Internal Plugin Template_parser
*
* This is the template parser.
* It is generated from the internal.template_parser.y file
* @package Smarty
* @subpackage Compiler
* @author Uwe Tews
*/
class TP_yyToken implements ArrayAccess
{
    public $string = '';
    public $metadata = array();

    public function __construct($s, $m = array())
    {
        if ($s instanceof TP_yyToken) {
            $this->string = $s->string;
            $this->metadata = $s->metadata;
        } else {
            $this->string = (string) $s;
            if ($m instanceof TP_yyToken) {
                $this->metadata = $m->metadata;
            } elseif (is_array($m)) {
                $this->metadata = $m;
            }
        }
    }

    public function __toString()
    {
        return $this->_string;
    }

    public function offsetExists($offset)
    {
        return isset($this->metadata[$offset]);
    }

    public function offsetGet($offset)
    {
        return $this->metadata[$offset];
    }

    public function offsetSet($offset, $value)
    {
        if ($offset === null) {
            if (isset($value[0])) {
                $x = ($value instanceof TP_yyToken) ?
                    $value->metadata : $value;
                $this->metadata = array_merge($this->metadata, $x);

                return;
            }
            $offset = count($this->metadata);
        }
        if ($value === null) {
            return;
        }
        if ($value instanceof TP_yyToken) {
            if ($value->metadata) {
                $this->metadata[$offset] = $value->metadata;
            }
        } elseif ($value) {
            $this->metadata[$offset] = $value;
        }
    }

    public function offsetUnset($offset)
    {
        unset($this->metadata[$offset]);
    }
}

class TP_yyStackEntry
{
    public $stateno;       /* The state-number */
    public $major;         /* The major token value.  This is the code
                     ** number for the token at this stack level */
    public $minor; /* The user-supplied minor token value.  This
                     ** is the value of the token  */
};


#line 13 "Smarty_Compiler_Template_Php_Parser.y"
class Smarty_Compiler_Template_PHP_Parser extends Smarty_Exception_Magic#line 80 "Smarty_Compiler_Template_Php_Parser.php"
{
#line 15 "Smarty_Compiler_Template_Php_Parser.y"

    const Err1 = "Security error: Call to private object member not allowed";
    const Err2 = "Security error: Call to dynamic object member not allowed";
    const Err3 = "PHP in template not allowed. Use SmartyBC to enable it";
    // states whether the parse was successful or not
    public $successful = true;
    public $retvalue = 0;
    public  $lex = null;
    public  $compiler = null;
    public  $prefix_number = 0;
    public  $block_nesting_level = 0;
    private $internalError = false;
    private $strip = false;
    private $text_is_php = false;
    private $is_xml = false;
    private $db_quote_code_buffer = '';
    private $asp_tags = null;
    private $php_handling = null;
    private $security = null;
    private $opMap = array('and' => '&&', 'or' => '||', 'eq' => '==', 'neq' => '!=', 'ne' => '!=', 'gt' => '>',
                            'lt' => '<', 'ge' => '>=', 'gte' => '>=', 'le' => '<=' , 'lte' => '<=', 'mod' => '%',
                            'not' => '!');

    function __construct($lex, $compiler) {
        $this->lex = $lex;
        $this->lex->parser_class = get_class($this);
        $this->compiler = $compiler;
        $this->compiler->prefix_code = array();
        if ($this->security = isset($this->compiler->context->smarty->security_policy)) {
            $this->php_handling = $this->compiler->context->smarty->security_policy->php_handling;
        } else {
            $this->php_handling = $this->compiler->context->smarty->php_handling;
        }
       $this->asp_tags = (ini_get('asp_tags') != '0');
    }
#line 119 "Smarty_Compiler_Template_Php_Parser.php"

    const TP_VERT                           =  1;
    const TP_COLON                          =  2;
    const TP_TEMPLATEINIT                   =  3;
    const TP_RDEL                           =  4;
    const TP_COMMENT                        =  5;
    const TP_PHPSTARTTAG                    =  6;
    const TP_PHPENDTAG                      =  7;
    const TP_ASPSTARTTAG                    =  8;
    const TP_ASPENDTAG                      =  9;
    const TP_FAKEPHPSTARTTAG                = 10;
    const TP_XMLTAG                         = 11;
    const TP_TEXT                           = 12;
    const TP_STRIPON                        = 13;
    const TP_STRIPOFF                       = 14;
    const TP_LITERALSTART                   = 15;
    const TP_LITERALEND                     = 16;
    const TP_LITERAL                        = 17;
    const TP_LDEL                           = 18;
    const TP_EQUAL                          = 19;
    const TP_ID                             = 20;
    const TP_PTR                            = 21;
    const TP_LDELIF                         = 22;
    const TP_LDELFOR                        = 23;
    const TP_SEMICOLON                      = 24;
    const TP_IDINCDEC                       = 25;
    const TP_TO                             = 26;
    const TP_STEP                           = 27;
    const TP_LDELFOREACH                    = 28;
    const TP_SPACE                          = 29;
    const TP_AS                             = 30;
    const TP_APTR                           = 31;
    const TP_LDELSETFILTER                  = 32;
    const TP_LDELSLASH                      = 33;
    const TP_ATTR                           = 34;
    const TP_COMMA                          = 35;
    const TP_OPENP                          = 36;
    const TP_CLOSEP                         = 37;
    const TP_DOLLAR                         = 38;
    const TP_MATH                           = 39;
    const TP_UNIMATH                        = 40;
    const TP_ANDSYM                         = 41;
    const TP_IFCOND                         = 42;
    const TP_ISIN                           = 43;
    const TP_LOP                            = 44;
    const TP_ISDIVBY                        = 45;
    const TP_ISNOTDIVBY                     = 46;
    const TP_ISEVEN                         = 47;
    const TP_ISNOTEVEN                      = 48;
    const TP_ISEVENBY                       = 49;
    const TP_ISNOTEVENBY                    = 50;
    const TP_ISODD                          = 51;
    const TP_ISNOTODD                       = 52;
    const TP_ISODDBY                        = 53;
    const TP_ISNOTODDBY                     = 54;
    const TP_INSTANCEOF                     = 55;
    const TP_NAMESPACE                      = 56;
    const TP_QMARK                          = 57;
    const TP_NOT                            = 58;
    const TP_TYPECAST                       = 59;
    const TP_NUMBER                         = 60;
    const TP_SINGLEQUOTESTRING              = 61;
    const TP_AT                             = 62;
    const TP_HATCH                          = 63;
    const TP_DOT                            = 64;
    const TP_OPENB                          = 65;
    const TP_CLOSEB                         = 66;
    const TP_DOUBLECOLON                    = 67;
    const TP_QUOTE                          = 68;
    const TP_BACKTICK                       = 69;
    const TP_DOLLARID                       = 70;
    const TP_DQTAG                          = 71;
    const YY_NO_ACTION = 495;
    const YY_ACCEPT_ACTION = 494;
    const YY_ERROR_ACTION = 493;

    const YY_SZ_ACTTAB = 1778;
static public $yy_action = array(
 /*     0 */   200,   46,   45,   47,   10,   43,   13,   11,   36,  228,
 /*    10 */   227,   17,   35,  261,  316,   30,   20,  255,  203,  297,
 /*    20 */   243,  266,  258,  247,  263,  283,   25,  159,   37,  167,
 /*    30 */   234,  237,  212,   29,  207,  198,  200,  185,   46,   45,
 /*    40 */    47,   10,   43,   13,   11,   36,  228,  227,   17,   35,
 /*    50 */   261,  316,   30,   20,  443,  178,  443,   38,   37,  135,
 /*    60 */   176,    7,   57,   29,  250,  182,   64,  116,   19,  220,
 /*    70 */   235,  210,  215,  200,  245,   12,  271,  115,   75,   39,
 /*    80 */   120,  305,   32,  293,   92,  169,   98,  211,  117,  268,
 /*    90 */    44,  301,  239,  251,  249,  156,  296,   40,   41,  242,
 /*   100 */   246,   37,  110,  114,    1,  280,   29,   93,  281,  288,
 /*   110 */   244,   46,   45,   47,   10,   43,   13,   11,   36,  228,
 /*   120 */   227,   17,   35,  261,  316,   30,   20,  200,  311,  256,
 /*   130 */    38,   28,  146,  185,    7,   57,    2,  250,  187,  105,
 /*   140 */   116,   19,  184,  103,  210,  215,  200,  225,   12,   34,
 /*   150 */   115,  314,   39,    7,   57,   37,  200,   97,   21,  116,
 /*   160 */    29,  102,    2,  210,  215,  233,  189,  114,  156,  125,
 /*   170 */    40,   41,  242,  246,  443,  110,  443,    1,  204,   42,
 /*   180 */    93,  494,   58,  253,  203,  297,   31,   38,  200,   48,
 /*   190 */   142,    7,   57,  114,  250,    2,  443,  116,  443,  267,
 /*   200 */   245,  210,  215,  278,   51,   12,  100,  115,  109,   39,
 /*   210 */    44,  169,  112,  188,    6,  268,   37,  301,  239,  251,
 /*   220 */   249,   29,  296,  114,  269,  156,  114,   40,   41,  242,
 /*   230 */   246,   37,  110,  174,    1,  231,   29,   93,  181,  291,
 /*   240 */   283,  152,   37,  180,   38,  217,  146,   29,    7,   57,
 /*   250 */   267,  250,  101,   27,  116,  294,  200,  245,  210,  215,
 /*   260 */    56,   70,   12,  100,  104,  208,   39,  189,  169,  112,
 /*   270 */   175,  291,  268,    2,  301,  239,  251,  249,  212,  296,
 /*   280 */   259,  117,  156,  185,   40,   41,  242,  246,  148,  110,
 /*   290 */   212,    1,  208,  168,   93,  185,  313,   32,  293,   92,
 /*   300 */   158,   38,   15,  131,  114,    7,   57,   29,  250,  267,
 /*   310 */    44,  116,  189,  288,  245,  210,  215,  189,   73,   12,
 /*   320 */   120,  115,    2,   39,  200,  169,  112,  309,  145,  268,
 /*   330 */   180,  301,  239,  251,  249,   59,  296,  267,   19,  156,
 /*   340 */   162,   40,   41,  242,  246,   19,  110,  197,    1,  267,
 /*   350 */   214,   93,  272,  114,  189,   19,    5,  134,   38,  189,
 /*   360 */   136,    3,    7,   57,  200,  250,  188,  113,  116,  177,
 /*   370 */   291,  245,  210,  215,  200,   76,   12,  120,  115,  226,
 /*   380 */    39,  260,  169,  112,  222,  151,  268,  180,  301,  239,
 /*   390 */   251,  249,  289,  296,  267,  443,  156,  443,   40,   41,
 /*   400 */   242,  246,   37,  110,  180,    1,    4,   29,   93,   94,
 /*   410 */     9,  189,   46,   45,   47,   10,   43,   13,   11,   36,
 /*   420 */   228,  227,   17,   35,  261,  316,   30,   20,  189,   14,
 /*   430 */   154,   38,  180,  146,  108,    7,   57,  114,  250,  267,
 /*   440 */    56,  116,  200,   42,  114,  210,  215,  117,  245,   18,
 /*   450 */   147,  107,   68,   39,  120,  443,  189,  443,  190,  169,
 /*   460 */   112,  149,   27,  268,  232,  301,  239,  251,  249,  156,
 /*   470 */   296,   40,   41,  242,  246,   27,  110,  300,    1,  264,
 /*   480 */    27,   93,  302,   94,    9,  144,  256,  180,   38,  238,
 /*   490 */   157,  230,    7,   57,  267,  250,   99,   62,  116,  117,
 /*   500 */   240,  245,  210,  215,  218,   89,   18,  120,  107,  206,
 /*   510 */    39,  189,  169,  112,  209,  155,  268,  180,  301,  239,
 /*   520 */   251,  249,  117,  296,  267,  286,  143,  166,   40,   41,
 /*   530 */   242,  246,   19,  110,  254,    1,  267,  219,   93,  132,
 /*   540 */   287,  189,  236,   16,   24,   38,   56,  146,  141,    7,
 /*   550 */    57,  229,  250,  188,   19,  116,  133,  267,  245,  210,
 /*   560 */   215,   22,   78,    8,  120,  115,   19,   39,  137,  169,
 /*   570 */   112,  303,  139,  268,  276,  301,  239,  251,  249,  171,
 /*   580 */   296,  267,  191,  156,  165,   40,   41,  242,  246,  163,
 /*   590 */   110,  160,    1,  267,  172,   93,   33,  265,   56,  164,
 /*   600 */   267,   24,   38,  189,  138,  224,    7,   57,  267,  250,
 /*   610 */   185,   19,  116,  193,  284,  245,  210,  215,  200,   49,
 /*   620 */    12,  106,  115,   26,   39,  275,  169,  112,  186,  140,
 /*   630 */   268,  192,  213,  239,  251,  249,  183,  296,  121,  150,
 /*   640 */   156,  170,   40,   41,  242,  246,   63,  110,  161,    1,
 /*   650 */     5,  200,   93,  216,  205,  308,   46,   45,   47,   10,
 /*   660 */    43,   13,   11,   36,  228,  227,   17,   35,  261,  316,
 /*   670 */    30,   20,  200,   23,  179,  122,  299,  252,  111,  262,
 /*   680 */   257,  231,  241,  315,  285,   95,  202,   91,  270,   46,
 /*   690 */    45,   47,   10,   43,   13,   11,   36,  228,  227,   17,
 /*   700 */    35,  261,  316,   30,   20,  223,    6,   61,  291,  291,
 /*   710 */    46,   45,   47,   10,   43,   13,   11,   36,  228,  227,
 /*   720 */    17,   35,  261,  316,   30,   20,  248,  200,  295,  306,
 /*   730 */   310,  277,  282,  292,  290,  279,  312,  298,  167,  291,
 /*   740 */   291,   38,  291,  291,  291,    7,   57,  291,  291,  291,
 /*   750 */   291,  116,  291,  200,  291,  210,  215,  291,  291,  291,
 /*   760 */   291,  291,  291,  304,  291,   46,   45,   47,   10,   43,
 /*   770 */    13,   11,   36,  228,  227,   17,   35,  261,  316,   30,
 /*   780 */    20,  200,  173,  291,  291,  291,  291,  291,  291,  291,
 /*   790 */   291,   46,   45,   47,   10,   43,   13,   11,   36,  228,
 /*   800 */   227,   17,   35,  261,  316,   30,   20,  291,  291,  291,
 /*   810 */   291,  291,  291,  291,  291,  291,  291,  291,  291,   46,
 /*   820 */    45,   47,   10,   43,   13,   11,   36,  228,  227,   17,
 /*   830 */    35,  261,  316,   30,   20,  200,  291,  291,  271,  291,
 /*   840 */   291,  291,  245,  291,  291,  291,   88,  291,  120,  307,
 /*   850 */   291,  200,  291,  169,  112,  291,  291,  268,  291,  301,
 /*   860 */   239,  251,  249,  291,  296,  291,  291,  291,  291,  291,
 /*   870 */   291,  291,  194,   46,   45,   47,   10,   43,   13,   11,
 /*   880 */    36,  228,  227,   17,   35,  261,  316,   30,   20,   46,
 /*   890 */    45,   47,   10,   43,   13,   11,   36,  228,  227,   17,
 /*   900 */    35,  261,  316,   30,   20,  200,  291,  291,  245,  410,
 /*   910 */   291,  291,   88,  291,  120,  291,  273,  291,  291,  169,
 /*   920 */   112,  291,  291,  268,  291,  301,  239,  251,  249,  410,
 /*   930 */   296,  410,  410,  291,  410,  410,  410,  291,  196,  410,
 /*   940 */   410,    2,  410,   46,   45,   47,   10,   43,   13,   11,
 /*   950 */    36,  228,  227,   17,   35,  261,  316,   30,   20,  291,
 /*   960 */   410,  291,  291,  291,  245,  291,  291,  291,   75,  291,
 /*   970 */   120,  410,  114,  291,  410,  169,   98,  291,  291,  268,
 /*   980 */   291,  301,  239,  251,  249,  291,  296,  291,  291,  245,
 /*   990 */   291,  291,  291,   88,  291,  120,  291,  199,  274,  291,
 /*  1000 */   169,  112,  291,  291,  268,  291,  301,  239,  251,  249,
 /*  1010 */   291,  296,  245,  291,  291,  291,   88,  291,  120,  195,
 /*  1020 */   291,  291,  291,  169,  112,  291,  291,  268,  291,  301,
 /*  1030 */   239,  251,  249,  245,  296,  291,  291,   86,  291,  120,
 /*  1040 */   291,  291,  201,  291,  169,  112,  291,  291,  268,  291,
 /*  1050 */   301,  239,  251,  249,  291,  296,  245,  291,  291,  291,
 /*  1060 */    66,  291,  120,  291,  291,  291,  291,  169,  112,  291,
 /*  1070 */   291,  268,  291,  301,  239,  251,  249,  245,  296,  291,
 /*  1080 */   291,   69,  291,  120,  291,  291,  291,  291,  169,  112,
 /*  1090 */   291,  291,  268,  291,  221,  239,  251,  249,  291,  296,
 /*  1100 */   245,  291,  291,  291,   80,  291,  120,  291,  291,  291,
 /*  1110 */   291,  169,  112,  291,  291,  268,  291,  301,  239,  251,
 /*  1120 */   249,  245,  296,  291,  291,   79,  291,  120,  291,  291,
 /*  1130 */   291,  291,  169,  112,  291,  291,  268,  291,  301,  239,
 /*  1140 */   251,  249,  291,  296,  245,  291,  291,  291,   52,  291,
 /*  1150 */   120,  291,  291,  291,  291,  169,  112,  291,  291,  268,
 /*  1160 */   291,  301,  239,  251,  249,  245,  296,  291,  291,   74,
 /*  1170 */   291,  120,  291,  291,  291,  291,  169,  112,  291,  291,
 /*  1180 */   268,  291,  301,  239,  251,  249,  291,  296,  245,  291,
 /*  1190 */   291,  291,   84,  291,  120,  291,  291,  291,  291,  169,
 /*  1200 */   112,  291,  291,  268,  291,  301,  239,  251,  249,  245,
 /*  1210 */   296,  291,  291,   53,  291,  120,  291,  291,  291,  291,
 /*  1220 */   169,  112,  291,  291,  268,  291,  301,  239,  251,  249,
 /*  1230 */   291,  296,  245,  291,  291,  291,   67,  291,  120,  291,
 /*  1240 */   291,  291,  291,  169,   96,  291,  291,  268,  291,  301,
 /*  1250 */   239,  251,  249,  245,  296,  291,  291,   90,  291,  120,
 /*  1260 */   291,  291,  291,  291,  169,  112,  291,  291,  268,  291,
 /*  1270 */   301,  239,  251,  249,  291,  296,  245,  291,  291,  291,
 /*  1280 */    82,  291,  120,  291,  291,  291,  291,  169,  112,  291,
 /*  1290 */   291,  268,  291,  301,  239,  251,  249,  245,  296,  291,
 /*  1300 */   291,   50,  291,  120,  291,  291,  291,  291,  169,  112,
 /*  1310 */   291,  291,  268,  291,  301,  239,  251,  249,  291,  296,
 /*  1320 */   245,  291,  291,  291,   54,  291,  120,  291,  291,  291,
 /*  1330 */   291,  169,  112,  291,  291,  268,  291,  301,  239,  251,
 /*  1340 */   249,  245,  296,  291,  291,   87,  291,  120,  291,  291,
 /*  1350 */   291,  291,  169,  112,  291,  291,  268,  291,  301,  239,
 /*  1360 */   251,  249,  291,  296,  245,  291,  291,  291,   65,  291,
 /*  1370 */   120,  291,  291,  291,  291,  169,  112,  291,  291,  268,
 /*  1380 */   291,  301,  239,  251,  249,  245,  296,  291,  291,   83,
 /*  1390 */   291,  120,  291,  291,  291,  291,  169,  112,  291,  291,
 /*  1400 */   268,  291,  301,  239,  251,  249,  291,  296,  245,  291,
 /*  1410 */   291,  291,   55,  291,  106,  291,  291,  291,  291,  169,
 /*  1420 */   112,  291,  291,  268,  291,  301,  239,  251,  249,  245,
 /*  1430 */   296,  291,  291,   71,  291,  120,  291,  291,  291,  291,
 /*  1440 */   169,  112,  291,  291,  268,  291,  301,  239,  251,  249,
 /*  1450 */   291,  296,  245,  291,  291,  291,   81,  291,  120,  291,
 /*  1460 */   291,  291,  291,  169,  112,  291,  291,  268,  291,  301,
 /*  1470 */   239,  251,  249,  245,  296,  291,  291,   85,  291,  120,
 /*  1480 */   291,  291,  291,  291,  169,  112,  291,  291,  268,  291,
 /*  1490 */   301,  239,  251,  249,  291,  296,  245,  291,  291,  291,
 /*  1500 */    77,  291,  120,  291,  291,  291,  291,  169,  112,  291,
 /*  1510 */   291,  268,  291,  301,  239,  251,  249,  245,  296,  291,
 /*  1520 */   291,   72,  291,  120,  291,  291,  291,  291,  169,  112,
 /*  1530 */   291,  291,  268,  291,  301,  239,  251,  249,  291,  296,
 /*  1540 */   245,  291,  291,  291,   70,  291,  120,  291,  291,  291,
 /*  1550 */   291,  169,  112,  291,  291,  268,  291,  301,  239,  251,
 /*  1560 */   249,  245,  296,  291,  291,  291,  291,  120,  291,  291,
 /*  1570 */   291,  291,  169,  119,  291,  291,  291,  291,  301,  239,
 /*  1580 */   251,  249,  291,  296,  245,  291,  291,  291,  291,  291,
 /*  1590 */   120,  291,  291,  291,  291,  169,  130,  291,  291,  291,
 /*  1600 */   291,  301,  239,  251,  249,  245,  296,  291,  291,  291,
 /*  1610 */   291,  120,  291,  291,  291,  291,  169,  123,  291,  291,
 /*  1620 */   291,  291,  301,  239,  251,  249,  291,  296,  245,  291,
 /*  1630 */   291,  291,  291,  291,  120,  291,  291,  291,  291,  169,
 /*  1640 */   129,  291,  291,  291,  291,  301,  239,  251,  249,  245,
 /*  1650 */   296,  291,  291,  291,  291,  120,  291,  291,  291,  291,
 /*  1660 */   169,  127,  291,  291,  291,  291,  301,  239,  251,  249,
 /*  1670 */   291,  296,  245,  291,  291,  291,  291,  291,  120,  291,
 /*  1680 */   291,  291,  291,  169,  118,  291,  291,  291,  291,  301,
 /*  1690 */   239,  251,  249,  245,  296,  291,  291,  291,  291,  120,
 /*  1700 */   291,  291,  291,  291,  169,  126,  291,  291,  291,  291,
 /*  1710 */   301,  239,  251,  249,  291,  296,  245,  291,  291,  291,
 /*  1720 */   291,  291,  120,  291,  291,  291,  291,  169,  128,  291,
 /*  1730 */   291,  291,  291,  301,  239,  251,  249,  245,  296,  291,
 /*  1740 */   291,  291,  291,  120,  291,  291,  291,  291,  169,  124,
 /*  1750 */   291,  153,  291,   60,  301,  239,  251,  249,  291,  296,
 /*  1760 */   267,  291,  291,  291,  291,  291,  291,  241,  291,  291,
 /*  1770 */   291,  291,  291,  291,  291,  291,  291,  189,
    );
    static public $yy_lookahead = array(
 /*     0 */     1,   39,   40,   41,   42,   43,   44,   45,   46,   47,
 /*    10 */    48,   49,   50,   51,   52,   53,   54,   75,   76,   77,
 /*    20 */     6,    7,    8,    9,   10,   12,   27,   99,   29,   15,
 /*    30 */    16,   17,   82,   34,   84,   85,    1,   87,   39,   40,
 /*    40 */    41,   42,   43,   44,   45,   46,   47,   48,   49,   50,
 /*    50 */    51,   52,   53,   54,   18,   24,   20,   18,   29,   20,
 /*    60 */    31,   22,   23,   34,   25,   30,   35,   28,   18,   20,
 /*    70 */    20,   32,   33,    1,   76,   36,    4,   38,   80,   40,
 /*    80 */    82,   68,   69,   70,   71,   87,   88,   38,   38,   91,
 /*    90 */    55,   93,   94,   95,   96,   56,   98,   58,   59,   60,
 /*   100 */    61,   29,   63,   67,   65,   66,   34,   68,  110,  108,
 /*   110 */    60,   39,   40,   41,   42,   43,   44,   45,   46,   47,
 /*   120 */    48,   49,   50,   51,   52,   53,   54,    1,   82,   92,
 /*   130 */    18,   31,   20,   87,   22,   23,   36,   25,   92,  102,
 /*   140 */    28,   18,   83,   20,   32,   33,    1,   21,   36,   18,
 /*   150 */    38,  105,   40,   22,   23,   29,    1,   87,    2,   28,
 /*   160 */    34,   38,   36,   32,   33,  101,  107,   67,   56,  105,
 /*   170 */    58,   59,   60,   61,   18,   63,   20,   65,   19,    2,
 /*   180 */    68,   73,   74,   75,   76,   77,   31,   18,    1,   20,
 /*   190 */    81,   22,   23,   67,   25,   36,   18,   28,   20,   90,
 /*   200 */    76,   32,   33,   20,   80,   36,   82,   38,   84,   40,
 /*   210 */    55,   87,   88,  107,   36,   91,   29,   93,   94,   95,
 /*   220 */    96,   34,   98,   67,  104,   56,   67,   58,   59,   60,
 /*   230 */    61,   29,   63,   31,   65,  100,   34,   68,  103,  104,
 /*   240 */    12,   81,   29,   83,   18,   62,   20,   34,   22,   23,
 /*   250 */    90,   25,   87,   35,   28,   37,    1,   76,   32,   33,
 /*   260 */    21,   80,   36,   82,   38,   84,   40,  107,   87,   88,
 /*   270 */   103,  104,   91,   36,   93,   94,   95,   96,   82,   98,
 /*   280 */    84,   38,   56,   87,   58,   59,   60,   61,   83,   63,
 /*   290 */    82,   65,   84,   83,   68,   87,   68,   69,   70,   71,
 /*   300 */    81,   18,   29,   20,   67,   22,   23,   34,   25,   90,
 /*   310 */    55,   28,  107,  108,   76,   32,   33,  107,   80,   36,
 /*   320 */    82,   38,   36,   40,    1,   87,   88,    4,   81,   91,
 /*   330 */    83,   93,   94,   95,   96,   83,   98,   90,   18,   56,
 /*   340 */    81,   58,   59,   60,   61,   18,   63,   20,   65,   90,
 /*   350 */    64,   68,   66,   67,  107,   18,   36,   20,   18,  107,
 /*   360 */    20,   35,   22,   23,    1,   25,  107,   87,   28,  103,
 /*   370 */   104,   76,   32,   33,    1,   80,   36,   82,   38,    2,
 /*   380 */    40,   29,   87,   88,   21,   81,   91,   83,   93,   94,
 /*   390 */    95,   96,   66,   98,   90,   18,   56,   20,   58,   59,
 /*   400 */    60,   61,   29,   63,   83,   65,   36,   34,   68,   64,
 /*   410 */    65,  107,   39,   40,   41,   42,   43,   44,   45,   46,
 /*   420 */    47,   48,   49,   50,   51,   52,   53,   54,  107,   86,
 /*   430 */    81,   18,   83,   20,   25,   22,   23,   67,   25,   90,
 /*   440 */    21,   28,    1,    2,   67,   32,   33,   38,   76,   36,
 /*   450 */    99,   38,   80,   40,   82,   18,  107,   20,   63,   87,
 /*   460 */    88,   86,   35,   91,   37,   93,   94,   95,   96,   56,
 /*   470 */    98,   58,   59,   60,   61,   35,   63,   37,   65,    4,
 /*   480 */    35,   68,   37,   64,   65,   81,   92,   83,   18,   77,
 /*   490 */    20,   79,   22,   23,   90,   25,  102,   36,   28,   38,
 /*   500 */    20,   76,   32,   33,   20,   80,   36,   82,   38,   76,
 /*   510 */    40,  107,   87,   88,   20,   81,   91,   83,   93,   94,
 /*   520 */    95,   96,   38,   98,   90,   92,   56,   81,   58,   59,
 /*   530 */    60,   61,   18,   63,   20,   65,   90,   87,   68,  111,
 /*   540 */   112,  107,   92,   19,   19,   18,   21,   20,   81,   22,
 /*   550 */    23,   20,   25,  107,   18,   28,   20,   90,   76,   32,
 /*   560 */    33,   57,   80,   36,   82,   38,   18,   40,   20,   87,
 /*   570 */    88,    4,   81,   91,   66,   93,   94,   95,   96,   83,
 /*   580 */    98,   90,   92,   56,   81,   58,   59,   60,   61,   99,
 /*   590 */    63,   81,   65,   90,   20,   68,   19,   37,   21,   81,
 /*   600 */    90,   19,   18,  107,   20,   82,   22,   23,   90,   25,
 /*   610 */    87,   18,   28,   20,    4,   76,   32,   33,    1,   80,
 /*   620 */    36,   82,   38,   26,   40,   20,   87,   88,   63,   99,
 /*   630 */    91,   20,   93,   94,   95,   96,   89,   98,   20,   99,
 /*   640 */    56,   89,   58,   59,   60,   61,   89,   63,   99,   65,
 /*   650 */    36,    1,   68,   62,   37,   69,   39,   40,   41,   42,
 /*   660 */    43,   44,   45,   46,   47,   48,   49,   50,   51,   52,
 /*   670 */    53,   54,    1,    2,   24,   20,   20,   20,   20,   90,
 /*   680 */    97,  100,   97,  112,   97,   87,   87,   78,   16,   39,
 /*   690 */    40,   41,   42,   43,   44,   45,   46,   47,   48,   49,
 /*   700 */    50,   51,   52,   53,   54,   62,   36,   99,  113,  113,
 /*   710 */    39,   40,   41,   42,   43,   44,   45,   46,   47,   48,
 /*   720 */    49,   50,   51,   52,   53,   54,    3,    1,    5,    6,
 /*   730 */     7,    8,    9,   10,   11,   12,   13,   14,   15,  113,
 /*   740 */   113,   18,  113,  113,  113,   22,   23,  113,  113,  113,
 /*   750 */   113,   28,  113,    1,  113,   32,   33,  113,  113,  113,
 /*   760 */   113,  113,  113,   37,  113,   39,   40,   41,   42,   43,
 /*   770 */    44,   45,   46,   47,   48,   49,   50,   51,   52,   53,
 /*   780 */    54,    1,   30,  113,  113,  113,  113,  113,  113,  113,
 /*   790 */   113,   39,   40,   41,   42,   43,   44,   45,   46,   47,
 /*   800 */    48,   49,   50,   51,   52,   53,   54,  113,  113,  113,
 /*   810 */   113,  113,  113,  113,  113,  113,  113,  113,  113,   39,
 /*   820 */    40,   41,   42,   43,   44,   45,   46,   47,   48,   49,
 /*   830 */    50,   51,   52,   53,   54,    1,  113,  113,    4,  113,
 /*   840 */   113,  113,   76,  113,  113,  113,   80,  113,   82,   69,
 /*   850 */   113,    1,  113,   87,   88,  113,  113,   91,  113,   93,
 /*   860 */    94,   95,   96,  113,   98,  113,  113,  113,  113,  113,
 /*   870 */   113,  113,  106,   39,   40,   41,   42,   43,   44,   45,
 /*   880 */    46,   47,   48,   49,   50,   51,   52,   53,   54,   39,
 /*   890 */    40,   41,   42,   43,   44,   45,   46,   47,   48,   49,
 /*   900 */    50,   51,   52,   53,   54,    1,  113,  113,   76,    4,
 /*   910 */   113,  113,   80,  113,   82,  113,   66,  113,  113,   87,
 /*   920 */    88,  113,  113,   91,  113,   93,   94,   95,   96,   24,
 /*   930 */    98,   26,   27,  113,   29,   30,   31,  113,  106,   34,
 /*   940 */    35,   36,   37,   39,   40,   41,   42,   43,   44,   45,
 /*   950 */    46,   47,   48,   49,   50,   51,   52,   53,   54,  113,
 /*   960 */    55,  113,  113,  113,   76,  113,  113,  113,   80,  113,
 /*   970 */    82,   66,   67,  113,   69,   87,   88,  113,  113,   91,
 /*   980 */   113,   93,   94,   95,   96,  113,   98,  113,  113,   76,
 /*   990 */   113,  113,  113,   80,  113,   82,  113,  109,  110,  113,
 /*  1000 */    87,   88,  113,  113,   91,  113,   93,   94,   95,   96,
 /*  1010 */   113,   98,   76,  113,  113,  113,   80,  113,   82,  106,
 /*  1020 */   113,  113,  113,   87,   88,  113,  113,   91,  113,   93,
 /*  1030 */    94,   95,   96,   76,   98,  113,  113,   80,  113,   82,
 /*  1040 */   113,  113,  106,  113,   87,   88,  113,  113,   91,  113,
 /*  1050 */    93,   94,   95,   96,  113,   98,   76,  113,  113,  113,
 /*  1060 */    80,  113,   82,  113,  113,  113,  113,   87,   88,  113,
 /*  1070 */   113,   91,  113,   93,   94,   95,   96,   76,   98,  113,
 /*  1080 */   113,   80,  113,   82,  113,  113,  113,  113,   87,   88,
 /*  1090 */   113,  113,   91,  113,   93,   94,   95,   96,  113,   98,
 /*  1100 */    76,  113,  113,  113,   80,  113,   82,  113,  113,  113,
 /*  1110 */   113,   87,   88,  113,  113,   91,  113,   93,   94,   95,
 /*  1120 */    96,   76,   98,  113,  113,   80,  113,   82,  113,  113,
 /*  1130 */   113,  113,   87,   88,  113,  113,   91,  113,   93,   94,
 /*  1140 */    95,   96,  113,   98,   76,  113,  113,  113,   80,  113,
 /*  1150 */    82,  113,  113,  113,  113,   87,   88,  113,  113,   91,
 /*  1160 */   113,   93,   94,   95,   96,   76,   98,  113,  113,   80,
 /*  1170 */   113,   82,  113,  113,  113,  113,   87,   88,  113,  113,
 /*  1180 */    91,  113,   93,   94,   95,   96,  113,   98,   76,  113,
 /*  1190 */   113,  113,   80,  113,   82,  113,  113,  113,  113,   87,
 /*  1200 */    88,  113,  113,   91,  113,   93,   94,   95,   96,   76,
 /*  1210 */    98,  113,  113,   80,  113,   82,  113,  113,  113,  113,
 /*  1220 */    87,   88,  113,  113,   91,  113,   93,   94,   95,   96,
 /*  1230 */   113,   98,   76,  113,  113,  113,   80,  113,   82,  113,
 /*  1240 */   113,  113,  113,   87,   88,  113,  113,   91,  113,   93,
 /*  1250 */    94,   95,   96,   76,   98,  113,  113,   80,  113,   82,
 /*  1260 */   113,  113,  113,  113,   87,   88,  113,  113,   91,  113,
 /*  1270 */    93,   94,   95,   96,  113,   98,   76,  113,  113,  113,
 /*  1280 */    80,  113,   82,  113,  113,  113,  113,   87,   88,  113,
 /*  1290 */   113,   91,  113,   93,   94,   95,   96,   76,   98,  113,
 /*  1300 */   113,   80,  113,   82,  113,  113,  113,  113,   87,   88,
 /*  1310 */   113,  113,   91,  113,   93,   94,   95,   96,  113,   98,
 /*  1320 */    76,  113,  113,  113,   80,  113,   82,  113,  113,  113,
 /*  1330 */   113,   87,   88,  113,  113,   91,  113,   93,   94,   95,
 /*  1340 */    96,   76,   98,  113,  113,   80,  113,   82,  113,  113,
 /*  1350 */   113,  113,   87,   88,  113,  113,   91,  113,   93,   94,
 /*  1360 */    95,   96,  113,   98,   76,  113,  113,  113,   80,  113,
 /*  1370 */    82,  113,  113,  113,  113,   87,   88,  113,  113,   91,
 /*  1380 */   113,   93,   94,   95,   96,   76,   98,  113,  113,   80,
 /*  1390 */   113,   82,  113,  113,  113,  113,   87,   88,  113,  113,
 /*  1400 */    91,  113,   93,   94,   95,   96,  113,   98,   76,  113,
 /*  1410 */   113,  113,   80,  113,   82,  113,  113,  113,  113,   87,
 /*  1420 */    88,  113,  113,   91,  113,   93,   94,   95,   96,   76,
 /*  1430 */    98,  113,  113,   80,  113,   82,  113,  113,  113,  113,
 /*  1440 */    87,   88,  113,  113,   91,  113,   93,   94,   95,   96,
 /*  1450 */   113,   98,   76,  113,  113,  113,   80,  113,   82,  113,
 /*  1460 */   113,  113,  113,   87,   88,  113,  113,   91,  113,   93,
 /*  1470 */    94,   95,   96,   76,   98,  113,  113,   80,  113,   82,
 /*  1480 */   113,  113,  113,  113,   87,   88,  113,  113,   91,  113,
 /*  1490 */    93,   94,   95,   96,  113,   98,   76,  113,  113,  113,
 /*  1500 */    80,  113,   82,  113,  113,  113,  113,   87,   88,  113,
 /*  1510 */   113,   91,  113,   93,   94,   95,   96,   76,   98,  113,
 /*  1520 */   113,   80,  113,   82,  113,  113,  113,  113,   87,   88,
 /*  1530 */   113,  113,   91,  113,   93,   94,   95,   96,  113,   98,
 /*  1540 */    76,  113,  113,  113,   80,  113,   82,  113,  113,  113,
 /*  1550 */   113,   87,   88,  113,  113,   91,  113,   93,   94,   95,
 /*  1560 */    96,   76,   98,  113,  113,  113,  113,   82,  113,  113,
 /*  1570 */   113,  113,   87,   88,  113,  113,  113,  113,   93,   94,
 /*  1580 */    95,   96,  113,   98,   76,  113,  113,  113,  113,  113,
 /*  1590 */    82,  113,  113,  113,  113,   87,   88,  113,  113,  113,
 /*  1600 */   113,   93,   94,   95,   96,   76,   98,  113,  113,  113,
 /*  1610 */   113,   82,  113,  113,  113,  113,   87,   88,  113,  113,
 /*  1620 */   113,  113,   93,   94,   95,   96,  113,   98,   76,  113,
 /*  1630 */   113,  113,  113,  113,   82,  113,  113,  113,  113,   87,
 /*  1640 */    88,  113,  113,  113,  113,   93,   94,   95,   96,   76,
 /*  1650 */    98,  113,  113,  113,  113,   82,  113,  113,  113,  113,
 /*  1660 */    87,   88,  113,  113,  113,  113,   93,   94,   95,   96,
 /*  1670 */   113,   98,   76,  113,  113,  113,  113,  113,   82,  113,
 /*  1680 */   113,  113,  113,   87,   88,  113,  113,  113,  113,   93,
 /*  1690 */    94,   95,   96,   76,   98,  113,  113,  113,  113,   82,
 /*  1700 */   113,  113,  113,  113,   87,   88,  113,  113,  113,  113,
 /*  1710 */    93,   94,   95,   96,  113,   98,   76,  113,  113,  113,
 /*  1720 */   113,  113,   82,  113,  113,  113,  113,   87,   88,  113,
 /*  1730 */   113,  113,  113,   93,   94,   95,   96,   76,   98,  113,
 /*  1740 */   113,  113,  113,   82,  113,  113,  113,  113,   87,   88,
 /*  1750 */   113,   81,  113,   83,   93,   94,   95,   96,  113,   98,
 /*  1760 */    90,  113,  113,  113,  113,  113,  113,   97,  113,  113,
 /*  1770 */   113,  113,  113,  113,  113,  113,  113,  107,
);
    const YY_SHIFT_USE_DFLT = -39;
    const YY_SHIFT_MAX = 226;
    static public $yy_shift_ofst = array(
 /*     0 */   723,  584,  112,  584,  112,  112,  112,  527,  527,   39,
 /*    10 */   112,  112,  112,  112,  112,  340,  112,  112,  112,  112,
 /*    20 */   112,  283,  226,  112,  112,  112,  112,  112,  112,  112,
 /*    30 */   112,  112,  112,  112,  169,  112,  112,  340,  169,  413,
 /*    40 */   413,  413,  413,  413,  470,  413,  413,  413,  126,   72,
 /*    50 */    -1,  373,  373,  373,  373,  373,  123,  461,  723,  187,
 /*    60 */   187,  419,  461,  441,  461,  726,  834,  752,  850,  780,
 /*    70 */   617,  650,  671,  904,  904,  904,  904,  904,  904,  904,
 /*    80 */   904,  904,  904,  904,  904,  904,  904,  904,  904,  -38,
 /*    90 */   -38,   14,  131,   13,   50,   29,   35,  202,  155,  514,
 /*   100 */   525,  213,  593,  320,  536,  514,  577,  548,  213,  213,
 /*   110 */   484,  363,  255,  213,   49,  337,  273,  327,  145,  145,
 /*   120 */   239,  145,  145,  145,  145,  239,  145,  145,  145,  145,
 /*   130 */   -39,  905,  228,  156,  377,  286,  159,   36,  100,  213,
 /*   140 */   345,  213,  213,  370,  213,  213,  237,  345,  323,  409,
 /*   150 */   345,  213,  213,  213,  213,  213,  370,  237,  213,  345,
 /*   160 */   213,  345,  213,  345,  213,  213,  213,  672,  145,  643,
 /*   170 */   177,  145,  670,  243,  243,  239,  243,  239,  352,  352,
 /*   180 */   145,  239,  243,  177,  145,  -39,  -39,  -39,  -39,  -39,
 /*   190 */   -39,  -39,  -39,  178,  427,  440,  445,  437,   31,  326,
 /*   200 */   183,  218,  524,  475,  480,  504,  610,  597,  560,  508,
 /*   210 */   611,  574,  582,  567,  494,  658,  531,  605,  565,  591,
 /*   220 */   614,  586,  655,  656,  395,  618,  657,
);
    const YY_REDUCE_USE_DFLT = -73;
    const YY_REDUCE_MAX = 192;
    static public $yy_reduce_ofst = array(
 /*     0 */   108,  888,  832,   -2,  913,  766,  936,  124,  181,  372,
 /*    10 */   957, 1200, 1464, 1420, 1353, 1156, 1133, 1045, 1288,  980,
 /*    20 */  1089,  425, 1441, 1177, 1265, 1244, 1221, 1309, 1397, 1376,
 /*    30 */   238, 1024, 1001, 1068,  539,  295,  482, 1112, 1332, 1552,
 /*    40 */  1529, 1485, 1508, 1596, 1640, 1617, 1661, 1573, 1670,  247,
 /*    50 */   349,  404,  304,  434,  160,  247,   46,  -50,  -58,  259,
 /*    60 */   446,  135,  208,  205,  196,  321,  321,  321,  321,  321,
 /*    70 */   321,  321,  321,  321,  321,  321,  321,  321,  321,  321,
 /*    80 */   321,  321,  321,  321,  321,  321,  321,  321,  321,  321,
 /*    90 */   321,  412,  433,  428,  450,  491,   59,  467,   59,  394,
 /*   100 */   266,  510,   37,  490,   37,  394,  266,   37,  518,  503,
 /*   110 */   523,  496,   59,  109,   64,   37,  219,   37,   59,   59,
 /*   120 */   266,  252,  210,   59,   59,  167,   59,   59,   59,   59,
 /*   130 */    59,  585,  571,  587,  587,  585,  585,  587,  585,  589,
 /*   140 */   581,  589,  589,  583,  589,  589,  585,  581,  106,  599,
 /*   150 */   581,  589,  589,  589,  589,  589,  583,  585,  589,  581,
 /*   160 */   589,  581,  589,  581,  589,  589,  589,  609,  106,  -72,
 /*   170 */     1,  106,  608,  598,  280,  120,  165,  120,  343,  375,
 /*   180 */   106,  120,   70,    1,  106,  -72,  351,  540,  552,  547,
 /*   190 */   530,  549,  557,
);
    static public $yyExpectedTokens = array(
        /* 0 */ array(3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 22, 23, 28, 32, 33, ),
        /* 1 */ array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68, ),
        /* 2 */ array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68, ),
        /* 3 */ array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68, ),
        /* 4 */ array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68, ),
        /* 5 */ array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68, ),
        /* 6 */ array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68, ),
        /* 7 */ array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68, ),
        /* 8 */ array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68, ),
        /* 9 */ array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 66, 68, ),
        /* 10 */ array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68, ),
        /* 11 */ array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68, ),
        /* 12 */ array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68, ),
        /* 13 */ array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68, ),
        /* 14 */ array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68, ),
        /* 15 */ array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68, ),
        /* 16 */ array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68, ),
        /* 17 */ array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68, ),
        /* 18 */ array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68, ),
        /* 19 */ array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68, ),
        /* 20 */ array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68, ),
        /* 21 */ array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68, ),
        /* 22 */ array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68, ),
        /* 23 */ array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68, ),
        /* 24 */ array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68, ),
        /* 25 */ array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68, ),
        /* 26 */ array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68, ),
        /* 27 */ array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68, ),
        /* 28 */ array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68, ),
        /* 29 */ array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68, ),
        /* 30 */ array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68, ),
        /* 31 */ array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68, ),
        /* 32 */ array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68, ),
        /* 33 */ array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68, ),
        /* 34 */ array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68, ),
        /* 35 */ array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68, ),
        /* 36 */ array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68, ),
        /* 37 */ array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68, ),
        /* 38 */ array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68, ),
        /* 39 */ array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68, ),
        /* 40 */ array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68, ),
        /* 41 */ array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68, ),
        /* 42 */ array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68, ),
        /* 43 */ array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68, ),
        /* 44 */ array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68, ),
        /* 45 */ array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68, ),
        /* 46 */ array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68, ),
        /* 47 */ array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68, ),
        /* 48 */ array(1, 21, 29, 34, 36, 67, ),
        /* 49 */ array(1, 4, 29, 34, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, ),
        /* 50 */ array(1, 27, 29, 34, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, ),
        /* 51 */ array(1, 29, 34, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, ),
        /* 52 */ array(1, 29, 34, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, ),
        /* 53 */ array(1, 29, 34, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, ),
        /* 54 */ array(1, 29, 34, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, ),
        /* 55 */ array(1, 29, 34, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, ),
        /* 56 */ array(18, 20, 38, ),
        /* 57 */ array(36, 38, ),
        /* 58 */ array(3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 22, 23, 28, 32, 33, ),
        /* 59 */ array(1, 29, 34, ),
        /* 60 */ array(1, 29, 34, ),
        /* 61 */ array(21, 64, 65, ),
        /* 62 */ array(36, 38, ),
        /* 63 */ array(1, 2, ),
        /* 64 */ array(36, 38, ),
        /* 65 */ array(1, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, ),
        /* 66 */ array(1, 4, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, ),
        /* 67 */ array(1, 30, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, ),
        /* 68 */ array(1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 66, ),
        /* 69 */ array(1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 69, ),
        /* 70 */ array(1, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, ),
        /* 71 */ array(1, 24, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, ),
        /* 72 */ array(1, 2, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, ),
        /* 73 */ array(1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, ),
        /* 74 */ array(1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, ),
        /* 75 */ array(1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, ),
        /* 76 */ array(1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, ),
        /* 77 */ array(1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, ),
        /* 78 */ array(1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, ),
        /* 79 */ array(1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, ),
        /* 80 */ array(1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, ),
        /* 81 */ array(1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, ),
        /* 82 */ array(1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, ),
        /* 83 */ array(1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, ),
        /* 84 */ array(1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, ),
        /* 85 */ array(1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, ),
        /* 86 */ array(1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, ),
        /* 87 */ array(1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, ),
        /* 88 */ array(1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, ),
        /* 89 */ array(39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, ),
        /* 90 */ array(39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, ),
        /* 91 */ array(6, 7, 8, 9, 10, 15, 16, 17, ),
        /* 92 */ array(18, 22, 23, 28, 32, 33, ),
        /* 93 */ array(12, 68, 69, 70, 71, ),
        /* 94 */ array(18, 20, 38, 60, ),
        /* 95 */ array(29, 31, 34, ),
        /* 96 */ array(1, 30, 55, ),
        /* 97 */ array(29, 31, 34, ),
        /* 98 */ array(1, 31, 55, ),
        /* 99 */ array(18, 20, ),
        /* 100 */ array(19, 21, ),
        /* 101 */ array(29, 34, ),
        /* 102 */ array(18, 20, ),
        /* 103 */ array(18, 36, ),
        /* 104 */ array(18, 20, ),
        /* 105 */ array(18, 20, ),
        /* 106 */ array(19, 21, ),
        /* 107 */ array(18, 20, ),
        /* 108 */ array(29, 34, ),
        /* 109 */ array(29, 34, ),
        /* 110 */ array(20, 38, ),
        /* 111 */ array(1, 21, ),
        /* 112 */ array(1, 55, ),
        /* 113 */ array(29, 34, ),
        /* 114 */ array(20, 38, ),
        /* 115 */ array(18, 20, ),
        /* 116 */ array(29, 34, ),
        /* 117 */ array(18, 20, ),
        /* 118 */ array(1, ),
        /* 119 */ array(1, ),
        /* 120 */ array(21, ),
        /* 121 */ array(1, ),
        /* 122 */ array(1, ),
        /* 123 */ array(1, ),
        /* 124 */ array(1, ),
        /* 125 */ array(21, ),
        /* 126 */ array(1, ),
        /* 127 */ array(1, ),
        /* 128 */ array(1, ),
        /* 129 */ array(1, ),
        /* 130 */ array(),
        /* 131 */ array(4, 24, 26, 27, 29, 30, 31, 34, 35, 36, 37, 55, 66, 67, 69, ),
        /* 132 */ array(12, 68, 69, 70, 71, ),
        /* 133 */ array(2, 18, 20, 67, ),
        /* 134 */ array(2, 18, 20, 67, ),
        /* 135 */ array(36, 64, 66, 67, ),
        /* 136 */ array(19, 36, 67, ),
        /* 137 */ array(18, 20, 67, ),
        /* 138 */ array(31, 36, 67, ),
        /* 139 */ array(29, 34, ),
        /* 140 */ array(64, 65, ),
        /* 141 */ array(29, 34, ),
        /* 142 */ array(29, 34, ),
        /* 143 */ array(36, 67, ),
        /* 144 */ array(29, 34, ),
        /* 145 */ array(29, 34, ),
        /* 146 */ array(36, 67, ),
        /* 147 */ array(64, 65, ),
        /* 148 */ array(1, 4, ),
        /* 149 */ array(25, 38, ),
        /* 150 */ array(64, 65, ),
        /* 151 */ array(29, 34, ),
        /* 152 */ array(29, 34, ),
        /* 153 */ array(29, 34, ),
        /* 154 */ array(29, 34, ),
        /* 155 */ array(29, 34, ),
        /* 156 */ array(36, 67, ),
        /* 157 */ array(36, 67, ),
        /* 158 */ array(29, 34, ),
        /* 159 */ array(64, 65, ),
        /* 160 */ array(29, 34, ),
        /* 161 */ array(64, 65, ),
        /* 162 */ array(29, 34, ),
        /* 163 */ array(64, 65, ),
        /* 164 */ array(29, 34, ),
        /* 165 */ array(29, 34, ),
        /* 166 */ array(29, 34, ),
        /* 167 */ array(16, ),
        /* 168 */ array(1, ),
        /* 169 */ array(62, ),
        /* 170 */ array(2, ),
        /* 171 */ array(1, ),
        /* 172 */ array(36, ),
        /* 173 */ array(38, ),
        /* 174 */ array(38, ),
        /* 175 */ array(21, ),
        /* 176 */ array(38, ),
        /* 177 */ array(21, ),
        /* 178 */ array(29, ),
        /* 179 */ array(29, ),
        /* 180 */ array(1, ),
        /* 181 */ array(21, ),
        /* 182 */ array(38, ),
        /* 183 */ array(2, ),
        /* 184 */ array(1, ),
        /* 185 */ array(),
        /* 186 */ array(),
        /* 187 */ array(),
        /* 188 */ array(),
        /* 189 */ array(),
        /* 190 */ array(),
        /* 191 */ array(),
        /* 192 */ array(),
        /* 193 */ array(18, 20, 36, ),
        /* 194 */ array(35, 37, ),
        /* 195 */ array(35, 37, ),
        /* 196 */ array(35, 37, ),
        /* 197 */ array(18, 20, ),
        /* 198 */ array(24, 35, ),
        /* 199 */ array(35, 66, ),
        /* 200 */ array(20, 62, ),
        /* 201 */ array(35, 37, ),
        /* 202 */ array(19, ),
        /* 203 */ array(4, ),
        /* 204 */ array(20, ),
        /* 205 */ array(57, ),
        /* 206 */ array(4, ),
        /* 207 */ array(26, ),
        /* 208 */ array(37, ),
        /* 209 */ array(66, ),
        /* 210 */ array(20, ),
        /* 211 */ array(20, ),
        /* 212 */ array(19, ),
        /* 213 */ array(4, ),
        /* 214 */ array(20, ),
        /* 215 */ array(20, ),
        /* 216 */ array(20, ),
        /* 217 */ array(20, ),
        /* 218 */ array(63, ),
        /* 219 */ array(62, ),
        /* 220 */ array(36, ),
        /* 221 */ array(69, ),
        /* 222 */ array(20, ),
        /* 223 */ array(20, ),
        /* 224 */ array(63, ),
        /* 225 */ array(20, ),
        /* 226 */ array(20, ),
        /* 227 */ array(),
        /* 228 */ array(),
        /* 229 */ array(),
        /* 230 */ array(),
        /* 231 */ array(),
        /* 232 */ array(),
        /* 233 */ array(),
        /* 234 */ array(),
        /* 235 */ array(),
        /* 236 */ array(),
        /* 237 */ array(),
        /* 238 */ array(),
        /* 239 */ array(),
        /* 240 */ array(),
        /* 241 */ array(),
        /* 242 */ array(),
        /* 243 */ array(),
        /* 244 */ array(),
        /* 245 */ array(),
        /* 246 */ array(),
        /* 247 */ array(),
        /* 248 */ array(),
        /* 249 */ array(),
        /* 250 */ array(),
        /* 251 */ array(),
        /* 252 */ array(),
        /* 253 */ array(),
        /* 254 */ array(),
        /* 255 */ array(),
        /* 256 */ array(),
        /* 257 */ array(),
        /* 258 */ array(),
        /* 259 */ array(),
        /* 260 */ array(),
        /* 261 */ array(),
        /* 262 */ array(),
        /* 263 */ array(),
        /* 264 */ array(),
        /* 265 */ array(),
        /* 266 */ array(),
        /* 267 */ array(),
        /* 268 */ array(),
        /* 269 */ array(),
        /* 270 */ array(),
        /* 271 */ array(),
        /* 272 */ array(),
        /* 273 */ array(),
        /* 274 */ array(),
        /* 275 */ array(),
        /* 276 */ array(),
        /* 277 */ array(),
        /* 278 */ array(),
        /* 279 */ array(),
        /* 280 */ array(),
        /* 281 */ array(),
        /* 282 */ array(),
        /* 283 */ array(),
        /* 284 */ array(),
        /* 285 */ array(),
        /* 286 */ array(),
        /* 287 */ array(),
        /* 288 */ array(),
        /* 289 */ array(),
        /* 290 */ array(),
        /* 291 */ array(),
        /* 292 */ array(),
        /* 293 */ array(),
        /* 294 */ array(),
        /* 295 */ array(),
        /* 296 */ array(),
        /* 297 */ array(),
        /* 298 */ array(),
        /* 299 */ array(),
        /* 300 */ array(),
        /* 301 */ array(),
        /* 302 */ array(),
        /* 303 */ array(),
        /* 304 */ array(),
        /* 305 */ array(),
        /* 306 */ array(),
        /* 307 */ array(),
        /* 308 */ array(),
        /* 309 */ array(),
        /* 310 */ array(),
        /* 311 */ array(),
        /* 312 */ array(),
        /* 313 */ array(),
        /* 314 */ array(),
        /* 315 */ array(),
        /* 316 */ array(),
);
    static public $yy_default = array(
 /*     0 */   320,  475,  459,  493,  459,  459,  459,  493,  493,  493,
 /*    10 */   493,  493,  493,  493,  493,  493,  493,  493,  493,  493,
 /*    20 */   493,  493,  493,  493,  493,  493,  493,  493,  493,  493,
 /*    30 */   493,  493,  493,  493,  493,  493,  493,  493,  493,  493,
 /*    40 */   493,  493,  493,  493,  493,  493,  493,  493,  369,  493,
 /*    50 */   369,  369,  369,  369,  369,  369,  493,  493,  317,  369,
 /*    60 */   369,  470,  493,  361,  493,  493,  493,  373,  493,  493,
 /*    70 */   493,  493,  493,  396,  397,  478,  393,  387,  389,  392,
 /*    80 */   476,  371,  388,  457,  373,  477,  385,  376,  458,  402,
 /*    90 */   403,  493,  490,  493,  493,  369,  378,  369,  378,  442,
 /*   100 */   422,  369,  493,  429,  493,  441,  422,  493,  369,  369,
 /*   110 */   493,  363,  378,  369,  493,  493,  369,  493,  386,  407,
 /*   120 */   422,  493,  365,  406,  381,  467,  382,  383,  400,  405,
 /*   130 */   466,  380,  493,  440,  440,  410,  372,  440,  410,  359,
 /*   140 */   426,  357,  358,  399,  350,  345,  410,  425,  493,  493,
 /*   150 */   450,  346,  355,  347,  354,  352,  418,  398,  356,  427,
 /*   160 */   360,  451,  349,  448,  353,  351,  348,  337,  366,  429,
 /*   170 */   460,  364,  429,  493,  493,  468,  493,  445,  492,  492,
 /*   180 */   384,  471,  493,  461,  421,  429,  429,  429,  465,  465,
 /*   190 */   429,  429,  465,  440,  493,  493,  493,  440,  493,  493,
 /*   200 */   493,  493,  493,  493,  493,  412,  493,  374,  493,  493,
 /*   210 */   493,  493,  493,  404,  493,  493,  493,  493,  493,  430,
 /*   220 */   469,  404,  493,  493,  493,  493,  493,  391,  390,  431,
 /*   230 */   336,  428,  455,  439,  335,  432,  434,  339,  338,  409,
 /*   240 */   370,  416,  408,  340,  433,  420,  413,  344,  321,  414,
 /*   250 */   415,  411,  380,  318,  443,  319,  444,  417,  343,  375,
 /*   260 */   491,  394,  367,  341,  322,  377,  342,  368,  379,  447,
 /*   270 */   334,  401,  435,  437,  473,  462,  436,  327,  463,  331,
 /*   280 */   438,  474,  328,  489,  488,  419,  487,  482,  464,  472,
 /*   290 */   330,  446,  329,  485,  456,  323,  424,  324,  333,  423,
 /*   300 */   454,  404,  453,  486,  412,  479,  325,  484,  483,  362,
 /*   310 */   326,  449,  332,  480,  452,  481,  395,
);
    const YYNOCODE = 114;
    const YYSTACKDEPTH = 500;
    const YYNSTATE = 317;
    const YYNRULE = 176;
    const YYERRORSYMBOL = 72;
    const YYERRSYMDT = 'yy0';
    const YYFALLBACK = 0;
    public static $yyFallback = array(
    );
    public static function Trace($TraceFILE, $zTracePrompt)
    {
        if (!$TraceFILE) {
            $zTracePrompt = 0;
        } elseif (!$zTracePrompt) {
            $TraceFILE = 0;
        }
        self::$yyTraceFILE = $TraceFILE;
        self::$yyTracePrompt = $zTracePrompt;
    }

    public static function PrintTrace()
    {
        self::$yyTraceFILE = fopen('php://output', 'w');
        self::$yyTracePrompt = '<br>';
    }

    public static $yyTraceFILE;
    public static $yyTracePrompt;
    public $yyidx;                    /* Index of top element in stack */
    public $yyerrcnt;                 /* Shifts left before out of the error */
    public $yystack = array();  /* The parser's stack */

    public $yyTokenName = array(
  '$',             'VERT',          'COLON',         'TEMPLATEINIT',
  'RDEL',          'COMMENT',       'PHPSTARTTAG',   'PHPENDTAG',   
  'ASPSTARTTAG',   'ASPENDTAG',     'FAKEPHPSTARTTAG',  'XMLTAG',      
  'TEXT',          'STRIPON',       'STRIPOFF',      'LITERALSTART',
  'LITERALEND',    'LITERAL',       'LDEL',          'EQUAL',       
  'ID',            'PTR',           'LDELIF',        'LDELFOR',     
  'SEMICOLON',     'IDINCDEC',      'TO',            'STEP',        
  'LDELFOREACH',   'SPACE',         'AS',            'APTR',        
  'LDELSETFILTER',  'LDELSLASH',     'ATTR',          'COMMA',       
  'OPENP',         'CLOSEP',        'DOLLAR',        'MATH',        
  'UNIMATH',       'ANDSYM',        'IFCOND',        'ISIN',        
  'LOP',           'ISDIVBY',       'ISNOTDIVBY',    'ISEVEN',      
  'ISNOTEVEN',     'ISEVENBY',      'ISNOTEVENBY',   'ISODD',       
  'ISNOTODD',      'ISODDBY',       'ISNOTODDBY',    'INSTANCEOF',  
  'NAMESPACE',     'QMARK',         'NOT',           'TYPECAST',    
  'NUMBER',        'SINGLEQUOTESTRING',  'AT',            'HATCH',       
  'DOT',           'OPENB',         'CLOSEB',        'DOUBLECOLON', 
  'QUOTE',         'BACKTICK',      'DOLLARID',      'DQTAG',       
  'error',         'start',         'template',      'template_element',
  'smartytag',     'literal',       'literal_elements',  'literal_element',
  'expr',          'attributes',    'varindexed',    'modifierlist',
  'statement',     'statements',    'optspace',      'varvar',      
  'value',         'modparameters',  'attribute',     'ternary',     
  'ldelexprrdel',  'variable',      'array',         'function',    
  'doublequoted_with_quotes',  'static',        'object',        'arrayindex',  
  'indexdef',      'static_class_access',  'varvarele',     'objectchain', 
  'objectelement',  'method',        'params',        'modifier',    
  'modparameter',  'arrayelements',  'arrayelement',  'doublequoted',
  'doublequotedcontent',
    );

    public static $yyRuleName = array(
 /*   0 */ "start ::= template",
 /*   1 */ "template ::= template_element",
 /*   2 */ "template ::= template template_element",
 /*   3 */ "template ::=",
 /*   4 */ "template_element ::= TEMPLATEINIT",
 /*   5 */ "template_element ::= smartytag RDEL",
 /*   6 */ "template_element ::= COMMENT",
 /*   7 */ "template_element ::= literal",
 /*   8 */ "template_element ::= PHPSTARTTAG",
 /*   9 */ "template_element ::= PHPENDTAG",
 /*  10 */ "template_element ::= ASPSTARTTAG",
 /*  11 */ "template_element ::= ASPENDTAG",
 /*  12 */ "template_element ::= FAKEPHPSTARTTAG",
 /*  13 */ "template_element ::= XMLTAG",
 /*  14 */ "template_element ::= TEXT",
 /*  15 */ "template_element ::= STRIPON",
 /*  16 */ "template_element ::= STRIPOFF",
 /*  17 */ "literal ::= LITERALSTART LITERALEND",
 /*  18 */ "literal ::= LITERALSTART literal_elements LITERALEND",
 /*  19 */ "literal_elements ::= literal_elements literal_element",
 /*  20 */ "literal_elements ::=",
 /*  21 */ "literal_element ::= literal",
 /*  22 */ "literal_element ::= LITERAL",
 /*  23 */ "literal_element ::= PHPSTARTTAG",
 /*  24 */ "literal_element ::= FAKEPHPSTARTTAG",
 /*  25 */ "literal_element ::= PHPENDTAG",
 /*  26 */ "literal_element ::= ASPSTARTTAG",
 /*  27 */ "literal_element ::= ASPENDTAG",
 /*  28 */ "smartytag ::= LDEL expr attributes",
 /*  29 */ "smartytag ::= LDEL varindexed EQUAL expr attributes",
 /*  30 */ "smartytag ::= LDEL ID attributes",
 /*  31 */ "smartytag ::= LDEL ID modifierlist attributes",
 /*  32 */ "smartytag ::= LDEL ID PTR ID modifierlist attributes",
 /*  33 */ "smartytag ::= LDELIF expr attributes",
 /*  34 */ "smartytag ::= LDELIF statement attributes",
 /*  35 */ "smartytag ::= LDELFOR statements SEMICOLON optspace expr SEMICOLON optspace varvar EQUAL expr attributes",
 /*  36 */ "smartytag ::= LDELFOR statements SEMICOLON optspace expr SEMICOLON optspace IDINCDEC attributes",
 /*  37 */ "smartytag ::= LDELFOR statement TO expr attributes",
 /*  38 */ "smartytag ::= LDELFOR statement TO expr STEP expr attributes",
 /*  39 */ "smartytag ::= LDELFOREACH attributes",
 /*  40 */ "smartytag ::= LDELFOREACH SPACE value AS varvar attributes",
 /*  41 */ "smartytag ::= LDELFOREACH SPACE value AS varvar APTR varvar attributes",
 /*  42 */ "smartytag ::= LDELFOREACH SPACE expr AS varvar attributes",
 /*  43 */ "smartytag ::= LDELFOREACH SPACE expr AS varvar APTR varvar attributes",
 /*  44 */ "smartytag ::= LDELSETFILTER ID modparameters",
 /*  45 */ "smartytag ::= LDELSETFILTER ID modparameters modifierlist RDEL",
 /*  46 */ "smartytag ::= LDELSLASH ID",
 /*  47 */ "smartytag ::= LDELSLASH ID modifierlist",
 /*  48 */ "smartytag ::= LDELSLASH ID PTR ID",
 /*  49 */ "smartytag ::= LDELSLASH ID PTR ID modifierlist",
 /*  50 */ "attributes ::= attributes attribute",
 /*  51 */ "attributes ::= attribute",
 /*  52 */ "attributes ::=",
 /*  53 */ "attribute ::= SPACE ID EQUAL ID",
 /*  54 */ "attribute ::= ATTR expr",
 /*  55 */ "attribute ::= SPACE ID",
 /*  56 */ "attribute ::= SPACE expr",
 /*  57 */ "statements ::= statement",
 /*  58 */ "statements ::= statements COMMA statement",
 /*  59 */ "statement ::= varindexed EQUAL expr",
 /*  60 */ "statement ::= OPENP statement CLOSEP",
 /*  61 */ "expr ::= value",
 /*  62 */ "expr ::= ternary",
 /*  63 */ "expr ::= DOLLAR ID COLON ID",
 /*  64 */ "expr ::= expr MATH value",
 /*  65 */ "expr ::= expr UNIMATH value",
 /*  66 */ "expr ::= expr ANDSYM value",
 /*  67 */ "expr ::= expr modifierlist",
 /*  68 */ "expr ::= expr IFCOND expr",
 /*  69 */ "expr ::= expr ISIN value",
 /*  70 */ "expr ::= expr LOP expr",
 /*  71 */ "expr ::= expr ISDIVBY expr",
 /*  72 */ "expr ::= expr ISNOTDIVBY expr",
 /*  73 */ "expr ::= expr ISEVEN",
 /*  74 */ "expr ::= expr ISNOTEVEN",
 /*  75 */ "expr ::= expr ISEVENBY expr",
 /*  76 */ "expr ::= expr ISNOTEVENBY expr",
 /*  77 */ "expr ::= expr ISODD",
 /*  78 */ "expr ::= expr ISNOTODD",
 /*  79 */ "expr ::= expr ISODDBY expr",
 /*  80 */ "expr ::= expr ISNOTODDBY expr",
 /*  81 */ "expr ::= value INSTANCEOF ID",
 /*  82 */ "expr ::= value INSTANCEOF NAMESPACE",
 /*  83 */ "expr ::= value INSTANCEOF value",
 /*  84 */ "ldelexprrdel ::= LDEL expr RDEL",
 /*  85 */ "ternary ::= OPENP expr CLOSEP QMARK DOLLAR ID COLON expr",
 /*  86 */ "ternary ::= OPENP expr CLOSEP QMARK expr COLON expr",
 /*  87 */ "value ::= variable",
 /*  88 */ "value ::= UNIMATH value",
 /*  89 */ "value ::= NOT value",
 /*  90 */ "value ::= TYPECAST value",
 /*  91 */ "value ::= NUMBER",
 /*  92 */ "value ::= array",
 /*  93 */ "value ::= ID",
 /*  94 */ "value ::= function",
 /*  95 */ "value ::= OPENP expr CLOSEP",
 /*  96 */ "value ::= SINGLEQUOTESTRING",
 /*  97 */ "value ::= doublequoted_with_quotes",
 /*  98 */ "value ::= IDINCDEC",
 /*  99 */ "value ::= ID static",
 /* 100 */ "value ::= NAMESPACE static",
 /* 101 */ "value ::= NAMESPACE",
 /* 102 */ "value ::= DOLLAR ID static",
 /* 103 */ "value ::= smartytag",
 /* 104 */ "value ::= value modifierlist",
 /* 105 */ "variable ::= varindexed",
 /* 106 */ "variable ::= varvar AT ID",
 /* 107 */ "variable ::= object",
 /* 108 */ "variable ::= HATCH ID HATCH arrayindex",
 /* 109 */ "variable ::= HATCH varindexed HATCH arrayindex",
 /* 110 */ "varindexed ::= varvar arrayindex",
 /* 111 */ "arrayindex ::= arrayindex indexdef",
 /* 112 */ "arrayindex ::=",
 /* 113 */ "indexdef ::= DOT varvar",
 /* 114 */ "indexdef ::= DOT varvar AT ID",
 /* 115 */ "indexdef ::= DOT ID",
 /* 116 */ "indexdef ::= DOT NUMBER",
 /* 117 */ "indexdef ::= DOT ldelexprrdel",
 /* 118 */ "indexdef ::= OPENB ID CLOSEB",
 /* 119 */ "indexdef ::= OPENB ID DOT ID CLOSEB",
 /* 120 */ "indexdef ::= OPENB expr CLOSEB",
 /* 121 */ "indexdef ::= OPENB CLOSEB",
 /* 122 */ "static ::= DOUBLECOLON static_class_access",
 /* 123 */ "varvar ::= DOLLAR ID",
 /* 124 */ "varvar ::= DOLLAR varvarele",
 /* 125 */ "varvarele ::= varvarele varvarele",
 /* 126 */ "varvarele ::= ID",
 /* 127 */ "varvarele ::= ldelexprrdel",
 /* 128 */ "object ::= varindexed objectchain",
 /* 129 */ "objectchain ::= objectelement",
 /* 130 */ "objectchain ::= objectchain objectelement",
 /* 131 */ "objectelement ::= PTR ID arrayindex",
 /* 132 */ "objectelement ::= PTR varindexed",
 /* 133 */ "objectelement ::= PTR ldelexprrdel arrayindex",
 /* 134 */ "objectelement ::= PTR ID ldelexprrdel arrayindex",
 /* 135 */ "objectelement ::= PTR method",
 /* 136 */ "function ::= ID OPENP params CLOSEP",
 /* 137 */ "function ::= NAMESPACE OPENP params CLOSEP",
 /* 138 */ "method ::= ID OPENP params CLOSEP",
 /* 139 */ "method ::= DOLLAR ID OPENP params CLOSEP",
 /* 140 */ "params ::= params COMMA expr",
 /* 141 */ "params ::= expr",
 /* 142 */ "params ::=",
 /* 143 */ "modifierlist ::= modifierlist modifier modparameters",
 /* 144 */ "modifierlist ::= modifier modparameters",
 /* 145 */ "modifier ::= VERT AT ID",
 /* 146 */ "modifier ::= VERT ID",
 /* 147 */ "modparameters ::= modparameters modparameter",
 /* 148 */ "modparameters ::=",
 /* 149 */ "modparameter ::= COLON value",
 /* 150 */ "static_class_access ::= method",
 /* 151 */ "static_class_access ::= method objectchain",
 /* 152 */ "static_class_access ::= ID",
 /* 153 */ "static_class_access ::= DOLLAR ID arrayindex",
 /* 154 */ "static_class_access ::= DOLLAR ID arrayindex objectchain",
 /* 155 */ "array ::= OPENB arrayelements CLOSEB",
 /* 156 */ "arrayelements ::= arrayelement",
 /* 157 */ "arrayelements ::= arrayelements COMMA arrayelement",
 /* 158 */ "arrayelements ::=",
 /* 159 */ "arrayelement ::= value APTR expr",
 /* 160 */ "arrayelement ::= ID APTR expr",
 /* 161 */ "arrayelement ::= expr",
 /* 162 */ "doublequoted_with_quotes ::= QUOTE QUOTE",
 /* 163 */ "doublequoted_with_quotes ::= QUOTE doublequoted QUOTE",
 /* 164 */ "doublequoted ::= doublequoted doublequotedcontent",
 /* 165 */ "doublequoted ::= doublequotedcontent",
 /* 166 */ "doublequotedcontent ::= BACKTICK variable BACKTICK",
 /* 167 */ "doublequotedcontent ::= BACKTICK expr BACKTICK",
 /* 168 */ "doublequotedcontent ::= DOLLARID",
 /* 169 */ "doublequotedcontent ::= DQTAG LDEL variable RDEL",
 /* 170 */ "doublequotedcontent ::= DQTAG ldelexprrdel",
 /* 171 */ "doublequotedcontent ::= DQTAG smartytag RDEL",
 /* 172 */ "doublequotedcontent ::= TEXT",
 /* 173 */ "doublequotedcontent ::= DQTAG",
 /* 174 */ "optspace ::= SPACE",
 /* 175 */ "optspace ::=",
    );

    public function tokenName($tokenType)
    {
        if ($tokenType === 0) {
            return 'End of Input';
        }
        if ($tokenType > 0 && $tokenType < count($this->yyTokenName)) {
            return $this->yyTokenName[$tokenType];
        } else {
            return "Unknown";
        }
    }

    public static function yy_destructor($yymajor, $yypminor)
    {
        switch ($yymajor) {
            default:  break;   /* If no destructor action specified: do nothing */
        }
    }

    public function yy_pop_parser_stack()
    {
        if (!count($this->yystack)) {
            return;
        }
        $yytos = array_pop($this->yystack);
        if (self::$yyTraceFILE && $this->yyidx >= 0) {
            fwrite(self::$yyTraceFILE,
                self::$yyTracePrompt . 'Popping ' . $this->yyTokenName[$yytos->major] .
                    "\n");
        }
        $yymajor = $yytos->major;
        self::yy_destructor($yymajor, $yytos->minor);
        $this->yyidx--;

        return $yymajor;
    }

    public function __destruct()
    {
        while ($this->yystack !== Array()) {
            $this->yy_pop_parser_stack();
        }
        if (is_resource(self::$yyTraceFILE)) {
            fclose(self::$yyTraceFILE);
        }
    }

    public function yy_get_expected_tokens($token)
    {
        $state = $this->yystack[$this->yyidx]->stateno;
        $expected = self::$yyExpectedTokens[$state];
        if (in_array($token, self::$yyExpectedTokens[$state], true)) {
            return $expected;
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return array_unique($expected);
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[$yyruleno]['rhs'];
                    $nextstate = $this->yy_find_reduce_action(
                        $this->yystack[$this->yyidx]->stateno,
                        self::$yyRuleInfo[$yyruleno]['lhs']);
                    if (isset(self::$yyExpectedTokens[$nextstate])) {
                $expected = array_merge($expected, self::$yyExpectedTokens[$nextstate]);
                            if (in_array($token,
                                  self::$yyExpectedTokens[$nextstate], true)) {
                            $this->yyidx = $yyidx;
                            $this->yystack = $stack;

                            return array_unique($expected);
                        }
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[$yyruleno]['lhs'];
                        $this->yystack[$this->yyidx] = $x;
                        continue 2;
                    } elseif ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return array_unique($expected);
                    } elseif ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return $expected;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
    $this->yyidx = $yyidx;
    $this->yystack = $stack;

        return array_unique($expected);
    }

    public function yy_is_expected_token($token)
    {
        if ($token === 0) {
            return true; // 0 is not part of this
        }
        $state = $this->yystack[$this->yyidx]->stateno;
        if (in_array($token, self::$yyExpectedTokens[$state], true)) {
            return true;
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return true;
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[$yyruleno]['rhs'];
                    $nextstate = $this->yy_find_reduce_action(
                        $this->yystack[$this->yyidx]->stateno,
                        self::$yyRuleInfo[$yyruleno]['lhs']);
                    if (isset(self::$yyExpectedTokens[$nextstate]) &&
                          in_array($token, self::$yyExpectedTokens[$nextstate], true)) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;

                        return true;
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[$yyruleno]['lhs'];
                        $this->yystack[$this->yyidx] = $x;
                        continue 2;
                    } elseif ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        if (!$token) {
                            // end of input: this is valid
                            return true;
                        }
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return false;
                    } elseif ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return true;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
        $this->yyidx = $yyidx;
        $this->yystack = $stack;

        return true;
    }

   public function yy_find_shift_action($iLookAhead)
    {
        $stateno = $this->yystack[$this->yyidx]->stateno;

        /* if ($this->yyidx < 0) return self::YY_NO_ACTION;  */
        if (!isset(self::$yy_shift_ofst[$stateno])) {
            // no shift actions
            return self::$yy_default[$stateno];
        }
        $i = self::$yy_shift_ofst[$stateno];
        if ($i === self::YY_SHIFT_USE_DFLT) {
            return self::$yy_default[$stateno];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
              self::$yy_lookahead[$i] != $iLookAhead) {
            if (count(self::$yyFallback) && $iLookAhead < count(self::$yyFallback)
                   && ($iFallback = self::$yyFallback[$iLookAhead]) != 0) {
                if (self::$yyTraceFILE) {
                    fwrite(self::$yyTraceFILE, self::$yyTracePrompt . "FALLBACK " .
                        $this->yyTokenName[$iLookAhead] . " => " .
                        $this->yyTokenName[$iFallback] . "\n");
                }

                return $this->yy_find_shift_action($iFallback);
            }

            return self::$yy_default[$stateno];
        } else {
            return self::$yy_action[$i];
        }
    }

    public function yy_find_reduce_action($stateno, $iLookAhead)
    {
        /* $stateno = $this->yystack[$this->yyidx]->stateno; */

        if (!isset(self::$yy_reduce_ofst[$stateno])) {
            return self::$yy_default[$stateno];
        }
        $i = self::$yy_reduce_ofst[$stateno];
        if ($i == self::YY_REDUCE_USE_DFLT) {
            return self::$yy_default[$stateno];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
              self::$yy_lookahead[$i] != $iLookAhead) {
            return self::$yy_default[$stateno];
        } else {
            return self::$yy_action[$i];
        }
    }

    public function yy_shift($yyNewState, $yyMajor, $yypMinor)
    {
        $this->yyidx++;
        if ($this->yyidx >= self::YYSTACKDEPTH) {
            $this->yyidx--;
            if (self::$yyTraceFILE) {
                fprintf(self::$yyTraceFILE, "%sStack Overflow!\n", self::$yyTracePrompt);
            }
            while ($this->yyidx >= 0) {
                $this->yy_pop_parser_stack();
            }
#line 85 "Smarty_Compiler_Template_Php_Parser.y"

    $this->internalError = true;
    $this->compiler->error("Stack overflow in template parser");
#line 1471 "Smarty_Compiler_Template_Php_Parser.php"

            return;
        }
        $yytos = new TP_yyStackEntry;
        $yytos->stateno = $yyNewState;
        $yytos->major = $yyMajor;
        $yytos->minor = $yypMinor;
        array_push($this->yystack, $yytos);
        if (self::$yyTraceFILE && $this->yyidx > 0) {
            fprintf(self::$yyTraceFILE, "%sShift %d\n", self::$yyTracePrompt,
                $yyNewState);
            fprintf(self::$yyTraceFILE, "%sStack:", self::$yyTracePrompt);
            for ($i = 1; $i <= $this->yyidx; $i++) {
                fprintf(self::$yyTraceFILE, " %s",
                    $this->yyTokenName[$this->yystack[$i]->major]);
            }
            fwrite(self::$yyTraceFILE,"\n");
        }
    }

    public static $yyRuleInfo = array(
  array( 'lhs' => 73, 'rhs' => 1 ),
  array( 'lhs' => 74, 'rhs' => 1 ),
  array( 'lhs' => 74, 'rhs' => 2 ),
  array( 'lhs' => 74, 'rhs' => 0 ),
  array( 'lhs' => 75, 'rhs' => 1 ),
  array( 'lhs' => 75, 'rhs' => 2 ),
  array( 'lhs' => 75, 'rhs' => 1 ),
  array( 'lhs' => 75, 'rhs' => 1 ),
  array( 'lhs' => 75, 'rhs' => 1 ),
  array( 'lhs' => 75, 'rhs' => 1 ),
  array( 'lhs' => 75, 'rhs' => 1 ),
  array( 'lhs' => 75, 'rhs' => 1 ),
  array( 'lhs' => 75, 'rhs' => 1 ),
  array( 'lhs' => 75, 'rhs' => 1 ),
  array( 'lhs' => 75, 'rhs' => 1 ),
  array( 'lhs' => 75, 'rhs' => 1 ),
  array( 'lhs' => 75, 'rhs' => 1 ),
  array( 'lhs' => 77, 'rhs' => 2 ),
  array( 'lhs' => 77, 'rhs' => 3 ),
  array( 'lhs' => 78, 'rhs' => 2 ),
  array( 'lhs' => 78, 'rhs' => 0 ),
  array( 'lhs' => 79, 'rhs' => 1 ),
  array( 'lhs' => 79, 'rhs' => 1 ),
  array( 'lhs' => 79, 'rhs' => 1 ),
  array( 'lhs' => 79, 'rhs' => 1 ),
  array( 'lhs' => 79, 'rhs' => 1 ),
  array( 'lhs' => 79, 'rhs' => 1 ),
  array( 'lhs' => 79, 'rhs' => 1 ),
  array( 'lhs' => 76, 'rhs' => 3 ),
  array( 'lhs' => 76, 'rhs' => 5 ),
  array( 'lhs' => 76, 'rhs' => 3 ),
  array( 'lhs' => 76, 'rhs' => 4 ),
  array( 'lhs' => 76, 'rhs' => 6 ),
  array( 'lhs' => 76, 'rhs' => 3 ),
  array( 'lhs' => 76, 'rhs' => 3 ),
  array( 'lhs' => 76, 'rhs' => 11 ),
  array( 'lhs' => 76, 'rhs' => 9 ),
  array( 'lhs' => 76, 'rhs' => 5 ),
  array( 'lhs' => 76, 'rhs' => 7 ),
  array( 'lhs' => 76, 'rhs' => 2 ),
  array( 'lhs' => 76, 'rhs' => 6 ),
  array( 'lhs' => 76, 'rhs' => 8 ),
  array( 'lhs' => 76, 'rhs' => 6 ),
  array( 'lhs' => 76, 'rhs' => 8 ),
  array( 'lhs' => 76, 'rhs' => 3 ),
  array( 'lhs' => 76, 'rhs' => 5 ),
  array( 'lhs' => 76, 'rhs' => 2 ),
  array( 'lhs' => 76, 'rhs' => 3 ),
  array( 'lhs' => 76, 'rhs' => 4 ),
  array( 'lhs' => 76, 'rhs' => 5 ),
  array( 'lhs' => 81, 'rhs' => 2 ),
  array( 'lhs' => 81, 'rhs' => 1 ),
  array( 'lhs' => 81, 'rhs' => 0 ),
  array( 'lhs' => 90, 'rhs' => 4 ),
  array( 'lhs' => 90, 'rhs' => 2 ),
  array( 'lhs' => 90, 'rhs' => 2 ),
  array( 'lhs' => 90, 'rhs' => 2 ),
  array( 'lhs' => 85, 'rhs' => 1 ),
  array( 'lhs' => 85, 'rhs' => 3 ),
  array( 'lhs' => 84, 'rhs' => 3 ),
  array( 'lhs' => 84, 'rhs' => 3 ),
  array( 'lhs' => 80, 'rhs' => 1 ),
  array( 'lhs' => 80, 'rhs' => 1 ),
  array( 'lhs' => 80, 'rhs' => 4 ),
  array( 'lhs' => 80, 'rhs' => 3 ),
  array( 'lhs' => 80, 'rhs' => 3 ),
  array( 'lhs' => 80, 'rhs' => 3 ),
  array( 'lhs' => 80, 'rhs' => 2 ),
  array( 'lhs' => 80, 'rhs' => 3 ),
  array( 'lhs' => 80, 'rhs' => 3 ),
  array( 'lhs' => 80, 'rhs' => 3 ),
  array( 'lhs' => 80, 'rhs' => 3 ),
  array( 'lhs' => 80, 'rhs' => 3 ),
  array( 'lhs' => 80, 'rhs' => 2 ),
  array( 'lhs' => 80, 'rhs' => 2 ),
  array( 'lhs' => 80, 'rhs' => 3 ),
  array( 'lhs' => 80, 'rhs' => 3 ),
  array( 'lhs' => 80, 'rhs' => 2 ),
  array( 'lhs' => 80, 'rhs' => 2 ),
  array( 'lhs' => 80, 'rhs' => 3 ),
  array( 'lhs' => 80, 'rhs' => 3 ),
  array( 'lhs' => 80, 'rhs' => 3 ),
  array( 'lhs' => 80, 'rhs' => 3 ),
  array( 'lhs' => 80, 'rhs' => 3 ),
  array( 'lhs' => 92, 'rhs' => 3 ),
  array( 'lhs' => 91, 'rhs' => 8 ),
  array( 'lhs' => 91, 'rhs' => 7 ),
  array( 'lhs' => 88, 'rhs' => 1 ),
  array( 'lhs' => 88, 'rhs' => 2 ),
  array( 'lhs' => 88, 'rhs' => 2 ),
  array( 'lhs' => 88, 'rhs' => 2 ),
  array( 'lhs' => 88, 'rhs' => 1 ),
  array( 'lhs' => 88, 'rhs' => 1 ),
  array( 'lhs' => 88, 'rhs' => 1 ),
  array( 'lhs' => 88, 'rhs' => 1 ),
  array( 'lhs' => 88, 'rhs' => 3 ),
  array( 'lhs' => 88, 'rhs' => 1 ),
  array( 'lhs' => 88, 'rhs' => 1 ),
  array( 'lhs' => 88, 'rhs' => 1 ),
  array( 'lhs' => 88, 'rhs' => 2 ),
  array( 'lhs' => 88, 'rhs' => 2 ),
  array( 'lhs' => 88, 'rhs' => 1 ),
  array( 'lhs' => 88, 'rhs' => 3 ),
  array( 'lhs' => 88, 'rhs' => 1 ),
  array( 'lhs' => 88, 'rhs' => 2 ),
  array( 'lhs' => 93, 'rhs' => 1 ),
  array( 'lhs' => 93, 'rhs' => 3 ),
  array( 'lhs' => 93, 'rhs' => 1 ),
  array( 'lhs' => 93, 'rhs' => 4 ),
  array( 'lhs' => 93, 'rhs' => 4 ),
  array( 'lhs' => 82, 'rhs' => 2 ),
  array( 'lhs' => 99, 'rhs' => 2 ),
  array( 'lhs' => 99, 'rhs' => 0 ),
  array( 'lhs' => 100, 'rhs' => 2 ),
  array( 'lhs' => 100, 'rhs' => 4 ),
  array( 'lhs' => 100, 'rhs' => 2 ),
  array( 'lhs' => 100, 'rhs' => 2 ),
  array( 'lhs' => 100, 'rhs' => 2 ),
  array( 'lhs' => 100, 'rhs' => 3 ),
  array( 'lhs' => 100, 'rhs' => 5 ),
  array( 'lhs' => 100, 'rhs' => 3 ),
  array( 'lhs' => 100, 'rhs' => 2 ),
  array( 'lhs' => 97, 'rhs' => 2 ),
  array( 'lhs' => 87, 'rhs' => 2 ),
  array( 'lhs' => 87, 'rhs' => 2 ),
  array( 'lhs' => 102, 'rhs' => 2 ),
  array( 'lhs' => 102, 'rhs' => 1 ),
  array( 'lhs' => 102, 'rhs' => 1 ),
  array( 'lhs' => 98, 'rhs' => 2 ),
  array( 'lhs' => 103, 'rhs' => 1 ),
  array( 'lhs' => 103, 'rhs' => 2 ),
  array( 'lhs' => 104, 'rhs' => 3 ),
  array( 'lhs' => 104, 'rhs' => 2 ),
  array( 'lhs' => 104, 'rhs' => 3 ),
  array( 'lhs' => 104, 'rhs' => 4 ),
  array( 'lhs' => 104, 'rhs' => 2 ),
  array( 'lhs' => 95, 'rhs' => 4 ),
  array( 'lhs' => 95, 'rhs' => 4 ),
  array( 'lhs' => 105, 'rhs' => 4 ),
  array( 'lhs' => 105, 'rhs' => 5 ),
  array( 'lhs' => 106, 'rhs' => 3 ),
  array( 'lhs' => 106, 'rhs' => 1 ),
  array( 'lhs' => 106, 'rhs' => 0 ),
  array( 'lhs' => 83, 'rhs' => 3 ),
  array( 'lhs' => 83, 'rhs' => 2 ),
  array( 'lhs' => 107, 'rhs' => 3 ),
  array( 'lhs' => 107, 'rhs' => 2 ),
  array( 'lhs' => 89, 'rhs' => 2 ),
  array( 'lhs' => 89, 'rhs' => 0 ),
  array( 'lhs' => 108, 'rhs' => 2 ),
  array( 'lhs' => 101, 'rhs' => 1 ),
  array( 'lhs' => 101, 'rhs' => 2 ),
  array( 'lhs' => 101, 'rhs' => 1 ),
  array( 'lhs' => 101, 'rhs' => 3 ),
  array( 'lhs' => 101, 'rhs' => 4 ),
  array( 'lhs' => 94, 'rhs' => 3 ),
  array( 'lhs' => 109, 'rhs' => 1 ),
  array( 'lhs' => 109, 'rhs' => 3 ),
  array( 'lhs' => 109, 'rhs' => 0 ),
  array( 'lhs' => 110, 'rhs' => 3 ),
  array( 'lhs' => 110, 'rhs' => 3 ),
  array( 'lhs' => 110, 'rhs' => 1 ),
  array( 'lhs' => 96, 'rhs' => 2 ),
  array( 'lhs' => 96, 'rhs' => 3 ),
  array( 'lhs' => 111, 'rhs' => 2 ),
  array( 'lhs' => 111, 'rhs' => 1 ),
  array( 'lhs' => 112, 'rhs' => 3 ),
  array( 'lhs' => 112, 'rhs' => 3 ),
  array( 'lhs' => 112, 'rhs' => 1 ),
  array( 'lhs' => 112, 'rhs' => 4 ),
  array( 'lhs' => 112, 'rhs' => 2 ),
  array( 'lhs' => 112, 'rhs' => 3 ),
  array( 'lhs' => 112, 'rhs' => 1 ),
  array( 'lhs' => 112, 'rhs' => 1 ),
  array( 'lhs' => 86, 'rhs' => 1 ),
  array( 'lhs' => 86, 'rhs' => 0 ),
    );

    public static $yyReduceMap = array(
        0 => 0,
        1 => 1,
        2 => 1,
        4 => 1,
        6 => 1,
        5 => 5,
        7 => 7,
        8 => 8,
        9 => 9,
        10 => 10,
        11 => 11,
        12 => 12,
        13 => 13,
        14 => 14,
        15 => 15,
        16 => 16,
        17 => 17,
        20 => 17,
        175 => 17,
        18 => 18,
        60 => 18,
        84 => 18,
        163 => 18,
        19 => 19,
        88 => 19,
        90 => 19,
        111 => 19,
        151 => 19,
        21 => 21,
        22 => 21,
        23 => 21,
        24 => 21,
        25 => 21,
        26 => 21,
        27 => 21,
        56 => 21,
        61 => 21,
        62 => 21,
        87 => 21,
        91 => 21,
        92 => 21,
        94 => 21,
        96 => 21,
        97 => 21,
        101 => 21,
        107 => 21,
        123 => 21,
        150 => 21,
        152 => 21,
        156 => 21,
        161 => 21,
        174 => 21,
        28 => 28,
        29 => 29,
        30 => 30,
        31 => 31,
        32 => 32,
        33 => 33,
        34 => 33,
        35 => 35,
        36 => 36,
        37 => 37,
        38 => 38,
        39 => 39,
        40 => 40,
        42 => 40,
        41 => 41,
        43 => 41,
        44 => 44,
        45 => 45,
        46 => 46,
        47 => 47,
        48 => 48,
        49 => 49,
        50 => 50,
        51 => 51,
        57 => 51,
        141 => 51,
        145 => 51,
        149 => 51,
        52 => 52,
        142 => 52,
        148 => 52,
        53 => 53,
        54 => 54,
        55 => 55,
        58 => 58,
        59 => 59,
        63 => 63,
        64 => 64,
        65 => 64,
        66 => 64,
        67 => 67,
        104 => 67,
        68 => 68,
        70 => 68,
        69 => 69,
        71 => 71,
        72 => 72,
        73 => 73,
        78 => 73,
        74 => 74,
        77 => 74,
        75 => 75,
        80 => 75,
        76 => 76,
        79 => 76,
        81 => 81,
        82 => 81,
        83 => 83,
        85 => 85,
        86 => 86,
        89 => 89,
        93 => 93,
        95 => 95,
        98 => 98,
        99 => 99,
        100 => 100,
        102 => 102,
        103 => 103,
        105 => 105,
        106 => 106,
        108 => 108,
        109 => 109,
        110 => 110,
        112 => 112,
        158 => 112,
        113 => 113,
        114 => 114,
        115 => 115,
        116 => 116,
        117 => 117,
        118 => 118,
        119 => 119,
        120 => 120,
        121 => 121,
        122 => 122,
        124 => 124,
        125 => 125,
        126 => 126,
        127 => 127,
        128 => 128,
        129 => 129,
        130 => 130,
        131 => 131,
        132 => 132,
        133 => 133,
        134 => 134,
        135 => 135,
        136 => 136,
        137 => 137,
        138 => 138,
        139 => 139,
        140 => 140,
        143 => 143,
        144 => 144,
        146 => 146,
        147 => 147,
        153 => 153,
        154 => 154,
        155 => 155,
        157 => 157,
        159 => 159,
        160 => 160,
        162 => 162,
        164 => 164,
        165 => 165,
        166 => 166,
        169 => 166,
        167 => 167,
        168 => 168,
        170 => 170,
        171 => 171,
        172 => 172,
        173 => 173,
    );
#line 96 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r0(){
   // execute end of template
   if ($this->compiler->context->caching) {
       $this->compiler->has_code = true;
       $this->compiler->nocache_nolog = true;
   }
    }
#line 1856 "Smarty_Compiler_Template_Php_Parser.php"
#line 108 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r1(){
    }
#line 1860 "Smarty_Compiler_Template_Php_Parser.php"
#line 127 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r5(){
    if ($this->compiler->has_code) {
        $this->compiler->nocacheCode($this->yystack[$this->yyidx + -1]->minor,true);
    } else { 
        $this->compiler->template_code->raw($this->yystack[$this->yyidx + -1]->minor);
    }  
    $this->block_nesting_level = count($this->compiler->_tag_stack);
    }
#line 1870 "Smarty_Compiler_Template_Php_Parser.php"
#line 141 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r7(){
    $this->compiler->template_code->php('echo ')->string($this->yystack[$this->yyidx + 0]->minor)->raw(";\n");
    }
#line 1875 "Smarty_Compiler_Template_Php_Parser.php"
#line 146 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r8(){
    if ($this->php_handling == Smarty::PHP_PASSTHRU) {
        $this->compiler->template_code->php("echo '<?php';\n");
    } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
        $this->compiler->template_code->php("echo '&lt;?php';\n");
    } elseif ($this->php_handling == Smarty::PHP_ALLOW) {
        if (!($this->compiler->template instanceof SmartyBC)) {
            $this->compiler->error (self::Err3);
        }
        $this->text_is_php = true;
    }
    }
#line 1889 "Smarty_Compiler_Template_Php_Parser.php"
#line 160 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r9(){
    if ($this->is_xml) {
        $this->is_xml = false;
        $this->compiler->template_code->php("echo '?>';\n");
    } elseif ($this->php_handling == Smarty::PHP_PASSTHRU) {
        $this->compiler->template_code->php("echo '?>';\n");
    } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
        $this->compiler->template_code->php("echo '?&gt;';\n");
    } elseif ($this->php_handling == Smarty::PHP_ALLOW) {
        $this->text_is_php = false;
    }
    }
#line 1903 "Smarty_Compiler_Template_Php_Parser.php"
#line 174 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r10(){
    if ($this->php_handling == Smarty::PHP_PASSTHRU) {
        $this->compiler->template_code->php("echo '<%';\n");
    } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
        $this->compiler->template_code->php("echo '&lt;%';\n");
    } elseif ($this->php_handling == Smarty::PHP_ALLOW) {
        if ($this->asp_tags) {
            if (!($this->compiler->template instanceof SmartyBC)) {
                $this->compiler->error (self::Err3);
            }
            $this->text_is_php = true;
        } else {
            $this->compiler->template_code->php("echo '<%';\n");
        }
    } elseif ($this->php_handling == Smarty::PHP_REMOVE) {
        if (!$this->asp_tags) {
            $this->compiler->template_code->php("echo '<%';\n");
        }
    }
    }
#line 1925 "Smarty_Compiler_Template_Php_Parser.php"
#line 196 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r11(){
    if ($this->php_handling == Smarty::PHP_PASSTHRU) {
        $this->compiler->template_code->php("echo '%>';\n");
    } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
        $this->compiler->template_code->php("echo '%&gt;';\n");
    } elseif ($this->php_handling == Smarty::PHP_ALLOW) {
        if ($this->asp_tags) {
            $this->text_is_php = false;
        } else {
            $this->compiler->template_code->php("echo '%>';\n");
        }
    } elseif ($this->php_handling == Smarty::PHP_REMOVE) {
        if (!$this->asp_tags) {
            $this->compiler->template_code->php("echo '%>';\n");
        }
    }
    }
#line 1944 "Smarty_Compiler_Template_Php_Parser.php"
#line 214 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r12(){
    if ($this->strip) {
        $this->compiler->template_code->php('echo ')->string(preg_replace('![\t ]*[\r\n]+[\t ]*!', '', $this->yystack[$this->yyidx + 0]->minor))->raw(";\n");
    } else {
        $this->compiler->template_code->php('echo ')->string($this->yystack[$this->yyidx + 0]->minor)->raw(";\n");
    }
    }
#line 1953 "Smarty_Compiler_Template_Php_Parser.php"
#line 223 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r13(){
    $this->is_xml = true; 
    $this->compiler->template_code->php("echo '<?xml';\n");
    }
#line 1959 "Smarty_Compiler_Template_Php_Parser.php"
#line 229 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r14(){
    if ($this->text_is_php) {
        $this->compiler->prefix_code[] = $this->yystack[$this->yyidx + 0]->minor;
        $this->compiler->nocacheCode('', true);
    } else {
        // inheritance child templates shall not output text
        if (!$this->compiler->isInheritanceChild || $this->compiler->block_nesting_level > 0) {
            if ($this->strip) {
                $this->compiler->template_code->php('echo ')->string(preg_replace('![\t ]*[\r\n]+[\t ]*!', '', $this->yystack[$this->yyidx + 0]->minor))->raw(";\n");
            } else {
                $this->compiler->template_code->php('echo ')->string($this->yystack[$this->yyidx + 0]->minor)->raw(";\n");
            }
        }
    }
    }
#line 1976 "Smarty_Compiler_Template_Php_Parser.php"
#line 246 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r15(){
    $this->strip = true;
    }
#line 1981 "Smarty_Compiler_Template_Php_Parser.php"
#line 250 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r16(){
    $this->strip = false;
    }
#line 1986 "Smarty_Compiler_Template_Php_Parser.php"
#line 255 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r17(){
    $this->_retvalue = '';
    }
#line 1991 "Smarty_Compiler_Template_Php_Parser.php"
#line 259 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r18(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;
    }
#line 1996 "Smarty_Compiler_Template_Php_Parser.php"
#line 263 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r19(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2001 "Smarty_Compiler_Template_Php_Parser.php"
#line 271 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r21(){
    $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;
    }
#line 2006 "Smarty_Compiler_Template_Php_Parser.php"
#line 312 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r28(){
    $this->_retvalue = $this->compiler->compileTag('Internal_PrintExpression',$this->yystack[$this->yyidx + 0]->minor,array('value'=>$this->yystack[$this->yyidx + -1]->minor));
    }
#line 2011 "Smarty_Compiler_Template_Php_Parser.php"
#line 333 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r29(){
    $this->_retvalue = $this->compiler->compileTag('assign',array_merge(array(array('value'=>$this->yystack[$this->yyidx + -1]->minor),array('var'=>$this->yystack[$this->yyidx + -3]->minor['var'])),$this->yystack[$this->yyidx + 0]->minor),array('smarty_internal_index'=>$this->yystack[$this->yyidx + -3]->minor['smarty_internal_index']));
    }
#line 2016 "Smarty_Compiler_Template_Php_Parser.php"
#line 338 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r30(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor);
    }
#line 2021 "Smarty_Compiler_Template_Php_Parser.php"
#line 352 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r31(){
    $this->_retvalue = 'ob_start(); '.$this->compiler->compileTag($this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + 0]->minor).' echo ';
    $this->_retvalue .= $this->compiler->compileTag('Internal_Modifier',array(),array('modifier_list'=>$this->yystack[$this->yyidx + -1]->minor,'value'=>'ob_get_clean()')).';';
    }
#line 2027 "Smarty_Compiler_Template_Php_Parser.php"
#line 358 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r32(){
    $this->_retvalue = 'ob_start(); '.$this->compiler->compileTag($this->yystack[$this->yyidx + -4]->minor,$this->yystack[$this->yyidx + 0]->minor,array('object_method'=>$this->yystack[$this->yyidx + -2]->minor)).' echo ';
    $this->_retvalue .= $this->compiler->compileTag('Internal_Modifier',array(),array('modifier_list'=>$this->yystack[$this->yyidx + -1]->minor,'value'=>'ob_get_clean()')).';';
    }
#line 2033 "Smarty_Compiler_Template_Php_Parser.php"
#line 369 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r33(){
    $tag = trim(substr($this->yystack[$this->yyidx + -2]->minor,$this->lex->ldel_length));
    $this->_retvalue = $this->compiler->compileTag(($tag == 'else if')? 'elseif' : $tag,$this->yystack[$this->yyidx + 0]->minor,array('if condition'=>$this->yystack[$this->yyidx + -1]->minor));
    }
#line 2039 "Smarty_Compiler_Template_Php_Parser.php"
#line 385 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r35(){
    $this->_retvalue = $this->compiler->compileTag('for',array_merge($this->yystack[$this->yyidx + 0]->minor,array(array('start'=>$this->yystack[$this->yyidx + -9]->minor),array('ifexp'=>$this->yystack[$this->yyidx + -6]->minor),array('var'=>$this->yystack[$this->yyidx + -3]->minor),array('step'=>'='.$this->yystack[$this->yyidx + -1]->minor))),1);
    }
#line 2044 "Smarty_Compiler_Template_Php_Parser.php"
#line 388 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r36(){
    $len =strlen($this->yystack[$this->yyidx + -1]->minor);
    $this->_retvalue = $this->compiler->compileTag('for',array_merge($this->yystack[$this->yyidx + 0]->minor,array(array('start'=>$this->yystack[$this->yyidx + -7]->minor),array('ifexp'=>$this->yystack[$this->yyidx + -4]->minor),array('var'=>substr($this->yystack[$this->yyidx + -1]->minor,1,$len-3)),array('step'=>substr($this->yystack[$this->yyidx + -1]->minor,$len-2)))),1);
    }
#line 2050 "Smarty_Compiler_Template_Php_Parser.php"
#line 393 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r37(){
    $this->_retvalue = $this->compiler->compileTag('for',array_merge($this->yystack[$this->yyidx + 0]->minor,array(array('start'=>$this->yystack[$this->yyidx + -3]->minor),array('to'=>$this->yystack[$this->yyidx + -1]->minor))),0);
    }
#line 2055 "Smarty_Compiler_Template_Php_Parser.php"
#line 397 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r38(){
    $this->_retvalue = $this->compiler->compileTag('for',array_merge($this->yystack[$this->yyidx + 0]->minor,array(array('start'=>$this->yystack[$this->yyidx + -5]->minor),array('to'=>$this->yystack[$this->yyidx + -3]->minor),array('step'=>$this->yystack[$this->yyidx + -1]->minor))),0);
    }
#line 2060 "Smarty_Compiler_Template_Php_Parser.php"
#line 402 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r39(){
    $this->_retvalue = $this->compiler->compileTag('foreach',$this->yystack[$this->yyidx + 0]->minor);
    }
#line 2065 "Smarty_Compiler_Template_Php_Parser.php"
#line 407 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r40(){
    $this->_retvalue = $this->compiler->compileTag('foreach',array_merge($this->yystack[$this->yyidx + 0]->minor,array(array('from'=>$this->yystack[$this->yyidx + -3]->minor),array('item'=>$this->yystack[$this->yyidx + -1]->minor))));
    }
#line 2070 "Smarty_Compiler_Template_Php_Parser.php"
#line 411 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r41(){
    $this->_retvalue = $this->compiler->compileTag('foreach',array_merge($this->yystack[$this->yyidx + 0]->minor,array(array('from'=>$this->yystack[$this->yyidx + -5]->minor),array('item'=>$this->yystack[$this->yyidx + -1]->minor),array('key'=>$this->yystack[$this->yyidx + -3]->minor))));
    }
#line 2075 "Smarty_Compiler_Template_Php_Parser.php"
#line 424 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r44(){
    $this->_retvalue = $this->compiler->compileTag('setfilter',array(),array('modifier_list'=>array(array_merge(array($this->yystack[$this->yyidx + -1]->minor),$this->yystack[$this->yyidx + 0]->minor))));
    }
#line 2080 "Smarty_Compiler_Template_Php_Parser.php"
#line 428 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r45(){
    $this->_retvalue = $this->compiler->compileTag('setfilter',array(),array('modifier_list'=>array_merge(array(array_merge(array($this->yystack[$this->yyidx + -3]->minor),$this->yystack[$this->yyidx + -2]->minor)),$this->yystack[$this->yyidx + -1]->minor)));
    }
#line 2085 "Smarty_Compiler_Template_Php_Parser.php"
#line 435 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r46(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + 0]->minor.'close',array());
    }
#line 2090 "Smarty_Compiler_Template_Php_Parser.php"
#line 439 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r47(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -1]->minor.'close',array(),array('modifier_list'=>$this->yystack[$this->yyidx + 0]->minor));
    }
#line 2095 "Smarty_Compiler_Template_Php_Parser.php"
#line 444 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r48(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -2]->minor.'close',array(),array('object_method'=>$this->yystack[$this->yyidx + 0]->minor));
    }
#line 2100 "Smarty_Compiler_Template_Php_Parser.php"
#line 448 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r49(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -3]->minor.'close',array(),array('object_method'=>$this->yystack[$this->yyidx + -1]->minor,'modifier_list'=>$this->yystack[$this->yyidx + 0]->minor));
    }
#line 2105 "Smarty_Compiler_Template_Php_Parser.php"
#line 456 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r50(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;
    $this->_retvalue[] = $this->yystack[$this->yyidx + 0]->minor;
    }
#line 2111 "Smarty_Compiler_Template_Php_Parser.php"
#line 462 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r51(){
    $this->_retvalue = array($this->yystack[$this->yyidx + 0]->minor);
    }
#line 2116 "Smarty_Compiler_Template_Php_Parser.php"
#line 467 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r52(){
    $this->_retvalue = array();
    }
#line 2121 "Smarty_Compiler_Template_Php_Parser.php"
#line 472 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r53(){
    if (preg_match('~^true$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>'true');
    } elseif (preg_match('~^false$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>'false');
    } elseif (preg_match('~^null$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>'null');
    } else {
        $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>"'".$this->yystack[$this->yyidx + 0]->minor."'");
    }
    }
#line 2134 "Smarty_Compiler_Template_Php_Parser.php"
#line 484 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r54(){
    $this->_retvalue = array(trim($this->yystack[$this->yyidx + -1]->minor," =\n\r\t")=>$this->yystack[$this->yyidx + 0]->minor);
    }
#line 2139 "Smarty_Compiler_Template_Php_Parser.php"
#line 492 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r55(){
    $this->_retvalue = "'".$this->yystack[$this->yyidx + 0]->minor."'";
    }
#line 2144 "Smarty_Compiler_Template_Php_Parser.php"
#line 517 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r58(){
    $this->yystack[$this->yyidx + -2]->minor[]=$this->yystack[$this->yyidx + 0]->minor;
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor;
    }
#line 2150 "Smarty_Compiler_Template_Php_Parser.php"
#line 523 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r59(){
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor;
    $this->_retvalue['value'] = $this->yystack[$this->yyidx + 0]->minor;
    }
#line 2156 "Smarty_Compiler_Template_Php_Parser.php"
#line 548 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r63(){
    $this->_retvalue = '$this->smarty->getStreamVariable(\''. $this->yystack[$this->yyidx + -2]->minor .'://'. $this->yystack[$this->yyidx + 0]->minor . '\')';
    }
#line 2161 "Smarty_Compiler_Template_Php_Parser.php"
#line 553 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r64(){
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor . trim($this->yystack[$this->yyidx + -1]->minor) . $this->yystack[$this->yyidx + 0]->minor;
    }
#line 2166 "Smarty_Compiler_Template_Php_Parser.php"
#line 572 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r67(){
    $this->_retvalue = $this->compiler->compileTag('Internal_Modifier',array(),array('value'=>$this->yystack[$this->yyidx + -1]->minor,'modifier_list'=>$this->yystack[$this->yyidx + 0]->minor));
    }
#line 2171 "Smarty_Compiler_Template_Php_Parser.php"
#line 578 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r68(){
    $operator = strtolower(trim($this->yystack[$this->yyidx + -1]->minor));
    if (isset($this->opMap[$operator])) {
        $operator = $this->opMap[$operator];
    }
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor." {$operator} ".$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2180 "Smarty_Compiler_Template_Php_Parser.php"
#line 590 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r69(){
    $this->_retvalue = 'in_array('.$this->yystack[$this->yyidx + -2]->minor.',(array)'.$this->yystack[$this->yyidx + 0]->minor.')';
    }
#line 2185 "Smarty_Compiler_Template_Php_Parser.php"
#line 602 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r71(){
    $this->_retvalue = '!('.$this->yystack[$this->yyidx + -2]->minor.' % '.$this->yystack[$this->yyidx + 0]->minor.')';
    }
#line 2190 "Smarty_Compiler_Template_Php_Parser.php"
#line 606 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r72(){
    $this->_retvalue = '('.$this->yystack[$this->yyidx + -2]->minor.' % '.$this->yystack[$this->yyidx + 0]->minor.')';
    }
#line 2195 "Smarty_Compiler_Template_Php_Parser.php"
#line 610 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r73(){
    $this->_retvalue = '!(1 & '.$this->yystack[$this->yyidx + -1]->minor.')';
    }
#line 2200 "Smarty_Compiler_Template_Php_Parser.php"
#line 614 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r74(){
    $this->_retvalue = '(1 & '.$this->yystack[$this->yyidx + -1]->minor.')';
    }
#line 2205 "Smarty_Compiler_Template_Php_Parser.php"
#line 618 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r75(){
    $this->_retvalue = '!(1 & '.$this->yystack[$this->yyidx + -2]->minor.' / '.$this->yystack[$this->yyidx + 0]->minor.')';
    }
#line 2210 "Smarty_Compiler_Template_Php_Parser.php"
#line 622 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r76(){
    $this->_retvalue = '(1 & '.$this->yystack[$this->yyidx + -2]->minor.' / '.$this->yystack[$this->yyidx + 0]->minor.')';
    }
#line 2215 "Smarty_Compiler_Template_Php_Parser.php"
#line 642 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r81(){
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2220 "Smarty_Compiler_Template_Php_Parser.php"
#line 650 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r83(){
    $this->prefix_number++;
    $this->compiler->prefix_code[] = '$_tmp'.$this->prefix_number.'='.$this->yystack[$this->yyidx + 0]->minor.';';
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.'$_tmp'.$this->prefix_number;
    }
#line 2227 "Smarty_Compiler_Template_Php_Parser.php"
#line 663 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r85(){
    $this->_retvalue = $this->yystack[$this->yyidx + -6]->minor.' ? '. $this->compiler->compileVariable("'".$this->yystack[$this->yyidx + -2]->minor."'") . ' : '.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2232 "Smarty_Compiler_Template_Php_Parser.php"
#line 667 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r86(){
    $this->_retvalue = $this->yystack[$this->yyidx + -5]->minor.' ? '.$this->yystack[$this->yyidx + -2]->minor.' : '.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2237 "Smarty_Compiler_Template_Php_Parser.php"
#line 683 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r89(){
    $operator = strtolower(trim($this->yystack[$this->yyidx + -1]->minor));
    if (isset($this->opMap[$operator])) {
        $operator = $this->opMap[$operator];
    }

    $this->_retvalue = $operator.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2247 "Smarty_Compiler_Template_Php_Parser.php"
#line 706 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r93(){
    if (preg_match('~^true$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = 'true';
    } elseif (preg_match('~^false$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = 'false';
    } elseif (preg_match('~^null$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = 'null';
    } else {
        $this->_retvalue = "'".$this->yystack[$this->yyidx + 0]->minor."'";
    }
    }
#line 2260 "Smarty_Compiler_Template_Php_Parser.php"
#line 724 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r95(){
    $this->_retvalue = "(". $this->yystack[$this->yyidx + -1]->minor .")";
    }
#line 2265 "Smarty_Compiler_Template_Php_Parser.php"
#line 738 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r98(){
    $len = strlen($this->yystack[$this->yyidx + 0]->minor);
    $this->_retvalue = '$_scope->' . substr($this->yystack[$this->yyidx + 0]->minor,1,$len-3) . '->value' . substr($this->yystack[$this->yyidx + 0]->minor,$len-2);
    }
#line 2271 "Smarty_Compiler_Template_Php_Parser.php"
#line 744 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r99(){
    if (!$this->security || isset($this->compiler->context->smarty->_registered['class'][$this->yystack[$this->yyidx + -1]->minor]) || $this->compiler->context->smarty->security_policy->isTrustedStaticClass($this->yystack[$this->yyidx + -1]->minor, $this->compiler)) {
        if (isset($this->compiler->context->smarty->_registered['class'][$this->yystack[$this->yyidx + -1]->minor])) {
            $this->_retvalue = $this->compiler->context->smarty->_registered['class'][$this->yystack[$this->yyidx + -1]->minor].$this->yystack[$this->yyidx + 0]->minor;
        } else {
            $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
        } 
    } else {
        $this->compiler->error ("static class '".$this->yystack[$this->yyidx + -1]->minor."' is undefined or not allowed by security setting");
    }
    }
#line 2284 "Smarty_Compiler_Template_Php_Parser.php"
#line 757 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r100(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.r;
    }
#line 2289 "Smarty_Compiler_Template_Php_Parser.php"
#line 766 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r102(){
    $this->_retvalue = $this->compiler->compileVariable($this->yystack[$this->yyidx + -1]->minor).$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2294 "Smarty_Compiler_Template_Php_Parser.php"
#line 771 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r103(){
    $this->prefix_number++;
    $code = new Smarty_Compiler_Code();
    $code->iniTagCode($this->compiler);
    $code->php("ob_start();")->newline();
    $code->mergeCode($this->yystack[$this->yyidx + 0]->minor);
    $code->php("\$_tmp{$this->prefix_number} = ob_get_clean();")->newline();
    $this->compiler->prefix_code[] = $code;
    $this->_retvalue = '$_tmp'.$this->prefix_number;
    }
#line 2306 "Smarty_Compiler_Template_Php_Parser.php"
#line 792 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r105(){
    if ($this->yystack[$this->yyidx + 0]->minor['var'] == 'smarty') {
        $this->_retvalue = $this->compiler->compileTag('Internal_SpecialVariable',array(),$this->yystack[$this->yyidx + 0]->minor['smarty_internal_index']);
    } else {
        $this->_retvalue = $this->compiler->compileVariable($this->yystack[$this->yyidx + 0]->minor['var']).$this->yystack[$this->yyidx + 0]->minor['smarty_internal_index'];
    }
    }
#line 2315 "Smarty_Compiler_Template_Php_Parser.php"
#line 801 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r106(){
    $this->_retvalue = '$_scope->' . trim($this->yystack[$this->yyidx + -2]->minor,"'") . '->' . $this->yystack[$this->yyidx + 0]->minor;
    }
#line 2320 "Smarty_Compiler_Template_Php_Parser.php"
#line 816 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r108(){
    $var = trim($this->yystack[$this->yyidx + -2]->minor,'\'');
    $this->_retvalue = "\$_scope->___config_var_{$var}".$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2326 "Smarty_Compiler_Template_Php_Parser.php"
#line 825 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r109(){
    $this->_retvalue = "\$_scope->___config_var_{{$this->yystack[$this->yyidx + -2]->minor}}".$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2331 "Smarty_Compiler_Template_Php_Parser.php"
#line 829 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r110(){
    $this->_retvalue = array('var'=>$this->yystack[$this->yyidx + -1]->minor, 'smarty_internal_index'=>$this->yystack[$this->yyidx + 0]->minor);
    }
#line 2336 "Smarty_Compiler_Template_Php_Parser.php"
#line 842 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r112(){
    return;
    }
#line 2341 "Smarty_Compiler_Template_Php_Parser.php"
#line 848 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r113(){
    $this->_retvalue = '['.$this->compiler->compileVariable($this->yystack[$this->yyidx + 0]->minor).']';
    }
#line 2346 "Smarty_Compiler_Template_Php_Parser.php"
#line 852 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r114(){
    $this->_retvalue = '['.$this->compiler->compileVariable($this->yystack[$this->yyidx + -2]->minor).'->'.$this->yystack[$this->yyidx + 0]->minor.']';
    }
#line 2351 "Smarty_Compiler_Template_Php_Parser.php"
#line 856 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r115(){
    $this->_retvalue = "['". $this->yystack[$this->yyidx + 0]->minor ."']";
    }
#line 2356 "Smarty_Compiler_Template_Php_Parser.php"
#line 861 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r116(){
    $this->_retvalue = "[". implode('][', explode('.', $this->yystack[$this->yyidx + 0]->minor)) ."]";
    }
#line 2361 "Smarty_Compiler_Template_Php_Parser.php"
#line 865 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r117(){
    $this->_retvalue = "[". $this->yystack[$this->yyidx + 0]->minor ."]";
    }
#line 2366 "Smarty_Compiler_Template_Php_Parser.php"
#line 870 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r118(){
    $this->_retvalue = '['.$this->compiler->compileTag('Internal_SpecialVariable',array(),'[\'section\'][\''.$this->yystack[$this->yyidx + -1]->minor.'\'][\'index\']').']';
    }
#line 2371 "Smarty_Compiler_Template_Php_Parser.php"
#line 874 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r119(){
    $this->_retvalue = '['.$this->compiler->compileTag('Internal_SpecialVariable',array(),'[\'section\'][\''.$this->yystack[$this->yyidx + -3]->minor.'\'][\''.$this->yystack[$this->yyidx + -1]->minor.'\']').']';
    }
#line 2376 "Smarty_Compiler_Template_Php_Parser.php"
#line 879 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r120(){
    $this->_retvalue = "[". $this->yystack[$this->yyidx + -1]->minor ."]";
    }
#line 2381 "Smarty_Compiler_Template_Php_Parser.php"
#line 884 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r121(){
    $this->_retvalue = '[]';
    }
#line 2386 "Smarty_Compiler_Template_Php_Parser.php"
#line 888 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r122(){
    $this->_retvalue = '::'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2391 "Smarty_Compiler_Template_Php_Parser.php"
#line 900 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r124(){
    $this->prefix_number++;
    $code = new Smarty_Compiler_Code;
    $code->iniTagCode($this->compiler);
    $code->php('$_tmp'.$this->prefix_number.'='.$this->yystack[$this->yyidx + 0]->minor.";\n");
    $this->compiler->prefix_code[] = $code;
    $this->_retvalue = '$_tmp'.$this->prefix_number;
    }
#line 2401 "Smarty_Compiler_Template_Php_Parser.php"
#line 910 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r125(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.'.'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2406 "Smarty_Compiler_Template_Php_Parser.php"
#line 915 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r126(){
    $this->_retvalue = '\''.$this->yystack[$this->yyidx + 0]->minor.'\'';
    }
#line 2411 "Smarty_Compiler_Template_Php_Parser.php"
#line 920 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r127(){
    $this->_retvalue = '('.$this->yystack[$this->yyidx + 0]->minor.')';
    }
#line 2416 "Smarty_Compiler_Template_Php_Parser.php"
#line 927 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r128(){
    if ($this->yystack[$this->yyidx + -1]->minor['var'] == '\'smarty\'') {
        $this->_retvalue =  $this->compiler->compileTag('Internal_SpecialVariable',array(),$this->yystack[$this->yyidx + -1]->minor['smarty_internal_index']).$this->yystack[$this->yyidx + 0]->minor;
    } else {
        $this->_retvalue = $this->compiler->compileVariable($this->yystack[$this->yyidx + -1]->minor['var']).$this->yystack[$this->yyidx + -1]->minor['smarty_internal_index'].$this->yystack[$this->yyidx + 0]->minor;
    }
    }
#line 2425 "Smarty_Compiler_Template_Php_Parser.php"
#line 936 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r129(){
    $this->_retvalue  = $this->yystack[$this->yyidx + 0]->minor;
    }
#line 2430 "Smarty_Compiler_Template_Php_Parser.php"
#line 941 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r130(){
    $this->_retvalue  = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2435 "Smarty_Compiler_Template_Php_Parser.php"
#line 946 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r131(){
    if ($this->security && substr($this->yystack[$this->yyidx + -1]->minor,0,1) == '_') {
        $this->compiler->error (self::Err1);
    }
    $this->_retvalue = '->'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2443 "Smarty_Compiler_Template_Php_Parser.php"
#line 953 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r132(){
    if ($this->security) {
        $this->compiler->error (self::Err2);
    }
    $this->_retvalue = '->{'.$this->yystack[$this->yyidx + 0]->minor.'}';
    }
#line 2451 "Smarty_Compiler_Template_Php_Parser.php"
#line 960 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r133(){
    if ($this->security) {
        $this->compiler->error (self::Err2);
    }
    $this->_retvalue = '->{'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor.'}';
    }
#line 2459 "Smarty_Compiler_Template_Php_Parser.php"
#line 967 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r134(){
    if ($this->security) {
        $this->compiler->error (self::Err2);
    }
    $this->_retvalue = '->{\''.$this->yystack[$this->yyidx + -2]->minor.'\'.'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor.'}';
    }
#line 2467 "Smarty_Compiler_Template_Php_Parser.php"
#line 975 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r135(){
    $this->_retvalue = '->'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2472 "Smarty_Compiler_Template_Php_Parser.php"
#line 983 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r136(){
    if (!$this->security || $this->compiler->context->smarty->security_policy->isTrustedPhpFunction($this->yystack[$this->yyidx + -3]->minor, $this->compiler)) {
        if (strcasecmp($this->yystack[$this->yyidx + -3]->minor,'isset') === 0 || strcasecmp($this->yystack[$this->yyidx + -3]->minor,'empty') === 0 || strcasecmp($this->yystack[$this->yyidx + -3]->minor,'array') === 0 || is_callable($this->yystack[$this->yyidx + -3]->minor)) {
            $func_name = strtolower($this->yystack[$this->yyidx + -3]->minor);
            if ($func_name == 'isset') {
                if (count($this->yystack[$this->yyidx + -1]->minor) == 0) {
                    $this->compiler->error ('Illegal number of paramer in "isset()"');
                }
                $par = implode(',',$this->yystack[$this->yyidx + -1]->minor);
                preg_match('/\$_scope->([0-9]*[a-zA-Z_]\w*)(.*)/',$par,$match);
                if (isset($match[1])) {
                    $search = array('/\$_scope->([0-9]*[a-zA-Z_]\w*)/','/->value.*/');
                    $replace = array('$this->_getVariable(\'\1\', null, false, false)','');
                    $this->prefix_number++;
                    $code = new Smarty_Compiler_Code();
                    $code->iniTagCode($this->compiler);
                    $code->php("\$_tmp{$this->prefix_number} = "  .preg_replace($search, $replace, $par) . ';')->newline();
                    $this->compiler->prefix_code[] = $code;
                    $isset_par = '$_tmp'.$this->prefix_number.$match[2];
                } else {
                    $this->prefix_number++;
                    $code = new Smarty_Compiler_Code();
                    $code->iniTagCode($this->compiler);
                    $code->php("\$_tmp{$this->prefix_number} = " . $par . ';')->newline();
                    $this->compiler->prefix_code[] = $code;
                    $isset_par = '$_tmp'.$this->prefix_number;
                }
                $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". $isset_par .")";
            } elseif (in_array($func_name,array('empty','reset','current','end','prev','next'))){
                if (count($this->yystack[$this->yyidx + -1]->minor) != 1) {
                    $this->compiler->error ("Illegal number of paramer in \"{$func_name}\"");
                }
                $this->_retvalue = $func_name.'('.$this->yystack[$this->yyidx + -1]->minor[0].')';
            } else {
                $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". implode(',',$this->yystack[$this->yyidx + -1]->minor) .")";
            }
        } else {
            $this->compiler->error ("unknown function \"" . $this->yystack[$this->yyidx + -3]->minor . "\"");
        }
    }
    }
#line 2515 "Smarty_Compiler_Template_Php_Parser.php"
#line 1028 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r137(){
    if (!$this->security || $this->compiler->context->smarty->security_policy->isTrustedPhpFunction($this->yystack[$this->yyidx + -3]->minor, $this->compiler)) {
        if (is_callable($this->yystack[$this->yyidx + -3]->minor)) {
            $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". implode(',',$this->yystack[$this->yyidx + -1]->minor) .")";
        } else {
            $this->compiler->error ("unknown function \"" . $this->yystack[$this->yyidx + -3]->minor . "\"");
        }
    }
    }
#line 2526 "Smarty_Compiler_Template_Php_Parser.php"
#line 1041 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r138(){
    if ($this->security && substr($this->yystack[$this->yyidx + -3]->minor,0,1) == '_') {
        $this->compiler->error (self::Err1);
    }
    $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". implode(',',$this->yystack[$this->yyidx + -1]->minor) .")";
    }
#line 2534 "Smarty_Compiler_Template_Php_Parser.php"
#line 1048 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r139(){
    if ($this->security) {
        $this->compiler->error (self::Err2);
    }
    $this->prefix_number++;
    $code = new Smarty_Compiler_Code();
    $code->iniTagCode($this->compiler);
    $code->php("\$_tmp{$this->prefix_number} = " . $this->compiler->compileVariable("'".$this->yystack[$this->yyidx + -3]->minor."'") . ';')->newline();
    $this->compiler->prefix_code[] = $code;
    $this->_retvalue = '$_tmp'.$this->prefix_number.'('. implode(',',$this->yystack[$this->yyidx + -1]->minor) .')';
    }
#line 2547 "Smarty_Compiler_Template_Php_Parser.php"
#line 1062 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r140(){
    $this->_retvalue = array_merge($this->yystack[$this->yyidx + -2]->minor,array($this->yystack[$this->yyidx + 0]->minor));
    }
#line 2552 "Smarty_Compiler_Template_Php_Parser.php"
#line 1082 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r143(){
    $this->_retvalue = array_merge($this->yystack[$this->yyidx + -2]->minor,array(array_merge($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor)));
    }
#line 2557 "Smarty_Compiler_Template_Php_Parser.php"
#line 1086 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r144(){
    $this->_retvalue = array(array_merge($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor));
    }
#line 2562 "Smarty_Compiler_Template_Php_Parser.php"
#line 1094 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r146(){
    $this->_retvalue =  array($this->yystack[$this->yyidx + 0]->minor);
    }
#line 2567 "Smarty_Compiler_Template_Php_Parser.php"
#line 1102 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r147(){
    $this->_retvalue = array_merge($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor);
    }
#line 2572 "Smarty_Compiler_Template_Php_Parser.php"
#line 1132 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r153(){
    $this->_retvalue = '$'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2577 "Smarty_Compiler_Template_Php_Parser.php"
#line 1137 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r154(){
    $this->_retvalue = '$'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2582 "Smarty_Compiler_Template_Php_Parser.php"
#line 1146 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r155(){
    $this->_retvalue = 'array('.$this->yystack[$this->yyidx + -1]->minor.')';
    }
#line 2587 "Smarty_Compiler_Template_Php_Parser.php"
#line 1154 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r157(){
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.','.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2592 "Smarty_Compiler_Template_Php_Parser.php"
#line 1162 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r159(){
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'=>'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2597 "Smarty_Compiler_Template_Php_Parser.php"
#line 1166 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r160(){ 
    $this->_retvalue = '\''.$this->yystack[$this->yyidx + -2]->minor.'\'=>'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2602 "Smarty_Compiler_Template_Php_Parser.php"
#line 1178 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r162(){
    $this->_retvalue = "''";
    }
#line 2607 "Smarty_Compiler_Template_Php_Parser.php"
#line 1187 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r164(){
    if ($this->yystack[$this->yyidx + 0]->minor === false) {
       $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;
    } else {
       $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor. '.' . $this->yystack[$this->yyidx + 0]->minor;
    }
    }
#line 2616 "Smarty_Compiler_Template_Php_Parser.php"
#line 1195 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r165(){
    if ($this->yystack[$this->yyidx + 0]->minor === false) {
       $this->_retvalue = "''";
    } else {
       $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;
    }
    }
#line 2625 "Smarty_Compiler_Template_Php_Parser.php"
#line 1203 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r166(){
    if (empty($this->db_quote_code_buffer)) {
        $this->_retvalue = '(string)'.$this->yystack[$this->yyidx + -1]->minor;
    } else {
        $this->db_quote_code_buffer .= 'echo (string)'.$this->yystack[$this->yyidx + -1]->minor.';';
        $this->_retvalue = false;
    }
    }
#line 2635 "Smarty_Compiler_Template_Php_Parser.php"
#line 1212 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r167(){
    if (empty($this->db_quote_code_buffer)) {
        $this->_retvalue = '(string)('.$this->yystack[$this->yyidx + -1]->minor.')';
    } else {
        $this->db_quote_code_buffer .= 'echo (string)('.$this->yystack[$this->yyidx + -1]->minor.');';
        $this->_retvalue = false;
    }
    }
#line 2645 "Smarty_Compiler_Template_Php_Parser.php"
#line 1221 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r168(){
    if (empty($this->db_quote_code_buffer)) {
        $this->_retvalue = '(string)$_scope->'. substr($this->yystack[$this->yyidx + 0]->minor,1) . '->value';
    } else {
        $this->db_quote_code_buffer .= 'echo (string)$_scope->'. substr($this->yystack[$this->yyidx + 0]->minor,1) . '->value;';
        $this->_retvalue = false;
    }
    }
#line 2655 "Smarty_Compiler_Template_Php_Parser.php"
#line 1239 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r170(){
    if (empty($this->db_quote_code_buffer)) {
        $this->_retvalue = '(string)('.$this->yystack[$this->yyidx + 0]->minor.')';
    } else {
        $this->db_quote_code_buffer .= 'echo (string)('.$this->yystack[$this->yyidx + 0]->minor.');';
        $this->_retvalue = false;
    }
    }
#line 2665 "Smarty_Compiler_Template_Php_Parser.php"
#line 1248 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r171(){
    if (empty($this->db_quote_code_buffer)) {
            $this->db_quote_code_buffer = "ob_start();\n";
    }
    $this->db_quote_code_buffer .= $this->yystack[$this->yyidx + -1]->minor->buffer;
        if ($this->block_nesting_level == count($this->compiler->_tag_stack)) {
        $this->prefix_number++;
        $code = new Smarty_Compiler_Code();
        $code->iniTagCode($this->compiler);
        $code->formatPHP( $this->db_quote_code_buffer . ' $_tmp'.$this->prefix_number.'=ob_get_clean();')->newline();
        $this->compiler->prefix_code[] = $code;
        $this->db_quote_code_buffer = '';
        $this->_retvalue = '$_tmp'.$this->prefix_number;
    } else {
        $this->_retvalue = false;
    }

    }
#line 2685 "Smarty_Compiler_Template_Php_Parser.php"
#line 1267 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r172(){
    if (empty($this->db_quote_code_buffer)) {
        $this->_retvalue = '"'.$this->yystack[$this->yyidx + 0]->minor.'"';
    } else {
        $this->db_quote_code_buffer .= 'echo ' . sprintf('"%s"', addcslashes($this->yystack[$this->yyidx + 0]->minor, "\0\t\n\r\"\$\\")) . ';';
        $this->_retvalue = false;
    }
    }
#line 2695 "Smarty_Compiler_Template_Php_Parser.php"
#line 1276 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r173(){
    $this->compiler->lex->yypopstate();
    $this->_retvalue = '';
    }
#line 2701 "Smarty_Compiler_Template_Php_Parser.php"

    private $_retvalue;

    public function yy_reduce($yyruleno)
    {
        $yymsp = $this->yystack[$this->yyidx];
        if (self::$yyTraceFILE && $yyruleno >= 0
              && $yyruleno < count(self::$yyRuleName)) {
            fprintf(self::$yyTraceFILE, "%sReduce (%d) [%s].\n",
                self::$yyTracePrompt, $yyruleno,
                self::$yyRuleName[$yyruleno]);
        }

        $this->_retvalue = $yy_lefthand_side = null;
        if (array_key_exists($yyruleno, self::$yyReduceMap)) {
            // call the action
            $this->_retvalue = null;
            $this->{'yy_r' . self::$yyReduceMap[$yyruleno]}();
            $yy_lefthand_side = $this->_retvalue;
        }
        $yygoto = self::$yyRuleInfo[$yyruleno]['lhs'];
        $yysize = self::$yyRuleInfo[$yyruleno]['rhs'];
        $this->yyidx -= $yysize;
        for ($i = $yysize; $i; $i--) {
            // pop all of the right-hand side parameters
            array_pop($this->yystack);
        }
        $yyact = $this->yy_find_reduce_action($this->yystack[$this->yyidx]->stateno, $yygoto);
        if ($yyact < self::YYNSTATE) {
            if (!self::$yyTraceFILE && $yysize) {
                $this->yyidx++;
                $x = new TP_yyStackEntry;
                $x->stateno = $yyact;
                $x->major = $yygoto;
                $x->minor = $yy_lefthand_side;
                $this->yystack[$this->yyidx] = $x;
            } else {
                $this->yy_shift($yyact, $yygoto, $yy_lefthand_side);
            }
        } elseif ($yyact == self::YYNSTATE + self::YYNRULE + 1) {
            $this->yy_accept();
        }
    }

    public function yy_parse_failed()
    {
        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sFail!\n", self::$yyTracePrompt);
        }
        while ($this->yyidx >= 0) {
            $this->yy_pop_parser_stack();
        }
    }

    public function yy_syntax_error($yymajor, $TOKEN)
    {
#line 64 "Smarty_Compiler_Template_Php_Parser.y"

    $this->internalError = true;
    // expected token from parser
    $error_text = "<br> Syntax error :Unexpected '<b>{$this->lex->value}</b>'";
    if (count($this->yy_get_expected_tokens($yymajor)) <= 4) {
        foreach ($this->yy_get_expected_tokens($yymajor) as $token) {
            $exp_token = $this->yyTokenName[$token];
            if (isset($this->lex->smarty_token_names[$exp_token])) {
                // token type from lexer
                $expect[] = "'<b>{$this->lex->smarty_token_names[$exp_token]}</b>'";
            } else {
                // otherwise internal token name
                $expect[] = $this->yyTokenName[$token];
            }
        }
        $error_text .= ', expected one of: ' . implode(' , ', $expect) . '<br>';
    }
    $this->compiler->error($error_text);
#line 2778 "Smarty_Compiler_Template_Php_Parser.php"
    }

    public function yy_accept()
    {
        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sAccept!\n", self::$yyTracePrompt);
        } while ($this->yyidx >= 0) {
            $stack = $this->yy_pop_parser_stack();
        }
#line 56 "Smarty_Compiler_Template_Php_Parser.y"

    $this->successful = !$this->internalError;
    $this->internalError = false;
    $this->retvalue = $this->_retvalue;
    //echo $this->retvalue."\n\n";
#line 2795 "Smarty_Compiler_Template_Php_Parser.php"
    }

    public function doParse($yymajor, $yytokenvalue)
    {
        $yyerrorhit = 0;   /* True if yymajor has invoked an error */

        if ($this->yyidx === null || $this->yyidx < 0) {
            $this->yyidx = 0;
            $this->yyerrcnt = -1;
            $x = new TP_yyStackEntry;
            $x->stateno = 0;
            $x->major = 0;
            $this->yystack = array();
            array_push($this->yystack, $x);
        }
        $yyendofinput = ($yymajor==0);

        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sInput %s\n",
                self::$yyTracePrompt, $this->yyTokenName[$yymajor]);
        }

        do {
            $yyact = $this->yy_find_shift_action($yymajor);
            if ($yymajor < self::YYERRORSYMBOL &&
                  !$this->yy_is_expected_token($yymajor)) {
                // force a syntax error
                $yyact = self::YY_ERROR_ACTION;
            }
            if ($yyact < self::YYNSTATE) {
                $this->yy_shift($yyact, $yymajor, $yytokenvalue);
                $this->yyerrcnt--;
                if ($yyendofinput && $this->yyidx >= 0) {
                    $yymajor = 0;
                } else {
                    $yymajor = self::YYNOCODE;
                }
            } elseif ($yyact < self::YYNSTATE + self::YYNRULE) {
                $this->yy_reduce($yyact - self::YYNSTATE);
            } elseif ($yyact == self::YY_ERROR_ACTION) {
                if (self::$yyTraceFILE) {
                    fprintf(self::$yyTraceFILE, "%sSyntax Error!\n",
                        self::$yyTracePrompt);
                }
                if (self::YYERRORSYMBOL) {
                    if ($this->yyerrcnt < 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $yymx = $this->yystack[$this->yyidx]->major;
                    if ($yymx == self::YYERRORSYMBOL || $yyerrorhit) {
                        if (self::$yyTraceFILE) {
                            fprintf(self::$yyTraceFILE, "%sDiscard input token %s\n",
                                self::$yyTracePrompt, $this->yyTokenName[$yymajor]);
                        }
                        $this->yy_destructor($yymajor, $yytokenvalue);
                        $yymajor = self::YYNOCODE;
                    } else {
                        while ($this->yyidx >= 0 &&
                                 $yymx != self::YYERRORSYMBOL &&
        ($yyact = $this->yy_find_shift_action(self::YYERRORSYMBOL)) >= self::YYNSTATE
                              ){
                            $this->yy_pop_parser_stack();
                        }
                        if ($this->yyidx < 0 || $yymajor==0) {
                            $this->yy_destructor($yymajor, $yytokenvalue);
                            $this->yy_parse_failed();
                            $yymajor = self::YYNOCODE;
                        } elseif ($yymx != self::YYERRORSYMBOL) {
                            $u2 = 0;
                            $this->yy_shift($yyact, self::YYERRORSYMBOL, $u2);
                        }
                    }
                    $this->yyerrcnt = 3;
                    $yyerrorhit = 1;
                } else {
                    if ($this->yyerrcnt <= 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $this->yyerrcnt = 3;
                    $this->yy_destructor($yymajor, $yytokenvalue);
                    if ($yyendofinput) {
                        $this->yy_parse_failed();
                    }
                    $yymajor = self::YYNOCODE;
                }
            } else {
                $this->yy_accept();
                $yymajor = self::YYNOCODE;
            }
        } while ($yymajor != self::YYNOCODE && $this->yyidx >= 0);
    }
}
