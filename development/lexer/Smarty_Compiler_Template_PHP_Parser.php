<?php
/**
* Smarty Internal Plugin Template_parser
*
* This is the template parser.
* It is generated from the internal.template_parser.y file
* @package Smarty
* @subpackage Compiler
* @author Uwe Tews
*/
class TP_yyToken implements ArrayAccess
{
    public $string = '';
    public $metadata = array();

    public function __construct($s, $m = array())
    {
        if ($s instanceof TP_yyToken) {
            $this->string = $s->string;
            $this->metadata = $s->metadata;
        } else {
            $this->string = (string) $s;
            if ($m instanceof TP_yyToken) {
                $this->metadata = $m->metadata;
            } elseif (is_array($m)) {
                $this->metadata = $m;
            }
        }
    }

    public function __toString()
    {
        return $this->_string;
    }

    public function offsetExists($offset)
    {
        return isset($this->metadata[$offset]);
    }

    public function offsetGet($offset)
    {
        return $this->metadata[$offset];
    }

    public function offsetSet($offset, $value)
    {
        if ($offset === null) {
            if (isset($value[0])) {
                $x = ($value instanceof TP_yyToken) ?
                    $value->metadata : $value;
                $this->metadata = array_merge($this->metadata, $x);

                return;
            }
            $offset = count($this->metadata);
        }
        if ($value === null) {
            return;
        }
        if ($value instanceof TP_yyToken) {
            if ($value->metadata) {
                $this->metadata[$offset] = $value->metadata;
            }
        } elseif ($value) {
            $this->metadata[$offset] = $value;
        }
    }

    public function offsetUnset($offset)
    {
        unset($this->metadata[$offset]);
    }
}

class TP_yyStackEntry
{
    public $stateno;       /* The state-number */
    public $major;         /* The major token value.  This is the code
                     ** number for the token at this stack level */
    public $minor; /* The user-supplied minor token value.  This
                     ** is the value of the token  */
};


#line 13 "Smarty_Compiler_Template_Php_Parser.y"
class Smarty_Compiler_Template_PHP_Parser extends Smarty_Exception_Magic#line 80 "Smarty_Compiler_Template_Php_Parser.php"
{
#line 15 "Smarty_Compiler_Template_Php_Parser.y"

    const Err1 = "Security error: Call to private object member not allowed";
    const Err2 = "Security error: Call to dynamic object member not allowed";
    const Err3 = "PHP in template not allowed. Use SmartyBC to enable it";
    // states whether the parse was successful or not
    public $successful = true;
    public $retvalue = 0;
    public  $lex = null;
    public  $compiler = null;
    public  $prefix_number = 0;
    public  $block_nesting_level = 0;
    private $internalError = false;
    private $strip = false;
    private $text_is_php = false;
    private $is_xml = false;
    private $db_quote_code_buffer = '';
    private $asp_tags = null;
    private $php_handling = null;
    private $security = null;
    private $opMap = array('and' => '&&', 'or' => '||', 'eq' => '==', 'neq' => '!=', 'ne' => '!=', 'gt' => '>',
                            'lt' => '<', 'ge' => '>=', 'gte' => '>=', 'le' => '<=' , 'lte' => '<=', 'mod' => '%',
                            'not' => '!');

    function __construct($lex, $compiler) {
        $this->lex = $lex;
        $this->lex->parser_class = get_class($this);
        $this->compiler = $compiler;
        $this->compiler->prefix_code = array();
        if ($this->security = isset($this->compiler->tpl_obj->security_policy)) {
            $this->php_handling = $this->compiler->tpl_obj->security_policy->php_handling;
        } else {
            $this->php_handling = $this->compiler->tpl_obj->php_handling;
        }
       $this->asp_tags = (ini_get('asp_tags') != '0');
    }
#line 119 "Smarty_Compiler_Template_Php_Parser.php"

    const TP_VERT                           =  1;
    const TP_COLON                          =  2;
    const TP_TEMPLATEINIT                   =  3;
    const TP_RDEL                           =  4;
    const TP_COMMENT                        =  5;
    const TP_PHPSTARTTAG                    =  6;
    const TP_PHPENDTAG                      =  7;
    const TP_ASPSTARTTAG                    =  8;
    const TP_ASPENDTAG                      =  9;
    const TP_FAKEPHPSTARTTAG                = 10;
    const TP_XMLTAG                         = 11;
    const TP_TEXT                           = 12;
    const TP_STRIPON                        = 13;
    const TP_STRIPOFF                       = 14;
    const TP_LITERALSTART                   = 15;
    const TP_LITERALEND                     = 16;
    const TP_LITERAL                        = 17;
    const TP_LDEL                           = 18;
    const TP_EQUAL                          = 19;
    const TP_ID                             = 20;
    const TP_PTR                            = 21;
    const TP_LDELIF                         = 22;
    const TP_LDELFOR                        = 23;
    const TP_SEMICOLON                      = 24;
    const TP_IDINCDEC                       = 25;
    const TP_TO                             = 26;
    const TP_STEP                           = 27;
    const TP_LDELFOREACH                    = 28;
    const TP_SPACE                          = 29;
    const TP_AS                             = 30;
    const TP_APTR                           = 31;
    const TP_LDELSETFILTER                  = 32;
    const TP_LDELSLASH                      = 33;
    const TP_ATTR                           = 34;
    const TP_INTEGER                        = 35;
    const TP_COMMA                          = 36;
    const TP_OPENP                          = 37;
    const TP_CLOSEP                         = 38;
    const TP_DOLLAR                         = 39;
    const TP_MATH                           = 40;
    const TP_UNIMATH                        = 41;
    const TP_ANDSYM                         = 42;
    const TP_IFCOND                         = 43;
    const TP_ISIN                           = 44;
    const TP_LOP                            = 45;
    const TP_ISDIVBY                        = 46;
    const TP_ISNOTDIVBY                     = 47;
    const TP_ISEVEN                         = 48;
    const TP_ISNOTEVEN                      = 49;
    const TP_ISEVENBY                       = 50;
    const TP_ISNOTEVENBY                    = 51;
    const TP_ISODD                          = 52;
    const TP_ISNOTODD                       = 53;
    const TP_ISODDBY                        = 54;
    const TP_ISNOTODDBY                     = 55;
    const TP_INSTANCEOF                     = 56;
    const TP_NAMESPACE                      = 57;
    const TP_QMARK                          = 58;
    const TP_NOT                            = 59;
    const TP_TYPECAST                       = 60;
    const TP_NUMBER                         = 61;
    const TP_DOT                            = 62;
    const TP_SINGLEQUOTESTRING              = 63;
    const TP_AT                             = 64;
    const TP_HATCH                          = 65;
    const TP_OPENB                          = 66;
    const TP_CLOSEB                         = 67;
    const TP_DOUBLECOLON                    = 68;
    const TP_QUOTE                          = 69;
    const TP_BACKTICK                       = 70;
    const TP_DOLLARID                       = 71;
    const TP_DQTAG                          = 72;
    const YY_NO_ACTION = 506;
    const YY_ACCEPT_ACTION = 505;
    const YY_ERROR_ACTION = 504;

    const YY_SZ_ACTTAB = 1912;
static public $yy_action = array(
 /*     0 */    39,   38,  135,  143,    8,   58,   31,  250,  183,   20,
 /*    10 */   118,  318,  274,   16,  204,  219,  308,  231,   31,   15,
 /*    20 */    69,  115,  101,   43,  213,    2,  311,  180,  114,  187,
 /*    30 */   117,  273,  188,  309,  243,  263,  275,  198,  232,  165,
 /*    40 */   283,   41,   45,  266,  221,  268,  222,  112,    1,  278,
 /*    50 */   207,   96,  302,  158,  292,  288,  113,  141,   39,  184,
 /*    60 */   164,   34,    8,   58,    2,  250,  274,    2,  118,  261,
 /*    70 */   214,  304,  204,  219,  308,  231,  106,   15,   86,  115,
 /*    80 */   122,   43,  198,  188,  198,  180,   98,   57,  292,  273,
 /*    90 */   117,  309,  243,  263,  275,  113,  232,  165,  113,   41,
 /*   100 */    45,  266,  221,  268,  227,  112,    1,  202,  296,   96,
 /*   110 */    38,  284,   32,  271,   94,   31,   39,  217,  164,  213,
 /*   120 */     8,   58,  192,  250,   13,  155,  118,  145,   95,  184,
 /*   130 */   204,  219,    9,  231,  274,   15,  274,  102,  216,   43,
 /*   140 */   277,  245,  248,  234,  246,  306,   32,  271,   94,  171,
 /*   150 */   242,  320,  254,  188,  454,  165,  454,   41,   45,  266,
 /*   160 */   221,  268,  107,  112,    1,  198,  198,   96,  505,   59,
 /*   170 */   259,  214,  304,  153,   39,   38,  164,  181,    8,   58,
 /*   180 */    31,  250,  274,  152,  118,  184,  226,  154,  204,  219,
 /*   190 */   220,  231,  274,   17,   38,  110,  274,   43,  217,   31,
 /*   200 */   212,  201,    2,  192,  113,  163,   20,  313,  199,  188,
 /*   210 */   170,  267,   23,  165,  274,   41,   45,  266,  221,  268,
 /*   220 */    44,  112,    1,   95,   38,   96,  186,    9,  454,   31,
 /*   230 */   454,  187,   39,  113,  133,  315,    8,   58,  166,  250,
 /*   240 */   192,  198,  118,  169,  267,  189,  204,  219,   20,  231,
 /*   250 */   104,   15,   33,  115,  108,   43,    8,   58,  317,  168,
 /*   260 */   185,  184,  118,  157,  175,  267,  204,  219,  274,  109,
 /*   270 */   179,  165,   65,   41,   45,  266,  221,  268,  113,  112,
 /*   280 */     1,    4,  142,   96,   61,  188,  225,  188,  289,  117,
 /*   290 */    39,  274,   49,    2,    8,   58,   44,  250,  316,  174,
 /*   300 */   118,  162,  287,  184,  204,  219,  198,  231,  188,   15,
 /*   310 */   274,  115,  113,   43,  454,   99,  454,  148,  254,  184,
 /*   320 */   454,   62,  454,  188,  113,  172,  274,  188,  105,  165,
 /*   330 */    60,   41,   45,  266,  221,  268,   30,  112,    1,    7,
 /*   340 */   217,   96,  265,  188,   29,  192,  301,    3,   39,  188,
 /*   350 */   139,  100,    8,   58,  188,  250,  239,   29,  118,  286,
 /*   360 */   184,   44,  204,  219,  113,  218,  144,   15,   29,  115,
 /*   370 */   323,   43,  454,   29,  454,  310,  151,   63,  294,  117,
 /*   380 */    35,   25,   57,   57,  188,  274,   20,  165,  137,   41,
 /*   390 */    45,  266,  221,  268,  146,  112,    1,  198,   40,   96,
 /*   400 */   229,  252,  253,  274,  237,   20,   39,  136,  167,   20,
 /*   410 */     8,   58,   20,  250,  140,  147,  118,  211,  134,  307,
 /*   420 */   204,  219,  119,  231,  274,   17,  205,  110,    6,   43,
 /*   430 */   240,  276,  224,  210,  121,  194,  223,  192,   20,   20,
 /*   440 */   195,  257,  160,   64,  198,  156,  159,   41,   45,  266,
 /*   450 */   221,  268,  117,  112,    1,  274,  173,   96,  187,  176,
 /*   460 */   314,  236,  206,   25,   39,  249,  138,  116,    8,   58,
 /*   470 */    24,  250,  177,  193,  118,  244,  264,  280,  204,  219,
 /*   480 */   125,  231,  293,   15,  126,  115,  258,   43,   19,  161,
 /*   490 */   190,  291,  150,    7,  208,  279,  272,  270,   27,    6,
 /*   500 */    28,  191,  149,  165,  313,   41,   45,  266,  221,  268,
 /*   510 */   303,  112,    1,  316,  215,   96,  299,   57,  289,  312,
 /*   520 */   260,  233,   39,  300,  164,   40,    8,   58,   93,  250,
 /*   530 */   296,  296,  118,  296,  296,  296,  204,  219,  296,  231,
 /*   540 */   296,    5,  296,  115,  296,   43,  296,  198,  296,  296,
 /*   550 */   235,  296,  296,  296,  296,  296,  296,  296,  296,  296,
 /*   560 */   296,  165,  296,   41,   45,  266,  221,  268,  296,  112,
 /*   570 */     1,  296,  296,   96,  296,   38,  296,  198,  296,  296,
 /*   580 */    31,  296,  296,  296,  296,  296,   46,   48,   47,   14,
 /*   590 */    42,   10,   11,   37,  281,  262,   12,   18,  241,  247,
 /*   600 */    36,   21,  296,   26,  296,   38,  296,  198,  296,  296,
 /*   610 */    31,  296,  296,  296,  296,  296,   46,   48,   47,   14,
 /*   620 */    42,   10,   11,   37,  281,  262,   12,   18,  241,  247,
 /*   630 */    36,   21,  296,  296,  296,   38,  296,  296,  296,  296,
 /*   640 */    31,  296,  296,  296,  296,  296,   46,   48,   47,   14,
 /*   650 */    42,   10,   11,   37,  281,  262,   12,   18,  241,  247,
 /*   660 */    36,   21,  256,  198,  238,  319,  322,  285,  282,  298,
 /*   670 */   290,  251,  269,  321,  171,  296,  296,   39,  296,  296,
 /*   680 */   296,    8,   58,  198,  296,  296,  296,  118,  296,  296,
 /*   690 */   296,  204,  219,  296,  296,  296,  296,  296,  296,  296,
 /*   700 */   305,  296,   46,   48,   47,   14,   42,   10,   11,   37,
 /*   710 */   281,  262,   12,   18,  241,  247,   36,   21,  198,  296,
 /*   720 */   209,  235,   46,   48,   47,   14,   42,   10,   11,   37,
 /*   730 */   281,  262,   12,   18,  241,  247,   36,   21,  198,   22,
 /*   740 */   296,   46,   48,   47,   14,   42,   10,   11,   37,  281,
 /*   750 */   262,   12,   18,  241,  247,   36,   21,   46,   48,   47,
 /*   760 */    14,   42,   10,   11,   37,  281,  262,   12,   18,  241,
 /*   770 */   247,   36,   21,  198,  296,  296,  296,   46,   48,   47,
 /*   780 */    14,   42,   10,   11,   37,  281,  262,   12,   18,  241,
 /*   790 */   247,   36,   21,  296,  296,  296,  296,  296,  296,  296,
 /*   800 */   296,  296,  296,  296,  296,  296,  296,  296,  296,  296,
 /*   810 */   296,  296,   46,   48,   47,   14,   42,   10,   11,   37,
 /*   820 */   281,  262,   12,   18,  241,  247,   36,   21,  198,  296,
 /*   830 */   308,  296,  296,  296,   74,  296,  122,  296,  296,  295,
 /*   840 */   296,  180,  114,  296,  296,  273,  296,  309,  243,  263,
 /*   850 */   275,  182,  232,  198,  296,  296,  296,  296,  296,  296,
 /*   860 */   197,  296,  296,  296,  296,  296,  296,   46,   48,   47,
 /*   870 */    14,   42,   10,   11,   37,  281,  262,   12,   18,  241,
 /*   880 */   247,   36,   21,  296,  198,  296,  296,  296,  296,  296,
 /*   890 */   296,  296,   46,   48,   47,   14,   42,   10,   11,   37,
 /*   900 */   281,  262,   12,   18,  241,  247,   36,   21,  198,  296,
 /*   910 */   296,  296,  296,  178,  296,  296,  296,  296,  296,  296,
 /*   920 */   296,  296,  255,   46,   48,   47,   14,   42,   10,   11,
 /*   930 */    37,  281,  262,   12,   18,  241,  247,   36,   21,  296,
 /*   940 */   296,  296,  296,  420,  296,  296,  296,   46,   48,   47,
 /*   950 */    14,   42,   10,   11,   37,  281,  262,   12,   18,  241,
 /*   960 */   247,   36,   21,  420,  296,  420,  420,  296,  420,  420,
 /*   970 */   420,  296,  296,  420,  308,  420,    2,  420,   56,  296,
 /*   980 */   101,  296,  111,  296,  296,  180,  114,  296,  296,  273,
 /*   990 */   296,  309,  243,  263,  275,  420,  232,  296,  296,  296,
 /*  1000 */   296,  296,  296,  296,  308,  296,  420,  113,   74,  420,
 /*  1010 */   122,  296,  296,  296,  296,  180,  114,  296,  296,  273,
 /*  1020 */   296,  309,  243,  263,  275,  308,  232,  296,  296,   74,
 /*  1030 */   296,  122,  296,  296,  203,  296,  180,  114,  296,  296,
 /*  1040 */   273,  296,  309,  243,  263,  275,  308,  232,  296,  296,
 /*  1050 */    86,  296,  122,  296,  296,  196,  296,  180,   98,  296,
 /*  1060 */   296,  273,  296,  309,  243,  263,  275,  308,  232,  296,
 /*  1070 */   296,   74,  296,  122,  296,  296,  296,  296,  180,  114,
 /*  1080 */   297,  296,  273,  296,  309,  243,  263,  275,  308,  232,
 /*  1090 */   296,  296,   70,  296,  122,  296,  296,  200,  296,  180,
 /*  1100 */   114,  296,  296,  273,  296,  309,  243,  263,  275,  308,
 /*  1110 */   232,  296,  296,   75,  296,  122,  296,  296,  296,  296,
 /*  1120 */   180,  114,  296,  296,  273,  296,  309,  243,  263,  275,
 /*  1130 */   308,  232,  296,  296,   53,  296,  122,  296,  296,  296,
 /*  1140 */   296,  180,  114,  296,  296,  273,  296,  309,  243,  263,
 /*  1150 */   275,  308,  232,  296,  296,   91,  296,  122,  296,  296,
 /*  1160 */   296,  296,  180,  114,  296,  296,  273,  296,  309,  243,
 /*  1170 */   263,  275,  308,  232,  296,  296,   90,  296,  122,  296,
 /*  1180 */   296,  296,  296,  180,  114,  296,  296,  273,  296,  309,
 /*  1190 */   243,  263,  275,  308,  232,  296,  296,   72,  296,  122,
 /*  1200 */   296,  296,  296,  296,  180,  114,  296,  296,  273,  296,
 /*  1210 */   309,  243,  263,  275,  308,  232,  296,  296,   82,  296,
 /*  1220 */   122,  296,  296,  296,  296,  180,  114,  296,  296,  273,
 /*  1230 */   296,  309,  243,  263,  275,  308,  232,  296,  296,   92,
 /*  1240 */   296,  122,  296,  296,  296,  296,  180,  114,  296,  296,
 /*  1250 */   273,  296,  309,  243,  263,  275,  308,  232,  296,  296,
 /*  1260 */    84,  296,  122,  296,  296,  296,  296,  180,  114,  296,
 /*  1270 */   296,  273,  296,  309,  243,  263,  275,  308,  232,  296,
 /*  1280 */   296,   78,  296,  122,  296,  296,  296,  296,  180,  114,
 /*  1290 */   296,  296,  273,  296,  309,  243,  263,  275,  308,  232,
 /*  1300 */   296,  296,   55,  296,  122,  296,  296,  296,  296,  180,
 /*  1310 */   114,  296,  296,  273,  296,  309,  243,  263,  275,  308,
 /*  1320 */   232,  296,  296,   68,  296,  122,  296,  296,  296,  296,
 /*  1330 */   180,  114,  296,  296,  273,  296,  309,  243,  263,  275,
 /*  1340 */   308,  232,  296,  296,   77,  296,  122,  296,  296,  296,
 /*  1350 */   296,  180,  114,  296,  296,  273,  296,  309,  243,  263,
 /*  1360 */   275,  308,  232,  296,  296,   73,  296,  122,  296,  296,
 /*  1370 */   296,  296,  180,  114,  296,  296,  273,  296,  309,  243,
 /*  1380 */   263,  275,  308,  232,  296,  296,   69,  296,  122,  296,
 /*  1390 */   296,  296,  296,  180,  114,  296,  296,  273,  296,  309,
 /*  1400 */   243,  263,  275,  308,  232,  296,  296,   80,  296,  122,
 /*  1410 */   296,  296,  296,  296,  180,  114,  296,  296,  273,  296,
 /*  1420 */   309,  243,  263,  275,  308,  232,  296,  296,   67,  296,
 /*  1430 */   122,  296,  296,  296,  296,  180,   97,  296,  296,  273,
 /*  1440 */   296,  309,  243,  263,  275,  308,  232,  296,  296,   85,
 /*  1450 */   296,  122,  296,  296,  296,  296,  180,  114,  296,  296,
 /*  1460 */   273,  296,  309,  243,  263,  275,  308,  232,  296,  296,
 /*  1470 */    76,  296,  122,  296,  296,  296,  296,  180,  114,  296,
 /*  1480 */   296,  273,  296,  309,  243,  263,  275,  308,  232,  296,
 /*  1490 */   296,   51,  296,  103,  296,  296,  296,  296,  180,  114,
 /*  1500 */   296,  296,  273,  296,  228,  243,  263,  275,  308,  232,
 /*  1510 */   296,  296,   87,  296,  122,  296,  296,  296,  296,  180,
 /*  1520 */   114,  296,  296,  273,  296,  309,  243,  263,  275,  308,
 /*  1530 */   232,  296,  296,   81,  296,  122,  296,  296,  296,  296,
 /*  1540 */   180,  114,  296,  296,  273,  296,  309,  243,  263,  275,
 /*  1550 */   308,  232,  296,  296,   52,  296,  122,  296,  296,  296,
 /*  1560 */   296,  180,  114,  296,  296,  273,  296,  309,  243,  263,
 /*  1570 */   275,  308,  232,  296,  296,   88,  296,  122,  296,  296,
 /*  1580 */   296,  296,  180,  114,  296,  296,  273,  296,  309,  243,
 /*  1590 */   263,  275,  308,  232,  296,  296,   79,  296,  122,  296,
 /*  1600 */   296,  296,  296,  180,  114,  296,  296,  273,  296,  309,
 /*  1610 */   243,  263,  275,  308,  232,  296,  296,   71,  296,  122,
 /*  1620 */   296,  296,  296,  296,  180,  114,  296,  296,  273,  296,
 /*  1630 */   309,  243,  263,  275,  308,  232,  296,  296,   66,  296,
 /*  1640 */   122,  296,  296,  296,  296,  180,  114,  296,  296,  273,
 /*  1650 */   296,  230,  243,  263,  275,  308,  232,  296,  296,   83,
 /*  1660 */   296,  122,  296,  296,  296,  296,  180,  114,  296,  296,
 /*  1670 */   273,  296,  309,  243,  263,  275,  308,  232,  296,  296,
 /*  1680 */    50,  296,  122,  296,  296,  296,  296,  180,  114,  296,
 /*  1690 */   296,  273,  296,  309,  243,  263,  275,  308,  232,  296,
 /*  1700 */   296,   54,  296,  103,  296,  296,  296,  296,  180,  114,
 /*  1710 */   296,  296,  273,  296,  309,  243,  263,  275,  308,  232,
 /*  1720 */   296,  296,   89,  296,  122,  296,  296,  296,  296,  180,
 /*  1730 */   114,  296,  296,  273,  296,  309,  243,  263,  275,  308,
 /*  1740 */   232,  296,  296,  296,  296,  122,  296,  296,  296,  296,
 /*  1750 */   180,  132,  296,  296,  308,  296,  309,  243,  263,  275,
 /*  1760 */   122,  232,  296,  296,  296,  180,  130,  296,  296,  308,
 /*  1770 */   296,  309,  243,  263,  275,  122,  232,  296,  296,  296,
 /*  1780 */   180,  129,  296,  296,  296,  296,  309,  243,  263,  275,
 /*  1790 */   308,  232,  296,  296,  296,  296,  122,  296,  296,  296,
 /*  1800 */   296,  180,  131,  296,  296,  296,  296,  309,  243,  263,
 /*  1810 */   275,  308,  232,  296,  296,  296,  296,  122,  296,  296,
 /*  1820 */   296,  296,  180,  127,  296,  296,  296,  296,  309,  243,
 /*  1830 */   263,  275,  308,  232,  296,  296,  296,  296,  122,  296,
 /*  1840 */   296,  296,  296,  180,  120,  296,  296,  308,  296,  309,
 /*  1850 */   243,  263,  275,  122,  232,  296,  296,  296,  180,  128,
 /*  1860 */   296,  296,  296,  296,  309,  243,  263,  275,  308,  232,
 /*  1870 */   296,  296,  296,  296,  122,  296,  296,  296,  296,  180,
 /*  1880 */   123,  296,  296,  296,  296,  309,  243,  263,  275,  308,
 /*  1890 */   232,  296,  296,  296,  296,  122,  296,  296,  296,  296,
 /*  1900 */   180,  124,  296,  296,  296,  296,  309,  243,  263,  275,
 /*  1910 */   296,  232,
    );
    static public $yy_lookahead = array(
 /*     0 */    18,   29,   20,   82,   22,   23,   34,   25,   84,   18,
 /*    10 */    28,   20,   91,   29,   32,   33,   77,   35,   34,   37,
 /*    20 */    81,   39,   83,   41,   85,   37,   35,   88,   89,  108,
 /*    30 */    39,   92,  108,   94,   95,   96,   97,    1,   99,   57,
 /*    40 */     4,   59,   60,   61,   62,   63,   19,   65,   66,   67,
 /*    50 */    62,   69,   61,  100,   12,   67,   68,   82,   18,   84,
 /*    60 */    20,   31,   22,   23,   37,   25,   91,   37,   28,   76,
 /*    70 */    77,   78,   32,   33,   77,   35,   25,   37,   81,   39,
 /*    80 */    83,   41,    1,  108,    1,   88,   89,   21,   12,   92,
 /*    90 */    39,   94,   95,   96,   97,   68,   99,   57,   68,   59,
 /*   100 */    60,   61,   62,   63,   21,   65,   66,  110,  111,   69,
 /*   110 */    29,   69,   70,   71,   72,   34,   18,   83,   20,   85,
 /*   120 */    22,   23,   88,   25,   87,   82,   28,   82,   62,   84,
 /*   130 */    32,   33,   66,   35,   91,   37,   91,   39,    2,   41,
 /*   140 */     6,    7,    8,    9,   10,   69,   70,   71,   72,   15,
 /*   150 */    16,   17,   93,  108,   18,   57,   20,   59,   60,   61,
 /*   160 */    62,   63,  103,   65,   66,    1,    1,   69,   74,   75,
 /*   170 */    76,   77,   78,   82,   18,   29,   20,   31,   22,   23,
 /*   180 */    34,   25,   91,   82,   28,   84,   21,   82,   32,   33,
 /*   190 */    64,   35,   91,   37,   29,   39,   91,   41,   83,   34,
 /*   200 */    85,   86,   37,   88,   68,   82,   18,  101,   20,  108,
 /*   210 */   104,  105,    2,   57,   91,   59,   60,   61,   62,   63,
 /*   220 */    56,   65,   66,   62,   29,   69,   31,   66,   18,   34,
 /*   230 */    20,  108,   18,   68,   20,   83,   22,   23,  100,   25,
 /*   240 */    88,    1,   28,  104,  105,   93,   32,   33,   18,   35,
 /*   250 */    20,   37,   18,   39,   88,   41,   22,   23,  106,   82,
 /*   260 */    24,   84,   28,   84,  104,  105,   32,   33,   91,   39,
 /*   270 */    30,   57,   36,   59,   60,   61,   62,   63,   68,   65,
 /*   280 */    66,   37,   82,   69,   84,  108,   77,  108,  109,   39,
 /*   290 */    18,   91,   20,   37,   22,   23,   56,   25,   98,   84,
 /*   300 */    28,   82,   93,   84,   32,   33,    1,   35,  108,   37,
 /*   310 */    91,   39,   68,   41,   18,   88,   20,   82,   93,   84,
 /*   320 */    18,  100,   20,  108,   68,   84,   91,  108,  103,   57,
 /*   330 */    84,   59,   60,   61,   62,   63,   31,   65,   66,   37,
 /*   340 */    83,   69,   85,  108,   36,   88,   38,   36,   18,  108,
 /*   350 */    20,   88,   22,   23,  108,   25,   20,   36,   28,   38,
 /*   360 */    84,   56,   32,   33,   68,   35,   87,   37,   36,   39,
 /*   370 */    38,   41,   18,   36,   20,   38,   82,   37,   67,   39,
 /*   380 */    19,   19,   21,   21,  108,   91,   18,   57,   20,   59,
 /*   390 */    60,   61,   62,   63,   82,   65,   66,    1,    2,   69,
 /*   400 */    64,   29,   78,   91,   80,   18,   18,   20,   20,   18,
 /*   410 */    22,   23,   18,   25,   20,   82,   28,   20,  112,  113,
 /*   420 */    32,   33,   88,   35,   91,   37,   88,   39,   37,   41,
 /*   430 */   102,   93,   83,   20,  106,   93,   39,   88,   18,   18,
 /*   440 */    20,   20,  100,   90,    1,   57,   82,   59,   60,   61,
 /*   450 */    62,   63,   39,   65,   66,   91,   90,   69,  108,   90,
 /*   460 */    35,   20,   64,   19,   18,   20,   20,   20,   22,   23,
 /*   470 */    19,   25,   20,   65,   28,   20,   70,    4,   32,   33,
 /*   480 */    20,   35,    4,   37,   20,   39,   20,   41,   19,  100,
 /*   490 */    20,   20,  100,   37,   20,   67,   38,    4,   26,   37,
 /*   500 */    58,   65,  100,   57,  101,   59,   60,   61,   62,   63,
 /*   510 */    91,   65,   66,   98,   88,   69,   98,   21,  109,  105,
 /*   520 */   113,   98,   18,   16,   20,    2,   22,   23,   79,   25,
 /*   530 */   114,  114,   28,  114,  114,  114,   32,   33,  114,   35,
 /*   540 */   114,   37,  114,   39,  114,   41,  114,    1,  114,  114,
 /*   550 */     4,  114,  114,  114,  114,  114,  114,  114,  114,  114,
 /*   560 */   114,   57,  114,   59,   60,   61,   62,   63,  114,   65,
 /*   570 */    66,  114,  114,   69,  114,   29,  114,    1,  114,  114,
 /*   580 */    34,  114,  114,  114,  114,  114,   40,   41,   42,   43,
 /*   590 */    44,   45,   46,   47,   48,   49,   50,   51,   52,   53,
 /*   600 */    54,   55,  114,   27,  114,   29,  114,    1,  114,  114,
 /*   610 */    34,  114,  114,  114,  114,  114,   40,   41,   42,   43,
 /*   620 */    44,   45,   46,   47,   48,   49,   50,   51,   52,   53,
 /*   630 */    54,   55,  114,  114,  114,   29,  114,  114,  114,  114,
 /*   640 */    34,  114,  114,  114,  114,  114,   40,   41,   42,   43,
 /*   650 */    44,   45,   46,   47,   48,   49,   50,   51,   52,   53,
 /*   660 */    54,   55,    3,    1,    5,    6,    7,    8,    9,   10,
 /*   670 */    11,   12,   13,   14,   15,  114,  114,   18,  114,  114,
 /*   680 */   114,   22,   23,    1,  114,  114,  114,   28,  114,  114,
 /*   690 */   114,   32,   33,  114,  114,  114,  114,  114,  114,  114,
 /*   700 */    38,  114,   40,   41,   42,   43,   44,   45,   46,   47,
 /*   710 */    48,   49,   50,   51,   52,   53,   54,   55,    1,  114,
 /*   720 */    38,    4,   40,   41,   42,   43,   44,   45,   46,   47,
 /*   730 */    48,   49,   50,   51,   52,   53,   54,   55,    1,    2,
 /*   740 */   114,   40,   41,   42,   43,   44,   45,   46,   47,   48,
 /*   750 */    49,   50,   51,   52,   53,   54,   55,   40,   41,   42,
 /*   760 */    43,   44,   45,   46,   47,   48,   49,   50,   51,   52,
 /*   770 */    53,   54,   55,    1,  114,  114,  114,   40,   41,   42,
 /*   780 */    43,   44,   45,   46,   47,   48,   49,   50,   51,   52,
 /*   790 */    53,   54,   55,  114,  114,  114,  114,  114,  114,  114,
 /*   800 */   114,  114,  114,  114,  114,  114,  114,  114,  114,  114,
 /*   810 */   114,  114,   40,   41,   42,   43,   44,   45,   46,   47,
 /*   820 */    48,   49,   50,   51,   52,   53,   54,   55,    1,  114,
 /*   830 */    77,  114,  114,  114,   81,  114,   83,  114,  114,   67,
 /*   840 */   114,   88,   89,  114,  114,   92,  114,   94,   95,   96,
 /*   850 */    97,   24,   99,    1,  114,  114,  114,  114,  114,  114,
 /*   860 */   107,  114,  114,  114,  114,  114,  114,   40,   41,   42,
 /*   870 */    43,   44,   45,   46,   47,   48,   49,   50,   51,   52,
 /*   880 */    53,   54,   55,  114,    1,  114,  114,  114,  114,  114,
 /*   890 */   114,  114,   40,   41,   42,   43,   44,   45,   46,   47,
 /*   900 */    48,   49,   50,   51,   52,   53,   54,   55,    1,  114,
 /*   910 */   114,  114,  114,   30,  114,  114,  114,  114,  114,  114,
 /*   920 */   114,  114,   70,   40,   41,   42,   43,   44,   45,   46,
 /*   930 */    47,   48,   49,   50,   51,   52,   53,   54,   55,  114,
 /*   940 */   114,  114,  114,    4,  114,  114,  114,   40,   41,   42,
 /*   950 */    43,   44,   45,   46,   47,   48,   49,   50,   51,   52,
 /*   960 */    53,   54,   55,   24,  114,   26,   27,  114,   29,   30,
 /*   970 */    31,  114,  114,   34,   77,   36,   37,   38,   81,  114,
 /*   980 */    83,  114,   85,  114,  114,   88,   89,  114,  114,   92,
 /*   990 */   114,   94,   95,   96,   97,   56,   99,  114,  114,  114,
 /*  1000 */   114,  114,  114,  114,   77,  114,   67,   68,   81,   70,
 /*  1010 */    83,  114,  114,  114,  114,   88,   89,  114,  114,   92,
 /*  1020 */   114,   94,   95,   96,   97,   77,   99,  114,  114,   81,
 /*  1030 */   114,   83,  114,  114,  107,  114,   88,   89,  114,  114,
 /*  1040 */    92,  114,   94,   95,   96,   97,   77,   99,  114,  114,
 /*  1050 */    81,  114,   83,  114,  114,  107,  114,   88,   89,  114,
 /*  1060 */   114,   92,  114,   94,   95,   96,   97,   77,   99,  114,
 /*  1070 */   114,   81,  114,   83,  114,  114,  114,  114,   88,   89,
 /*  1080 */   111,  114,   92,  114,   94,   95,   96,   97,   77,   99,
 /*  1090 */   114,  114,   81,  114,   83,  114,  114,  107,  114,   88,
 /*  1100 */    89,  114,  114,   92,  114,   94,   95,   96,   97,   77,
 /*  1110 */    99,  114,  114,   81,  114,   83,  114,  114,  114,  114,
 /*  1120 */    88,   89,  114,  114,   92,  114,   94,   95,   96,   97,
 /*  1130 */    77,   99,  114,  114,   81,  114,   83,  114,  114,  114,
 /*  1140 */   114,   88,   89,  114,  114,   92,  114,   94,   95,   96,
 /*  1150 */    97,   77,   99,  114,  114,   81,  114,   83,  114,  114,
 /*  1160 */   114,  114,   88,   89,  114,  114,   92,  114,   94,   95,
 /*  1170 */    96,   97,   77,   99,  114,  114,   81,  114,   83,  114,
 /*  1180 */   114,  114,  114,   88,   89,  114,  114,   92,  114,   94,
 /*  1190 */    95,   96,   97,   77,   99,  114,  114,   81,  114,   83,
 /*  1200 */   114,  114,  114,  114,   88,   89,  114,  114,   92,  114,
 /*  1210 */    94,   95,   96,   97,   77,   99,  114,  114,   81,  114,
 /*  1220 */    83,  114,  114,  114,  114,   88,   89,  114,  114,   92,
 /*  1230 */   114,   94,   95,   96,   97,   77,   99,  114,  114,   81,
 /*  1240 */   114,   83,  114,  114,  114,  114,   88,   89,  114,  114,
 /*  1250 */    92,  114,   94,   95,   96,   97,   77,   99,  114,  114,
 /*  1260 */    81,  114,   83,  114,  114,  114,  114,   88,   89,  114,
 /*  1270 */   114,   92,  114,   94,   95,   96,   97,   77,   99,  114,
 /*  1280 */   114,   81,  114,   83,  114,  114,  114,  114,   88,   89,
 /*  1290 */   114,  114,   92,  114,   94,   95,   96,   97,   77,   99,
 /*  1300 */   114,  114,   81,  114,   83,  114,  114,  114,  114,   88,
 /*  1310 */    89,  114,  114,   92,  114,   94,   95,   96,   97,   77,
 /*  1320 */    99,  114,  114,   81,  114,   83,  114,  114,  114,  114,
 /*  1330 */    88,   89,  114,  114,   92,  114,   94,   95,   96,   97,
 /*  1340 */    77,   99,  114,  114,   81,  114,   83,  114,  114,  114,
 /*  1350 */   114,   88,   89,  114,  114,   92,  114,   94,   95,   96,
 /*  1360 */    97,   77,   99,  114,  114,   81,  114,   83,  114,  114,
 /*  1370 */   114,  114,   88,   89,  114,  114,   92,  114,   94,   95,
 /*  1380 */    96,   97,   77,   99,  114,  114,   81,  114,   83,  114,
 /*  1390 */   114,  114,  114,   88,   89,  114,  114,   92,  114,   94,
 /*  1400 */    95,   96,   97,   77,   99,  114,  114,   81,  114,   83,
 /*  1410 */   114,  114,  114,  114,   88,   89,  114,  114,   92,  114,
 /*  1420 */    94,   95,   96,   97,   77,   99,  114,  114,   81,  114,
 /*  1430 */    83,  114,  114,  114,  114,   88,   89,  114,  114,   92,
 /*  1440 */   114,   94,   95,   96,   97,   77,   99,  114,  114,   81,
 /*  1450 */   114,   83,  114,  114,  114,  114,   88,   89,  114,  114,
 /*  1460 */    92,  114,   94,   95,   96,   97,   77,   99,  114,  114,
 /*  1470 */    81,  114,   83,  114,  114,  114,  114,   88,   89,  114,
 /*  1480 */   114,   92,  114,   94,   95,   96,   97,   77,   99,  114,
 /*  1490 */   114,   81,  114,   83,  114,  114,  114,  114,   88,   89,
 /*  1500 */   114,  114,   92,  114,   94,   95,   96,   97,   77,   99,
 /*  1510 */   114,  114,   81,  114,   83,  114,  114,  114,  114,   88,
 /*  1520 */    89,  114,  114,   92,  114,   94,   95,   96,   97,   77,
 /*  1530 */    99,  114,  114,   81,  114,   83,  114,  114,  114,  114,
 /*  1540 */    88,   89,  114,  114,   92,  114,   94,   95,   96,   97,
 /*  1550 */    77,   99,  114,  114,   81,  114,   83,  114,  114,  114,
 /*  1560 */   114,   88,   89,  114,  114,   92,  114,   94,   95,   96,
 /*  1570 */    97,   77,   99,  114,  114,   81,  114,   83,  114,  114,
 /*  1580 */   114,  114,   88,   89,  114,  114,   92,  114,   94,   95,
 /*  1590 */    96,   97,   77,   99,  114,  114,   81,  114,   83,  114,
 /*  1600 */   114,  114,  114,   88,   89,  114,  114,   92,  114,   94,
 /*  1610 */    95,   96,   97,   77,   99,  114,  114,   81,  114,   83,
 /*  1620 */   114,  114,  114,  114,   88,   89,  114,  114,   92,  114,
 /*  1630 */    94,   95,   96,   97,   77,   99,  114,  114,   81,  114,
 /*  1640 */    83,  114,  114,  114,  114,   88,   89,  114,  114,   92,
 /*  1650 */   114,   94,   95,   96,   97,   77,   99,  114,  114,   81,
 /*  1660 */   114,   83,  114,  114,  114,  114,   88,   89,  114,  114,
 /*  1670 */    92,  114,   94,   95,   96,   97,   77,   99,  114,  114,
 /*  1680 */    81,  114,   83,  114,  114,  114,  114,   88,   89,  114,
 /*  1690 */   114,   92,  114,   94,   95,   96,   97,   77,   99,  114,
 /*  1700 */   114,   81,  114,   83,  114,  114,  114,  114,   88,   89,
 /*  1710 */   114,  114,   92,  114,   94,   95,   96,   97,   77,   99,
 /*  1720 */   114,  114,   81,  114,   83,  114,  114,  114,  114,   88,
 /*  1730 */    89,  114,  114,   92,  114,   94,   95,   96,   97,   77,
 /*  1740 */    99,  114,  114,  114,  114,   83,  114,  114,  114,  114,
 /*  1750 */    88,   89,  114,  114,   77,  114,   94,   95,   96,   97,
 /*  1760 */    83,   99,  114,  114,  114,   88,   89,  114,  114,   77,
 /*  1770 */   114,   94,   95,   96,   97,   83,   99,  114,  114,  114,
 /*  1780 */    88,   89,  114,  114,  114,  114,   94,   95,   96,   97,
 /*  1790 */    77,   99,  114,  114,  114,  114,   83,  114,  114,  114,
 /*  1800 */   114,   88,   89,  114,  114,  114,  114,   94,   95,   96,
 /*  1810 */    97,   77,   99,  114,  114,  114,  114,   83,  114,  114,
 /*  1820 */   114,  114,   88,   89,  114,  114,  114,  114,   94,   95,
 /*  1830 */    96,   97,   77,   99,  114,  114,  114,  114,   83,  114,
 /*  1840 */   114,  114,  114,   88,   89,  114,  114,   77,  114,   94,
 /*  1850 */    95,   96,   97,   83,   99,  114,  114,  114,   88,   89,
 /*  1860 */   114,  114,  114,  114,   94,   95,   96,   97,   77,   99,
 /*  1870 */   114,  114,  114,  114,   83,  114,  114,  114,  114,   88,
 /*  1880 */    89,  114,  114,  114,  114,   94,   95,   96,   97,   77,
 /*  1890 */    99,  114,  114,  114,  114,   83,  114,  114,  114,  114,
 /*  1900 */    88,   89,  114,  114,  114,  114,   94,   95,   96,   97,
 /*  1910 */   114,   99,
);
    const YY_SHIFT_USE_DFLT = -29;
    const YY_SHIFT_MAX = 230;
    static public $yy_shift_ofst = array(
 /*     0 */   659,  446,   40,  446,   40,  504,   40,   40,  504,  -18,
 /*    10 */    40,   40,   40,   40,   40,   40,  330,   40,   40,   40,
 /*    20 */    40,   40,   40,  214,   40,   40,   40,   40,   98,   40,
 /*    30 */    40,   40,   40,  272,   40,   40,   40,   40,  330,  272,
 /*    40 */   156,  156,  156,  156,  388,  156,  156,  156,  156,  165,
 /*    50 */   576,  546,  606,  606,  606,  606,  606,  230,  340,  659,
 /*    60 */    81,   81,   66,  340,  396,  340,  852,  883,  772,  682,
 /*    70 */   717,  737,  662,  827,  907,  907,  907,  907,  907,  907,
 /*    80 */   907,  907,  907,  907,  907,  907,  907,  907,  907,  907,
 /*    90 */   907,  701,  701,  134,  234,   -9,   42,  240,  305,  195,
 /*   100 */   146,  362,  368,  361,  391,  421,  -28,  421,  -28,  420,
 /*   110 */   394,  -28,  413,  397,  164,  387,   83,  188,  -16,  -28,
 /*   120 */   443,  496,  496,  443,  443,  443,  443,  443,  443,  443,
 /*   130 */   443,  443,  -29,  939,   76,  -12,  136,  210,   30,   27,
 /*   140 */   296,  -28,  -28,  -28,   51,  -28,  -28,  -28,  -28,  161,
 /*   150 */   161,  -28,  -28,  -28,  -28,  -28,  244,   36,  161,  -28,
 /*   160 */   161,  161,  -28,  -28,  256,  244,  161,  256,  -28,  496,
 /*   170 */   496,  507,  443,  523,  443,  496,  523,  456,  250,  250,
 /*   180 */   126,  250,  372,  443,  443,  372,  250,  -29,  -29,  -29,
 /*   190 */   -29,  -29,  -29,  -29,  -29,  302,  308,  321,  336,  354,
 /*   200 */   337,  236,  311,  332,  470,  398,  471,  474,  428,  442,
 /*   210 */   436,  462,  472,  458,  493,  469,  466,  444,  451,  447,
 /*   220 */   445,  425,  441,  452,  408,  478,  464,  460,  473,  455,
 /*   230 */   406,
);
    const YY_REDUCE_USE_DFLT = -80;
    const YY_REDUCE_MAX = 194;
    static public $yy_reduce_ofst = array(
 /*     0 */    94,   -3,  990,  969,  948,  -61,  927,  753,  897, 1242,
 /*    10 */  1179, 1200, 1263, 1284, 1326, 1305, 1347, 1116, 1032, 1053,
 /*    20 */  1011, 1368, 1074, 1158, 1095, 1137, 1221, 1599, 1536, 1641,
 /*    30 */  1431, 1578, 1557, 1410, 1494, 1473, 1452, 1389, 1515, 1620,
 /*    40 */  1662, 1791, 1770, 1812, 1734, 1755, 1713, 1692, 1677,  200,
 /*    50 */   219,  177,  -25,  101,  177,   45,  235,  152,  115,   -7,
 /*    60 */   123,  -79,  106,   34,  179,  257,  276,  276,  276,  276,
 /*    70 */   276,  276,  276,  276,  276,  276,  276,  276,  276,  276,
 /*    80 */   276,  276,  276,  276,  276,  276,  276,  276,  276,  276,
 /*    90 */   276,  276,  276,  324,  209,  338,  306,  -76,  -76,  312,
 /*   100 */   294,  139,   59,  139,  342,  225,  364,  225,   91,   59,
 /*   110 */    59,  333,  349,  328,  -76,   59,  241,   59,   43,  105,
 /*   120 */   -76,  160,  139,  -76,  -76,  215,  246,  -76,  -76,  -76,
 /*   130 */   -76,  -76,  -76,  415,  407,  415,  418,  418,  415,  415,
 /*   140 */   418,  419,  419,  419,  426,  419,  419,  419,  419,  403,
 /*   150 */   403,  419,  419,  419,  419,  419,  423,  350,  403,  419,
 /*   160 */   403,  403,  419,  419,  415,  423,  403,  415,  419,  414,
 /*   170 */   414,  449,  350,  409,  350,  414,  409,  221,  263,  227,
 /*   180 */   138,  166,  279,  350,  350,   37,  334,  366,  369,  -47,
 /*   190 */   353,  402,  138,  392,  389,
);
    static public $yyExpectedTokens = array(
        /* 0 */ array(3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 22, 23, 28, 32, 33, ),
        /* 1 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 2 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 3 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 4 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 5 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 6 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 7 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 8 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 9 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 67, 69, ),
        /* 10 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 11 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 12 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 13 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 14 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 15 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 16 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 17 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 18 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 19 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 20 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 21 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 22 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 23 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 24 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 25 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 26 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 27 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 28 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 29 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 30 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 31 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 32 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 33 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 34 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 35 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 36 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 37 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 38 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 39 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 40 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 41 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 42 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 43 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 44 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 45 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 46 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 47 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 48 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 49 */ array(1, 21, 29, 34, 37, 68, ),
        /* 50 */ array(1, 27, 29, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 51 */ array(1, 4, 29, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 52 */ array(1, 29, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 53 */ array(1, 29, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 54 */ array(1, 29, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 55 */ array(1, 29, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 56 */ array(1, 29, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 57 */ array(18, 20, 39, ),
        /* 58 */ array(37, 39, ),
        /* 59 */ array(3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 22, 23, 28, 32, 33, ),
        /* 60 */ array(1, 29, 34, ),
        /* 61 */ array(1, 29, 34, ),
        /* 62 */ array(21, 62, 66, ),
        /* 63 */ array(37, 39, ),
        /* 64 */ array(1, 2, ),
        /* 65 */ array(37, 39, ),
        /* 66 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 70, ),
        /* 67 */ array(1, 30, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 68 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 67, ),
        /* 69 */ array(1, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 70 */ array(1, 4, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 71 */ array(1, 2, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 72 */ array(1, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 73 */ array(1, 24, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 74 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 75 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 76 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 77 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 78 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 79 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 80 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 81 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 82 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 83 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 84 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 85 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 86 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 87 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 88 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 89 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 90 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 91 */ array(40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 92 */ array(40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 93 */ array(6, 7, 8, 9, 10, 15, 16, 17, ),
        /* 94 */ array(18, 22, 23, 28, 32, 33, ),
        /* 95 */ array(18, 20, 35, 39, 61, ),
        /* 96 */ array(12, 69, 70, 71, 72, ),
        /* 97 */ array(1, 30, 56, ),
        /* 98 */ array(1, 31, 56, ),
        /* 99 */ array(29, 31, 34, ),
        /* 100 */ array(29, 31, 34, ),
        /* 101 */ array(19, 21, ),
        /* 102 */ array(18, 20, ),
        /* 103 */ array(19, 21, ),
        /* 104 */ array(18, 37, ),
        /* 105 */ array(18, 20, ),
        /* 106 */ array(29, 34, ),
        /* 107 */ array(18, 20, ),
        /* 108 */ array(29, 34, ),
        /* 109 */ array(18, 20, ),
        /* 110 */ array(18, 20, ),
        /* 111 */ array(29, 34, ),
        /* 112 */ array(20, 39, ),
        /* 113 */ array(20, 39, ),
        /* 114 */ array(1, 56, ),
        /* 115 */ array(18, 20, ),
        /* 116 */ array(1, 21, ),
        /* 117 */ array(18, 20, ),
        /* 118 */ array(29, 34, ),
        /* 119 */ array(29, 34, ),
        /* 120 */ array(1, ),
        /* 121 */ array(21, ),
        /* 122 */ array(21, ),
        /* 123 */ array(1, ),
        /* 124 */ array(1, ),
        /* 125 */ array(1, ),
        /* 126 */ array(1, ),
        /* 127 */ array(1, ),
        /* 128 */ array(1, ),
        /* 129 */ array(1, ),
        /* 130 */ array(1, ),
        /* 131 */ array(1, ),
        /* 132 */ array(),
        /* 133 */ array(4, 24, 26, 27, 29, 30, 31, 34, 36, 37, 38, 56, 67, 68, 70, ),
        /* 134 */ array(12, 69, 70, 71, 72, ),
        /* 135 */ array(37, 62, 67, 68, ),
        /* 136 */ array(2, 18, 20, 68, ),
        /* 137 */ array(2, 18, 20, 68, ),
        /* 138 */ array(31, 37, 68, ),
        /* 139 */ array(19, 37, 68, ),
        /* 140 */ array(18, 20, 68, ),
        /* 141 */ array(29, 34, ),
        /* 142 */ array(29, 34, ),
        /* 143 */ array(29, 34, ),
        /* 144 */ array(25, 39, ),
        /* 145 */ array(29, 34, ),
        /* 146 */ array(29, 34, ),
        /* 147 */ array(29, 34, ),
        /* 148 */ array(29, 34, ),
        /* 149 */ array(62, 66, ),
        /* 150 */ array(62, 66, ),
        /* 151 */ array(29, 34, ),
        /* 152 */ array(29, 34, ),
        /* 153 */ array(29, 34, ),
        /* 154 */ array(29, 34, ),
        /* 155 */ array(29, 34, ),
        /* 156 */ array(37, 68, ),
        /* 157 */ array(1, 4, ),
        /* 158 */ array(62, 66, ),
        /* 159 */ array(29, 34, ),
        /* 160 */ array(62, 66, ),
        /* 161 */ array(62, 66, ),
        /* 162 */ array(29, 34, ),
        /* 163 */ array(29, 34, ),
        /* 164 */ array(37, 68, ),
        /* 165 */ array(37, 68, ),
        /* 166 */ array(62, 66, ),
        /* 167 */ array(37, 68, ),
        /* 168 */ array(29, 34, ),
        /* 169 */ array(21, ),
        /* 170 */ array(21, ),
        /* 171 */ array(16, ),
        /* 172 */ array(1, ),
        /* 173 */ array(2, ),
        /* 174 */ array(1, ),
        /* 175 */ array(21, ),
        /* 176 */ array(2, ),
        /* 177 */ array(37, ),
        /* 178 */ array(39, ),
        /* 179 */ array(39, ),
        /* 180 */ array(64, ),
        /* 181 */ array(39, ),
        /* 182 */ array(29, ),
        /* 183 */ array(1, ),
        /* 184 */ array(1, ),
        /* 185 */ array(29, ),
        /* 186 */ array(39, ),
        /* 187 */ array(),
        /* 188 */ array(),
        /* 189 */ array(),
        /* 190 */ array(),
        /* 191 */ array(),
        /* 192 */ array(),
        /* 193 */ array(),
        /* 194 */ array(),
        /* 195 */ array(18, 20, 37, ),
        /* 196 */ array(36, 38, ),
        /* 197 */ array(36, 38, ),
        /* 198 */ array(20, 64, ),
        /* 199 */ array(18, 20, ),
        /* 200 */ array(36, 38, ),
        /* 201 */ array(24, 36, ),
        /* 202 */ array(36, 67, ),
        /* 203 */ array(36, 38, ),
        /* 204 */ array(20, ),
        /* 205 */ array(64, ),
        /* 206 */ array(20, ),
        /* 207 */ array(20, ),
        /* 208 */ array(67, ),
        /* 209 */ array(58, ),
        /* 210 */ array(65, ),
        /* 211 */ array(37, ),
        /* 212 */ array(26, ),
        /* 213 */ array(38, ),
        /* 214 */ array(4, ),
        /* 215 */ array(19, ),
        /* 216 */ array(20, ),
        /* 217 */ array(19, ),
        /* 218 */ array(19, ),
        /* 219 */ array(20, ),
        /* 220 */ array(20, ),
        /* 221 */ array(35, ),
        /* 222 */ array(20, ),
        /* 223 */ array(20, ),
        /* 224 */ array(65, ),
        /* 225 */ array(4, ),
        /* 226 */ array(20, ),
        /* 227 */ array(20, ),
        /* 228 */ array(4, ),
        /* 229 */ array(20, ),
        /* 230 */ array(70, ),
        /* 231 */ array(),
        /* 232 */ array(),
        /* 233 */ array(),
        /* 234 */ array(),
        /* 235 */ array(),
        /* 236 */ array(),
        /* 237 */ array(),
        /* 238 */ array(),
        /* 239 */ array(),
        /* 240 */ array(),
        /* 241 */ array(),
        /* 242 */ array(),
        /* 243 */ array(),
        /* 244 */ array(),
        /* 245 */ array(),
        /* 246 */ array(),
        /* 247 */ array(),
        /* 248 */ array(),
        /* 249 */ array(),
        /* 250 */ array(),
        /* 251 */ array(),
        /* 252 */ array(),
        /* 253 */ array(),
        /* 254 */ array(),
        /* 255 */ array(),
        /* 256 */ array(),
        /* 257 */ array(),
        /* 258 */ array(),
        /* 259 */ array(),
        /* 260 */ array(),
        /* 261 */ array(),
        /* 262 */ array(),
        /* 263 */ array(),
        /* 264 */ array(),
        /* 265 */ array(),
        /* 266 */ array(),
        /* 267 */ array(),
        /* 268 */ array(),
        /* 269 */ array(),
        /* 270 */ array(),
        /* 271 */ array(),
        /* 272 */ array(),
        /* 273 */ array(),
        /* 274 */ array(),
        /* 275 */ array(),
        /* 276 */ array(),
        /* 277 */ array(),
        /* 278 */ array(),
        /* 279 */ array(),
        /* 280 */ array(),
        /* 281 */ array(),
        /* 282 */ array(),
        /* 283 */ array(),
        /* 284 */ array(),
        /* 285 */ array(),
        /* 286 */ array(),
        /* 287 */ array(),
        /* 288 */ array(),
        /* 289 */ array(),
        /* 290 */ array(),
        /* 291 */ array(),
        /* 292 */ array(),
        /* 293 */ array(),
        /* 294 */ array(),
        /* 295 */ array(),
        /* 296 */ array(),
        /* 297 */ array(),
        /* 298 */ array(),
        /* 299 */ array(),
        /* 300 */ array(),
        /* 301 */ array(),
        /* 302 */ array(),
        /* 303 */ array(),
        /* 304 */ array(),
        /* 305 */ array(),
        /* 306 */ array(),
        /* 307 */ array(),
        /* 308 */ array(),
        /* 309 */ array(),
        /* 310 */ array(),
        /* 311 */ array(),
        /* 312 */ array(),
        /* 313 */ array(),
        /* 314 */ array(),
        /* 315 */ array(),
        /* 316 */ array(),
        /* 317 */ array(),
        /* 318 */ array(),
        /* 319 */ array(),
        /* 320 */ array(),
        /* 321 */ array(),
        /* 322 */ array(),
        /* 323 */ array(),
);
    static public $yy_default = array(
 /*     0 */   327,  486,  470,  504,  470,  504,  470,  470,  504,  504,
 /*    10 */   504,  504,  504,  504,  504,  504,  504,  504,  504,  504,
 /*    20 */   504,  504,  504,  504,  504,  504,  504,  504,  504,  504,
 /*    30 */   504,  504,  504,  504,  504,  504,  504,  504,  504,  504,
 /*    40 */   504,  504,  504,  504,  504,  504,  504,  504,  504,  376,
 /*    50 */   376,  504,  376,  376,  376,  376,  376,  504,  504,  324,
 /*    60 */   376,  376,  481,  504,  368,  504,  504,  380,  504,  504,
 /*    70 */   504,  504,  504,  504,  469,  401,  397,  400,  396,  380,
 /*    80 */   393,  404,  384,  378,  395,  405,  489,  487,  488,  468,
 /*    90 */   381,  411,  410,  504,  501,  504,  504,  386,  386,  376,
 /*   100 */   376,  432,  504,  432,  439,  453,  376,  452,  376,  504,
 /*   110 */   504,  376,  504,  504,  386,  504,  370,  504,  376,  376,
 /*   120 */   415,  478,  432,  414,  413,  372,  504,  408,  394,  391,
 /*   130 */   390,  389,  477,  388,  504,  420,  451,  451,  420,  379,
 /*   140 */   451,  353,  354,  355,  504,  362,  364,  358,  357,  435,
 /*   150 */   436,  366,  359,  367,  365,  363,  407,  504,  461,  360,
 /*   160 */   459,  462,  361,  356,  420,  428,  437,  406,  352,  456,
 /*   170 */   482,  344,  371,  471,  373,  479,  472,  439,  504,  504,
 /*   180 */   439,  504,  503,  431,  392,  503,  504,  476,  476,  439,
 /*   190 */   476,  439,  439,  439,  439,  451,  504,  504,  504,  451,
 /*   200 */   504,  504,  504,  504,  504,  440,  504,  504,  504,  422,
 /*   210 */   504,  480,  382,  504,  504,  504,  504,  504,  417,  504,
 /*   220 */   504,  504,  504,  504,  504,  504,  504,  504,  412,  504,
 /*   230 */   412,  417,  434,  427,  351,  409,  377,  343,  330,  474,
 /*   240 */   450,  402,  342,  418,  473,  349,  348,  403,  350,  433,
 /*   250 */   425,  338,  502,  345,  455,  495,  328,  454,  388,  325,
 /*   260 */   492,  326,  399,  421,  494,  383,  416,  457,  423,  339,
 /*   270 */   329,  496,  385,  387,  375,  424,  445,  347,  449,  447,
 /*   280 */   497,  398,  335,  369,  490,  334,  467,  498,  446,  475,
 /*   290 */   337,  441,  500,  499,  483,  448,  484,  485,  336,  429,
 /*   300 */   341,  465,  444,  374,  331,  422,  491,  493,  430,  412,
 /*   310 */   464,  443,  458,  438,  419,  460,  426,  463,  442,  332,
 /*   320 */   346,  340,  333,  466,
);
    const YYNOCODE = 115;
    const YYSTACKDEPTH = 500;
    const YYNSTATE = 324;
    const YYNRULE = 180;
    const YYERRORSYMBOL = 73;
    const YYERRSYMDT = 'yy0';
    const YYFALLBACK = 0;
    public static $yyFallback = array(
    );
    public static function Trace($TraceFILE, $zTracePrompt)
    {
        if (!$TraceFILE) {
            $zTracePrompt = 0;
        } elseif (!$zTracePrompt) {
            $TraceFILE = 0;
        }
        self::$yyTraceFILE = $TraceFILE;
        self::$yyTracePrompt = $zTracePrompt;
    }

    public static function PrintTrace()
    {
        self::$yyTraceFILE = fopen('php://output', 'w');
        self::$yyTracePrompt = '<br>';
    }

    public static $yyTraceFILE;
    public static $yyTracePrompt;
    public $yyidx;                    /* Index of top element in stack */
    public $yyerrcnt;                 /* Shifts left before out of the error */
    public $yystack = array();  /* The parser's stack */

    public $yyTokenName = array(
  '$',             'VERT',          'COLON',         'TEMPLATEINIT',
  'RDEL',          'COMMENT',       'PHPSTARTTAG',   'PHPENDTAG',   
  'ASPSTARTTAG',   'ASPENDTAG',     'FAKEPHPSTARTTAG',  'XMLTAG',      
  'TEXT',          'STRIPON',       'STRIPOFF',      'LITERALSTART',
  'LITERALEND',    'LITERAL',       'LDEL',          'EQUAL',       
  'ID',            'PTR',           'LDELIF',        'LDELFOR',     
  'SEMICOLON',     'IDINCDEC',      'TO',            'STEP',        
  'LDELFOREACH',   'SPACE',         'AS',            'APTR',        
  'LDELSETFILTER',  'LDELSLASH',     'ATTR',          'INTEGER',     
  'COMMA',         'OPENP',         'CLOSEP',        'DOLLAR',      
  'MATH',          'UNIMATH',       'ANDSYM',        'IFCOND',      
  'ISIN',          'LOP',           'ISDIVBY',       'ISNOTDIVBY',  
  'ISEVEN',        'ISNOTEVEN',     'ISEVENBY',      'ISNOTEVENBY', 
  'ISODD',         'ISNOTODD',      'ISODDBY',       'ISNOTODDBY',  
  'INSTANCEOF',    'NAMESPACE',     'QMARK',         'NOT',         
  'TYPECAST',      'NUMBER',        'DOT',           'SINGLEQUOTESTRING',
  'AT',            'HATCH',         'OPENB',         'CLOSEB',      
  'DOUBLECOLON',   'QUOTE',         'BACKTICK',      'DOLLARID',    
  'DQTAG',         'error',         'start',         'template',    
  'template_element',  'smartytag',     'literal',       'literal_elements',
  'literal_element',  'expr',          'attributes',    'varindexed',  
  'modifierlist',  'statement',     'statements',    'optspace',    
  'varvar',        'value',         'modparameters',  'attribute',   
  'ternary',       'ldelexprrdel',  'variable',      'array',       
  'function',      'doublequoted_with_quotes',  'static',        'object',      
  'arrayindex',    'indexdef',      'static_class_access',  'varvarele',   
  'objectchain',   'objectelement',  'method',        'params',      
  'modifier',      'modparameter',  'arrayelements',  'arrayelement',
  'doublequoted',  'doublequotedcontent',
    );

    public static $yyRuleName = array(
 /*   0 */ "start ::= template",
 /*   1 */ "template ::= template_element",
 /*   2 */ "template ::= template template_element",
 /*   3 */ "template ::=",
 /*   4 */ "template_element ::= TEMPLATEINIT",
 /*   5 */ "template_element ::= smartytag RDEL",
 /*   6 */ "template_element ::= COMMENT",
 /*   7 */ "template_element ::= literal",
 /*   8 */ "template_element ::= PHPSTARTTAG",
 /*   9 */ "template_element ::= PHPENDTAG",
 /*  10 */ "template_element ::= ASPSTARTTAG",
 /*  11 */ "template_element ::= ASPENDTAG",
 /*  12 */ "template_element ::= FAKEPHPSTARTTAG",
 /*  13 */ "template_element ::= XMLTAG",
 /*  14 */ "template_element ::= TEXT",
 /*  15 */ "template_element ::= STRIPON",
 /*  16 */ "template_element ::= STRIPOFF",
 /*  17 */ "literal ::= LITERALSTART LITERALEND",
 /*  18 */ "literal ::= LITERALSTART literal_elements LITERALEND",
 /*  19 */ "literal_elements ::= literal_elements literal_element",
 /*  20 */ "literal_elements ::=",
 /*  21 */ "literal_element ::= literal",
 /*  22 */ "literal_element ::= LITERAL",
 /*  23 */ "literal_element ::= PHPSTARTTAG",
 /*  24 */ "literal_element ::= FAKEPHPSTARTTAG",
 /*  25 */ "literal_element ::= PHPENDTAG",
 /*  26 */ "literal_element ::= ASPSTARTTAG",
 /*  27 */ "literal_element ::= ASPENDTAG",
 /*  28 */ "smartytag ::= LDEL expr attributes",
 /*  29 */ "smartytag ::= LDEL varindexed EQUAL expr attributes",
 /*  30 */ "smartytag ::= LDEL ID attributes",
 /*  31 */ "smartytag ::= LDEL ID modifierlist attributes",
 /*  32 */ "smartytag ::= LDEL ID PTR ID modifierlist attributes",
 /*  33 */ "smartytag ::= LDELIF expr attributes",
 /*  34 */ "smartytag ::= LDELIF statement attributes",
 /*  35 */ "smartytag ::= LDELFOR statements SEMICOLON optspace expr SEMICOLON optspace varvar EQUAL expr attributes",
 /*  36 */ "smartytag ::= LDELFOR statements SEMICOLON optspace expr SEMICOLON optspace IDINCDEC attributes",
 /*  37 */ "smartytag ::= LDELFOR statement TO expr attributes",
 /*  38 */ "smartytag ::= LDELFOR statement TO expr STEP expr attributes",
 /*  39 */ "smartytag ::= LDELFOREACH attributes",
 /*  40 */ "smartytag ::= LDELFOREACH SPACE value AS varvar attributes",
 /*  41 */ "smartytag ::= LDELFOREACH SPACE value AS varvar APTR varvar attributes",
 /*  42 */ "smartytag ::= LDELFOREACH SPACE expr AS varvar attributes",
 /*  43 */ "smartytag ::= LDELFOREACH SPACE expr AS varvar APTR varvar attributes",
 /*  44 */ "smartytag ::= LDELSETFILTER ID modparameters",
 /*  45 */ "smartytag ::= LDELSETFILTER ID modparameters modifierlist RDEL",
 /*  46 */ "smartytag ::= LDELSLASH ID",
 /*  47 */ "smartytag ::= LDELSLASH ID modifierlist",
 /*  48 */ "smartytag ::= LDELSLASH ID PTR ID",
 /*  49 */ "smartytag ::= LDELSLASH ID PTR ID modifierlist",
 /*  50 */ "attributes ::= attributes attribute",
 /*  51 */ "attributes ::= attribute",
 /*  52 */ "attributes ::=",
 /*  53 */ "attribute ::= SPACE ID EQUAL ID",
 /*  54 */ "attribute ::= ATTR expr",
 /*  55 */ "attribute ::= SPACE ID",
 /*  56 */ "attribute ::= SPACE expr",
 /*  57 */ "attribute ::= SPACE INTEGER EQUAL expr",
 /*  58 */ "statements ::= statement",
 /*  59 */ "statements ::= statements COMMA statement",
 /*  60 */ "statement ::= varindexed EQUAL expr",
 /*  61 */ "statement ::= OPENP statement CLOSEP",
 /*  62 */ "expr ::= value",
 /*  63 */ "expr ::= ternary",
 /*  64 */ "expr ::= DOLLAR ID COLON ID",
 /*  65 */ "expr ::= expr MATH value",
 /*  66 */ "expr ::= expr UNIMATH value",
 /*  67 */ "expr ::= expr ANDSYM value",
 /*  68 */ "expr ::= expr modifierlist",
 /*  69 */ "expr ::= expr IFCOND expr",
 /*  70 */ "expr ::= expr ISIN value",
 /*  71 */ "expr ::= expr LOP expr",
 /*  72 */ "expr ::= expr ISDIVBY expr",
 /*  73 */ "expr ::= expr ISNOTDIVBY expr",
 /*  74 */ "expr ::= expr ISEVEN",
 /*  75 */ "expr ::= expr ISNOTEVEN",
 /*  76 */ "expr ::= expr ISEVENBY expr",
 /*  77 */ "expr ::= expr ISNOTEVENBY expr",
 /*  78 */ "expr ::= expr ISODD",
 /*  79 */ "expr ::= expr ISNOTODD",
 /*  80 */ "expr ::= expr ISODDBY expr",
 /*  81 */ "expr ::= expr ISNOTODDBY expr",
 /*  82 */ "expr ::= value INSTANCEOF ID",
 /*  83 */ "expr ::= value INSTANCEOF NAMESPACE",
 /*  84 */ "expr ::= value INSTANCEOF value",
 /*  85 */ "ldelexprrdel ::= LDEL expr RDEL",
 /*  86 */ "ternary ::= OPENP expr CLOSEP QMARK DOLLAR ID COLON expr",
 /*  87 */ "ternary ::= OPENP expr CLOSEP QMARK expr COLON expr",
 /*  88 */ "value ::= variable",
 /*  89 */ "value ::= UNIMATH value",
 /*  90 */ "value ::= NOT value",
 /*  91 */ "value ::= TYPECAST value",
 /*  92 */ "value ::= NUMBER",
 /*  93 */ "value ::= INTEGER",
 /*  94 */ "value ::= array",
 /*  95 */ "value ::= DOT INTEGER",
 /*  96 */ "value ::= ID",
 /*  97 */ "value ::= function",
 /*  98 */ "value ::= OPENP expr CLOSEP",
 /*  99 */ "value ::= SINGLEQUOTESTRING",
 /* 100 */ "value ::= doublequoted_with_quotes",
 /* 101 */ "value ::= IDINCDEC",
 /* 102 */ "value ::= ID static",
 /* 103 */ "value ::= NAMESPACE static",
 /* 104 */ "value ::= NAMESPACE",
 /* 105 */ "value ::= DOLLAR ID static",
 /* 106 */ "value ::= smartytag",
 /* 107 */ "value ::= value modifierlist",
 /* 108 */ "variable ::= varindexed",
 /* 109 */ "variable ::= varvar AT ID",
 /* 110 */ "variable ::= object",
 /* 111 */ "variable ::= HATCH ID HATCH arrayindex",
 /* 112 */ "variable ::= HATCH varindexed HATCH arrayindex",
 /* 113 */ "varindexed ::= varvar arrayindex",
 /* 114 */ "arrayindex ::= arrayindex indexdef",
 /* 115 */ "arrayindex ::=",
 /* 116 */ "indexdef ::= DOT varvar",
 /* 117 */ "indexdef ::= DOT varvar AT ID",
 /* 118 */ "indexdef ::= DOT ID",
 /* 119 */ "indexdef ::= DOT INTEGER",
 /* 120 */ "indexdef ::= DOT NUMBER",
 /* 121 */ "indexdef ::= DOT ldelexprrdel",
 /* 122 */ "indexdef ::= OPENB ID CLOSEB",
 /* 123 */ "indexdef ::= OPENB ID DOT ID CLOSEB",
 /* 124 */ "indexdef ::= OPENB expr CLOSEB",
 /* 125 */ "indexdef ::= OPENB CLOSEB",
 /* 126 */ "static ::= DOUBLECOLON static_class_access",
 /* 127 */ "varvar ::= DOLLAR ID",
 /* 128 */ "varvar ::= DOLLAR varvarele",
 /* 129 */ "varvarele ::= varvarele varvarele",
 /* 130 */ "varvarele ::= ID",
 /* 131 */ "varvarele ::= ldelexprrdel",
 /* 132 */ "object ::= varindexed objectchain",
 /* 133 */ "objectchain ::= objectelement",
 /* 134 */ "objectchain ::= objectchain objectelement",
 /* 135 */ "objectelement ::= PTR ID arrayindex",
 /* 136 */ "objectelement ::= PTR varindexed",
 /* 137 */ "objectelement ::= PTR ldelexprrdel arrayindex",
 /* 138 */ "objectelement ::= PTR ID ldelexprrdel arrayindex",
 /* 139 */ "objectelement ::= PTR method",
 /* 140 */ "function ::= ID OPENP params CLOSEP",
 /* 141 */ "function ::= NAMESPACE OPENP params CLOSEP",
 /* 142 */ "method ::= ID OPENP params CLOSEP",
 /* 143 */ "method ::= DOLLAR ID OPENP params CLOSEP",
 /* 144 */ "params ::= params COMMA expr",
 /* 145 */ "params ::= expr",
 /* 146 */ "params ::=",
 /* 147 */ "modifierlist ::= modifierlist modifier modparameters",
 /* 148 */ "modifierlist ::= modifier modparameters",
 /* 149 */ "modifier ::= VERT AT ID",
 /* 150 */ "modifier ::= VERT ID",
 /* 151 */ "modparameters ::= modparameters modparameter",
 /* 152 */ "modparameters ::=",
 /* 153 */ "modparameter ::= COLON value",
 /* 154 */ "static_class_access ::= method",
 /* 155 */ "static_class_access ::= method objectchain",
 /* 156 */ "static_class_access ::= ID",
 /* 157 */ "static_class_access ::= DOLLAR ID arrayindex",
 /* 158 */ "static_class_access ::= DOLLAR ID arrayindex objectchain",
 /* 159 */ "array ::= OPENB arrayelements CLOSEB",
 /* 160 */ "arrayelements ::= arrayelement",
 /* 161 */ "arrayelements ::= arrayelements COMMA arrayelement",
 /* 162 */ "arrayelements ::=",
 /* 163 */ "arrayelement ::= value APTR expr",
 /* 164 */ "arrayelement ::= ID APTR expr",
 /* 165 */ "arrayelement ::= expr",
 /* 166 */ "doublequoted_with_quotes ::= QUOTE QUOTE",
 /* 167 */ "doublequoted_with_quotes ::= QUOTE doublequoted QUOTE",
 /* 168 */ "doublequoted ::= doublequoted doublequotedcontent",
 /* 169 */ "doublequoted ::= doublequotedcontent",
 /* 170 */ "doublequotedcontent ::= BACKTICK variable BACKTICK",
 /* 171 */ "doublequotedcontent ::= BACKTICK expr BACKTICK",
 /* 172 */ "doublequotedcontent ::= DOLLARID",
 /* 173 */ "doublequotedcontent ::= DQTAG LDEL variable RDEL",
 /* 174 */ "doublequotedcontent ::= DQTAG ldelexprrdel",
 /* 175 */ "doublequotedcontent ::= DQTAG smartytag RDEL",
 /* 176 */ "doublequotedcontent ::= TEXT",
 /* 177 */ "doublequotedcontent ::= DQTAG",
 /* 178 */ "optspace ::= SPACE",
 /* 179 */ "optspace ::=",
    );

    public function tokenName($tokenType)
    {
        if ($tokenType === 0) {
            return 'End of Input';
        }
        if ($tokenType > 0 && $tokenType < count($this->yyTokenName)) {
            return $this->yyTokenName[$tokenType];
        } else {
            return "Unknown";
        }
    }

    public static function yy_destructor($yymajor, $yypminor)
    {
        switch ($yymajor) {
            default:  break;   /* If no destructor action specified: do nothing */
        }
    }

    public function yy_pop_parser_stack()
    {
        if (!count($this->yystack)) {
            return;
        }
        $yytos = array_pop($this->yystack);
        if (self::$yyTraceFILE && $this->yyidx >= 0) {
            fwrite(self::$yyTraceFILE,
                self::$yyTracePrompt . 'Popping ' . $this->yyTokenName[$yytos->major] .
                    "\n");
        }
        $yymajor = $yytos->major;
        self::yy_destructor($yymajor, $yytos->minor);
        $this->yyidx--;

        return $yymajor;
    }

    public function __destruct()
    {
        while ($this->yystack !== Array()) {
            $this->yy_pop_parser_stack();
        }
        if (is_resource(self::$yyTraceFILE)) {
            fclose(self::$yyTraceFILE);
        }
    }

    public function yy_get_expected_tokens($token)
    {
        $state = $this->yystack[$this->yyidx]->stateno;
        $expected = self::$yyExpectedTokens[$state];
        if (in_array($token, self::$yyExpectedTokens[$state], true)) {
            return $expected;
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return array_unique($expected);
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[$yyruleno]['rhs'];
                    $nextstate = $this->yy_find_reduce_action(
                        $this->yystack[$this->yyidx]->stateno,
                        self::$yyRuleInfo[$yyruleno]['lhs']);
                    if (isset(self::$yyExpectedTokens[$nextstate])) {
                $expected = array_merge($expected, self::$yyExpectedTokens[$nextstate]);
                            if (in_array($token,
                                  self::$yyExpectedTokens[$nextstate], true)) {
                            $this->yyidx = $yyidx;
                            $this->yystack = $stack;

                            return array_unique($expected);
                        }
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[$yyruleno]['lhs'];
                        $this->yystack[$this->yyidx] = $x;
                        continue 2;
                    } elseif ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return array_unique($expected);
                    } elseif ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return $expected;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
    $this->yyidx = $yyidx;
    $this->yystack = $stack;

        return array_unique($expected);
    }

    public function yy_is_expected_token($token)
    {
        if ($token === 0) {
            return true; // 0 is not part of this
        }
        $state = $this->yystack[$this->yyidx]->stateno;
        if (in_array($token, self::$yyExpectedTokens[$state], true)) {
            return true;
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return true;
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[$yyruleno]['rhs'];
                    $nextstate = $this->yy_find_reduce_action(
                        $this->yystack[$this->yyidx]->stateno,
                        self::$yyRuleInfo[$yyruleno]['lhs']);
                    if (isset(self::$yyExpectedTokens[$nextstate]) &&
                          in_array($token, self::$yyExpectedTokens[$nextstate], true)) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;

                        return true;
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[$yyruleno]['lhs'];
                        $this->yystack[$this->yyidx] = $x;
                        continue 2;
                    } elseif ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        if (!$token) {
                            // end of input: this is valid
                            return true;
                        }
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return false;
                    } elseif ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return true;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
        $this->yyidx = $yyidx;
        $this->yystack = $stack;

        return true;
    }

   public function yy_find_shift_action($iLookAhead)
    {
        $stateno = $this->yystack[$this->yyidx]->stateno;

        /* if ($this->yyidx < 0) return self::YY_NO_ACTION;  */
        if (!isset(self::$yy_shift_ofst[$stateno])) {
            // no shift actions
            return self::$yy_default[$stateno];
        }
        $i = self::$yy_shift_ofst[$stateno];
        if ($i === self::YY_SHIFT_USE_DFLT) {
            return self::$yy_default[$stateno];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
              self::$yy_lookahead[$i] != $iLookAhead) {
            if (count(self::$yyFallback) && $iLookAhead < count(self::$yyFallback)
                   && ($iFallback = self::$yyFallback[$iLookAhead]) != 0) {
                if (self::$yyTraceFILE) {
                    fwrite(self::$yyTraceFILE, self::$yyTracePrompt . "FALLBACK " .
                        $this->yyTokenName[$iLookAhead] . " => " .
                        $this->yyTokenName[$iFallback] . "\n");
                }

                return $this->yy_find_shift_action($iFallback);
            }

            return self::$yy_default[$stateno];
        } else {
            return self::$yy_action[$i];
        }
    }

    public function yy_find_reduce_action($stateno, $iLookAhead)
    {
        /* $stateno = $this->yystack[$this->yyidx]->stateno; */

        if (!isset(self::$yy_reduce_ofst[$stateno])) {
            return self::$yy_default[$stateno];
        }
        $i = self::$yy_reduce_ofst[$stateno];
        if ($i == self::YY_REDUCE_USE_DFLT) {
            return self::$yy_default[$stateno];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
              self::$yy_lookahead[$i] != $iLookAhead) {
            return self::$yy_default[$stateno];
        } else {
            return self::$yy_action[$i];
        }
    }

    public function yy_shift($yyNewState, $yyMajor, $yypMinor)
    {
        $this->yyidx++;
        if ($this->yyidx >= self::YYSTACKDEPTH) {
            $this->yyidx--;
            if (self::$yyTraceFILE) {
                fprintf(self::$yyTraceFILE, "%sStack Overflow!\n", self::$yyTracePrompt);
            }
            while ($this->yyidx >= 0) {
                $this->yy_pop_parser_stack();
            }
#line 85 "Smarty_Compiler_Template_Php_Parser.y"

    $this->internalError = true;
    $this->compiler->error("Stack overflow in template parser");
#line 1513 "Smarty_Compiler_Template_Php_Parser.php"

            return;
        }
        $yytos = new TP_yyStackEntry;
        $yytos->stateno = $yyNewState;
        $yytos->major = $yyMajor;
        $yytos->minor = $yypMinor;
        array_push($this->yystack, $yytos);
        if (self::$yyTraceFILE && $this->yyidx > 0) {
            fprintf(self::$yyTraceFILE, "%sShift %d\n", self::$yyTracePrompt,
                $yyNewState);
            fprintf(self::$yyTraceFILE, "%sStack:", self::$yyTracePrompt);
            for ($i = 1; $i <= $this->yyidx; $i++) {
                fprintf(self::$yyTraceFILE, " %s",
                    $this->yyTokenName[$this->yystack[$i]->major]);
            }
            fwrite(self::$yyTraceFILE,"\n");
        }
    }

    public static $yyRuleInfo = array(
  array( 'lhs' => 74, 'rhs' => 1 ),
  array( 'lhs' => 75, 'rhs' => 1 ),
  array( 'lhs' => 75, 'rhs' => 2 ),
  array( 'lhs' => 75, 'rhs' => 0 ),
  array( 'lhs' => 76, 'rhs' => 1 ),
  array( 'lhs' => 76, 'rhs' => 2 ),
  array( 'lhs' => 76, 'rhs' => 1 ),
  array( 'lhs' => 76, 'rhs' => 1 ),
  array( 'lhs' => 76, 'rhs' => 1 ),
  array( 'lhs' => 76, 'rhs' => 1 ),
  array( 'lhs' => 76, 'rhs' => 1 ),
  array( 'lhs' => 76, 'rhs' => 1 ),
  array( 'lhs' => 76, 'rhs' => 1 ),
  array( 'lhs' => 76, 'rhs' => 1 ),
  array( 'lhs' => 76, 'rhs' => 1 ),
  array( 'lhs' => 76, 'rhs' => 1 ),
  array( 'lhs' => 76, 'rhs' => 1 ),
  array( 'lhs' => 78, 'rhs' => 2 ),
  array( 'lhs' => 78, 'rhs' => 3 ),
  array( 'lhs' => 79, 'rhs' => 2 ),
  array( 'lhs' => 79, 'rhs' => 0 ),
  array( 'lhs' => 80, 'rhs' => 1 ),
  array( 'lhs' => 80, 'rhs' => 1 ),
  array( 'lhs' => 80, 'rhs' => 1 ),
  array( 'lhs' => 80, 'rhs' => 1 ),
  array( 'lhs' => 80, 'rhs' => 1 ),
  array( 'lhs' => 80, 'rhs' => 1 ),
  array( 'lhs' => 80, 'rhs' => 1 ),
  array( 'lhs' => 77, 'rhs' => 3 ),
  array( 'lhs' => 77, 'rhs' => 5 ),
  array( 'lhs' => 77, 'rhs' => 3 ),
  array( 'lhs' => 77, 'rhs' => 4 ),
  array( 'lhs' => 77, 'rhs' => 6 ),
  array( 'lhs' => 77, 'rhs' => 3 ),
  array( 'lhs' => 77, 'rhs' => 3 ),
  array( 'lhs' => 77, 'rhs' => 11 ),
  array( 'lhs' => 77, 'rhs' => 9 ),
  array( 'lhs' => 77, 'rhs' => 5 ),
  array( 'lhs' => 77, 'rhs' => 7 ),
  array( 'lhs' => 77, 'rhs' => 2 ),
  array( 'lhs' => 77, 'rhs' => 6 ),
  array( 'lhs' => 77, 'rhs' => 8 ),
  array( 'lhs' => 77, 'rhs' => 6 ),
  array( 'lhs' => 77, 'rhs' => 8 ),
  array( 'lhs' => 77, 'rhs' => 3 ),
  array( 'lhs' => 77, 'rhs' => 5 ),
  array( 'lhs' => 77, 'rhs' => 2 ),
  array( 'lhs' => 77, 'rhs' => 3 ),
  array( 'lhs' => 77, 'rhs' => 4 ),
  array( 'lhs' => 77, 'rhs' => 5 ),
  array( 'lhs' => 82, 'rhs' => 2 ),
  array( 'lhs' => 82, 'rhs' => 1 ),
  array( 'lhs' => 82, 'rhs' => 0 ),
  array( 'lhs' => 91, 'rhs' => 4 ),
  array( 'lhs' => 91, 'rhs' => 2 ),
  array( 'lhs' => 91, 'rhs' => 2 ),
  array( 'lhs' => 91, 'rhs' => 2 ),
  array( 'lhs' => 91, 'rhs' => 4 ),
  array( 'lhs' => 86, 'rhs' => 1 ),
  array( 'lhs' => 86, 'rhs' => 3 ),
  array( 'lhs' => 85, 'rhs' => 3 ),
  array( 'lhs' => 85, 'rhs' => 3 ),
  array( 'lhs' => 81, 'rhs' => 1 ),
  array( 'lhs' => 81, 'rhs' => 1 ),
  array( 'lhs' => 81, 'rhs' => 4 ),
  array( 'lhs' => 81, 'rhs' => 3 ),
  array( 'lhs' => 81, 'rhs' => 3 ),
  array( 'lhs' => 81, 'rhs' => 3 ),
  array( 'lhs' => 81, 'rhs' => 2 ),
  array( 'lhs' => 81, 'rhs' => 3 ),
  array( 'lhs' => 81, 'rhs' => 3 ),
  array( 'lhs' => 81, 'rhs' => 3 ),
  array( 'lhs' => 81, 'rhs' => 3 ),
  array( 'lhs' => 81, 'rhs' => 3 ),
  array( 'lhs' => 81, 'rhs' => 2 ),
  array( 'lhs' => 81, 'rhs' => 2 ),
  array( 'lhs' => 81, 'rhs' => 3 ),
  array( 'lhs' => 81, 'rhs' => 3 ),
  array( 'lhs' => 81, 'rhs' => 2 ),
  array( 'lhs' => 81, 'rhs' => 2 ),
  array( 'lhs' => 81, 'rhs' => 3 ),
  array( 'lhs' => 81, 'rhs' => 3 ),
  array( 'lhs' => 81, 'rhs' => 3 ),
  array( 'lhs' => 81, 'rhs' => 3 ),
  array( 'lhs' => 81, 'rhs' => 3 ),
  array( 'lhs' => 93, 'rhs' => 3 ),
  array( 'lhs' => 92, 'rhs' => 8 ),
  array( 'lhs' => 92, 'rhs' => 7 ),
  array( 'lhs' => 89, 'rhs' => 1 ),
  array( 'lhs' => 89, 'rhs' => 2 ),
  array( 'lhs' => 89, 'rhs' => 2 ),
  array( 'lhs' => 89, 'rhs' => 2 ),
  array( 'lhs' => 89, 'rhs' => 1 ),
  array( 'lhs' => 89, 'rhs' => 1 ),
  array( 'lhs' => 89, 'rhs' => 1 ),
  array( 'lhs' => 89, 'rhs' => 2 ),
  array( 'lhs' => 89, 'rhs' => 1 ),
  array( 'lhs' => 89, 'rhs' => 1 ),
  array( 'lhs' => 89, 'rhs' => 3 ),
  array( 'lhs' => 89, 'rhs' => 1 ),
  array( 'lhs' => 89, 'rhs' => 1 ),
  array( 'lhs' => 89, 'rhs' => 1 ),
  array( 'lhs' => 89, 'rhs' => 2 ),
  array( 'lhs' => 89, 'rhs' => 2 ),
  array( 'lhs' => 89, 'rhs' => 1 ),
  array( 'lhs' => 89, 'rhs' => 3 ),
  array( 'lhs' => 89, 'rhs' => 1 ),
  array( 'lhs' => 89, 'rhs' => 2 ),
  array( 'lhs' => 94, 'rhs' => 1 ),
  array( 'lhs' => 94, 'rhs' => 3 ),
  array( 'lhs' => 94, 'rhs' => 1 ),
  array( 'lhs' => 94, 'rhs' => 4 ),
  array( 'lhs' => 94, 'rhs' => 4 ),
  array( 'lhs' => 83, 'rhs' => 2 ),
  array( 'lhs' => 100, 'rhs' => 2 ),
  array( 'lhs' => 100, 'rhs' => 0 ),
  array( 'lhs' => 101, 'rhs' => 2 ),
  array( 'lhs' => 101, 'rhs' => 4 ),
  array( 'lhs' => 101, 'rhs' => 2 ),
  array( 'lhs' => 101, 'rhs' => 2 ),
  array( 'lhs' => 101, 'rhs' => 2 ),
  array( 'lhs' => 101, 'rhs' => 2 ),
  array( 'lhs' => 101, 'rhs' => 3 ),
  array( 'lhs' => 101, 'rhs' => 5 ),
  array( 'lhs' => 101, 'rhs' => 3 ),
  array( 'lhs' => 101, 'rhs' => 2 ),
  array( 'lhs' => 98, 'rhs' => 2 ),
  array( 'lhs' => 88, 'rhs' => 2 ),
  array( 'lhs' => 88, 'rhs' => 2 ),
  array( 'lhs' => 103, 'rhs' => 2 ),
  array( 'lhs' => 103, 'rhs' => 1 ),
  array( 'lhs' => 103, 'rhs' => 1 ),
  array( 'lhs' => 99, 'rhs' => 2 ),
  array( 'lhs' => 104, 'rhs' => 1 ),
  array( 'lhs' => 104, 'rhs' => 2 ),
  array( 'lhs' => 105, 'rhs' => 3 ),
  array( 'lhs' => 105, 'rhs' => 2 ),
  array( 'lhs' => 105, 'rhs' => 3 ),
  array( 'lhs' => 105, 'rhs' => 4 ),
  array( 'lhs' => 105, 'rhs' => 2 ),
  array( 'lhs' => 96, 'rhs' => 4 ),
  array( 'lhs' => 96, 'rhs' => 4 ),
  array( 'lhs' => 106, 'rhs' => 4 ),
  array( 'lhs' => 106, 'rhs' => 5 ),
  array( 'lhs' => 107, 'rhs' => 3 ),
  array( 'lhs' => 107, 'rhs' => 1 ),
  array( 'lhs' => 107, 'rhs' => 0 ),
  array( 'lhs' => 84, 'rhs' => 3 ),
  array( 'lhs' => 84, 'rhs' => 2 ),
  array( 'lhs' => 108, 'rhs' => 3 ),
  array( 'lhs' => 108, 'rhs' => 2 ),
  array( 'lhs' => 90, 'rhs' => 2 ),
  array( 'lhs' => 90, 'rhs' => 0 ),
  array( 'lhs' => 109, 'rhs' => 2 ),
  array( 'lhs' => 102, 'rhs' => 1 ),
  array( 'lhs' => 102, 'rhs' => 2 ),
  array( 'lhs' => 102, 'rhs' => 1 ),
  array( 'lhs' => 102, 'rhs' => 3 ),
  array( 'lhs' => 102, 'rhs' => 4 ),
  array( 'lhs' => 95, 'rhs' => 3 ),
  array( 'lhs' => 110, 'rhs' => 1 ),
  array( 'lhs' => 110, 'rhs' => 3 ),
  array( 'lhs' => 110, 'rhs' => 0 ),
  array( 'lhs' => 111, 'rhs' => 3 ),
  array( 'lhs' => 111, 'rhs' => 3 ),
  array( 'lhs' => 111, 'rhs' => 1 ),
  array( 'lhs' => 97, 'rhs' => 2 ),
  array( 'lhs' => 97, 'rhs' => 3 ),
  array( 'lhs' => 112, 'rhs' => 2 ),
  array( 'lhs' => 112, 'rhs' => 1 ),
  array( 'lhs' => 113, 'rhs' => 3 ),
  array( 'lhs' => 113, 'rhs' => 3 ),
  array( 'lhs' => 113, 'rhs' => 1 ),
  array( 'lhs' => 113, 'rhs' => 4 ),
  array( 'lhs' => 113, 'rhs' => 2 ),
  array( 'lhs' => 113, 'rhs' => 3 ),
  array( 'lhs' => 113, 'rhs' => 1 ),
  array( 'lhs' => 113, 'rhs' => 1 ),
  array( 'lhs' => 87, 'rhs' => 1 ),
  array( 'lhs' => 87, 'rhs' => 0 ),
    );

    public static $yyReduceMap = array(
        0 => 0,
        1 => 1,
        2 => 1,
        4 => 1,
        6 => 1,
        5 => 5,
        7 => 7,
        8 => 8,
        9 => 9,
        10 => 10,
        11 => 11,
        12 => 12,
        13 => 13,
        14 => 14,
        15 => 15,
        16 => 16,
        17 => 17,
        20 => 17,
        179 => 17,
        18 => 18,
        61 => 18,
        85 => 18,
        167 => 18,
        19 => 19,
        89 => 19,
        91 => 19,
        114 => 19,
        155 => 19,
        21 => 21,
        22 => 21,
        23 => 21,
        24 => 21,
        25 => 21,
        26 => 21,
        27 => 21,
        56 => 21,
        62 => 21,
        63 => 21,
        88 => 21,
        92 => 21,
        93 => 21,
        94 => 21,
        97 => 21,
        99 => 21,
        100 => 21,
        104 => 21,
        110 => 21,
        127 => 21,
        154 => 21,
        156 => 21,
        160 => 21,
        165 => 21,
        178 => 21,
        28 => 28,
        29 => 29,
        30 => 30,
        31 => 31,
        32 => 32,
        33 => 33,
        34 => 33,
        35 => 35,
        36 => 36,
        37 => 37,
        38 => 38,
        39 => 39,
        40 => 40,
        42 => 40,
        41 => 41,
        43 => 41,
        44 => 44,
        45 => 45,
        46 => 46,
        47 => 47,
        48 => 48,
        49 => 49,
        50 => 50,
        51 => 51,
        58 => 51,
        145 => 51,
        149 => 51,
        153 => 51,
        52 => 52,
        146 => 52,
        152 => 52,
        53 => 53,
        54 => 54,
        55 => 55,
        57 => 57,
        59 => 59,
        60 => 60,
        64 => 64,
        65 => 65,
        66 => 65,
        67 => 65,
        68 => 68,
        107 => 68,
        69 => 69,
        71 => 69,
        70 => 70,
        72 => 72,
        73 => 73,
        74 => 74,
        79 => 74,
        75 => 75,
        78 => 75,
        76 => 76,
        81 => 76,
        77 => 77,
        80 => 77,
        82 => 82,
        83 => 82,
        84 => 84,
        86 => 86,
        87 => 87,
        90 => 90,
        95 => 95,
        96 => 96,
        98 => 98,
        101 => 101,
        102 => 102,
        103 => 103,
        105 => 105,
        106 => 106,
        108 => 108,
        109 => 109,
        111 => 111,
        112 => 112,
        113 => 113,
        115 => 115,
        162 => 115,
        116 => 116,
        117 => 117,
        118 => 118,
        119 => 119,
        121 => 119,
        120 => 120,
        122 => 122,
        123 => 123,
        124 => 124,
        125 => 125,
        126 => 126,
        128 => 128,
        129 => 129,
        130 => 130,
        131 => 131,
        132 => 132,
        133 => 133,
        134 => 134,
        135 => 135,
        136 => 136,
        137 => 137,
        138 => 138,
        139 => 139,
        140 => 140,
        141 => 141,
        142 => 142,
        143 => 143,
        144 => 144,
        147 => 147,
        148 => 148,
        150 => 150,
        151 => 151,
        157 => 157,
        158 => 158,
        159 => 159,
        161 => 161,
        163 => 163,
        164 => 164,
        166 => 166,
        168 => 168,
        169 => 169,
        170 => 170,
        173 => 170,
        171 => 171,
        172 => 172,
        174 => 174,
        175 => 175,
        176 => 176,
        177 => 177,
    );
#line 96 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r0(){
   // execute end of template
   if ($this->compiler->caching) {
       $this->compiler->has_code = true;
       $this->compiler->nocache_nolog = true;
   }
    }
#line 1906 "Smarty_Compiler_Template_Php_Parser.php"
#line 108 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r1(){
    }
#line 1910 "Smarty_Compiler_Template_Php_Parser.php"
#line 127 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r5(){
    if ($this->compiler->has_code) {
        $this->compiler->nocacheCode($this->yystack[$this->yyidx + -1]->minor,true);
    } else { 
        $this->compiler->template_code->raw($this->yystack[$this->yyidx + -1]->minor);
    }  
    $this->block_nesting_level = count($this->compiler->_tag_stack);
    }
#line 1920 "Smarty_Compiler_Template_Php_Parser.php"
#line 141 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r7(){
    $this->compiler->template_code->php('echo ')->string($this->yystack[$this->yyidx + 0]->minor)->raw(";\n");
    }
#line 1925 "Smarty_Compiler_Template_Php_Parser.php"
#line 146 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r8(){
    if ($this->php_handling == Smarty::PHP_PASSTHRU) {
        $this->compiler->template_code->php("echo '<?php';\n");
    } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
        $this->compiler->template_code->php("echo '&lt;?php';\n");
    } elseif ($this->php_handling == Smarty::PHP_ALLOW) {
        if (!($this->compiler->template instanceof SmartyBC)) {
            $this->compiler->error (self::Err3);
        }
        $this->text_is_php = true;
    }
    }
#line 1939 "Smarty_Compiler_Template_Php_Parser.php"
#line 160 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r9(){
    if ($this->is_xml) {
        $this->is_xml = false;
        $this->compiler->template_code->php("echo '?>';\n");
    } elseif ($this->php_handling == Smarty::PHP_PASSTHRU) {
        $this->compiler->template_code->php("echo '?>';\n");
    } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
        $this->compiler->template_code->php("echo '?&gt;';\n");
    } elseif ($this->php_handling == Smarty::PHP_ALLOW) {
        $this->text_is_php = false;
    }
    }
#line 1953 "Smarty_Compiler_Template_Php_Parser.php"
#line 174 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r10(){
    if ($this->php_handling == Smarty::PHP_PASSTHRU) {
        $this->compiler->template_code->php("echo '<%';\n");
    } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
        $this->compiler->template_code->php("echo '&lt;%';\n");
    } elseif ($this->php_handling == Smarty::PHP_ALLOW) {
        if ($this->asp_tags) {
            if (!($this->compiler->template instanceof SmartyBC)) {
                $this->compiler->error (self::Err3);
            }
            $this->text_is_php = true;
        } else {
            $this->compiler->template_code->php("echo '<%';\n");
        }
    } elseif ($this->php_handling == Smarty::PHP_REMOVE) {
        if (!$this->asp_tags) {
            $this->compiler->template_code->php("echo '<%';\n");
        }
    }
    }
#line 1975 "Smarty_Compiler_Template_Php_Parser.php"
#line 196 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r11(){
    if ($this->php_handling == Smarty::PHP_PASSTHRU) {
        $this->compiler->template_code->php("echo '%>';\n");
    } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
        $this->compiler->template_code->php("echo '%&gt;';\n");
    } elseif ($this->php_handling == Smarty::PHP_ALLOW) {
        if ($this->asp_tags) {
            $this->text_is_php = false;
        } else {
            $this->compiler->template_code->php("echo '%>';\n");
        }
    } elseif ($this->php_handling == Smarty::PHP_REMOVE) {
        if (!$this->asp_tags) {
            $this->compiler->template_code->php("echo '%>';\n");
        }
    }
    }
#line 1994 "Smarty_Compiler_Template_Php_Parser.php"
#line 214 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r12(){
    if ($this->strip) {
        $this->compiler->template_code->php('echo ')->string(preg_replace('![\t ]*[\r\n]+[\t ]*!', '', $this->yystack[$this->yyidx + 0]->minor))->raw(";\n");
    } else {
        $this->compiler->template_code->php('echo ')->string($this->yystack[$this->yyidx + 0]->minor)->raw(";\n");
    }
    }
#line 2003 "Smarty_Compiler_Template_Php_Parser.php"
#line 223 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r13(){
    $this->is_xml = true; 
    $this->compiler->template_code->php("echo '<?xml';\n");
    }
#line 2009 "Smarty_Compiler_Template_Php_Parser.php"
#line 229 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r14(){
    if ($this->text_is_php) {
        $this->compiler->prefix_code[] = $this->yystack[$this->yyidx + 0]->minor;
        $this->compiler->nocacheCode('', true);
    } else {
        // inheritance child templates shall not output text
        if (!$this->compiler->isInheritanceChild || $this->compiler->block_nesting_level > 0) {
            if ($this->strip) {
                $this->compiler->template_code->php('echo ')->string(preg_replace('![\t ]*[\r\n]+[\t ]*!', '', $this->yystack[$this->yyidx + 0]->minor))->raw(";\n");
            } else {
                $this->compiler->template_code->php('echo ')->string($this->yystack[$this->yyidx + 0]->minor)->raw(";\n");
            }
        }
    }
    }
#line 2026 "Smarty_Compiler_Template_Php_Parser.php"
#line 246 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r15(){
    $this->strip = true;
    }
#line 2031 "Smarty_Compiler_Template_Php_Parser.php"
#line 250 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r16(){
    $this->strip = false;
    }
#line 2036 "Smarty_Compiler_Template_Php_Parser.php"
#line 255 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r17(){
    $this->_retvalue = '';
    }
#line 2041 "Smarty_Compiler_Template_Php_Parser.php"
#line 259 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r18(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;
    }
#line 2046 "Smarty_Compiler_Template_Php_Parser.php"
#line 263 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r19(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2051 "Smarty_Compiler_Template_Php_Parser.php"
#line 271 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r21(){
    $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;
    }
#line 2056 "Smarty_Compiler_Template_Php_Parser.php"
#line 312 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r28(){
    $this->_retvalue = $this->compiler->compileTag('Internal_PrintExpression',$this->yystack[$this->yyidx + 0]->minor,array('value'=>$this->yystack[$this->yyidx + -1]->minor));
    }
#line 2061 "Smarty_Compiler_Template_Php_Parser.php"
#line 333 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r29(){
    $this->_retvalue = $this->compiler->compileTag('assign',array_merge(array(array('value'=>$this->yystack[$this->yyidx + -1]->minor),array('var'=>$this->yystack[$this->yyidx + -3]->minor['var'])),$this->yystack[$this->yyidx + 0]->minor),array('smarty_internal_index'=>$this->yystack[$this->yyidx + -3]->minor['smarty_internal_index']));
    }
#line 2066 "Smarty_Compiler_Template_Php_Parser.php"
#line 338 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r30(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor);
    }
#line 2071 "Smarty_Compiler_Template_Php_Parser.php"
#line 352 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r31(){
    $this->_retvalue = 'ob_start(); '.$this->compiler->compileTag($this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + 0]->minor).' echo ';
    $this->_retvalue .= $this->compiler->compileTag('Internal_Modifier',array(),array('modifier_list'=>$this->yystack[$this->yyidx + -1]->minor,'value'=>'ob_get_clean()')).';';
    }
#line 2077 "Smarty_Compiler_Template_Php_Parser.php"
#line 358 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r32(){
    $this->_retvalue = 'ob_start(); '.$this->compiler->compileTag($this->yystack[$this->yyidx + -4]->minor,$this->yystack[$this->yyidx + 0]->minor,array('object_method'=>$this->yystack[$this->yyidx + -2]->minor)).' echo ';
    $this->_retvalue .= $this->compiler->compileTag('Internal_Modifier',array(),array('modifier_list'=>$this->yystack[$this->yyidx + -1]->minor,'value'=>'ob_get_clean()')).';';
    }
#line 2083 "Smarty_Compiler_Template_Php_Parser.php"
#line 369 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r33(){
    $tag = trim(substr($this->yystack[$this->yyidx + -2]->minor,$this->lex->ldel_length));
    $this->_retvalue = $this->compiler->compileTag(($tag == 'else if')? 'elseif' : $tag,$this->yystack[$this->yyidx + 0]->minor,array('if condition'=>$this->yystack[$this->yyidx + -1]->minor));
    }
#line 2089 "Smarty_Compiler_Template_Php_Parser.php"
#line 385 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r35(){
    $this->_retvalue = $this->compiler->compileTag('for',array_merge($this->yystack[$this->yyidx + 0]->minor,array(array('start'=>$this->yystack[$this->yyidx + -9]->minor),array('ifexp'=>$this->yystack[$this->yyidx + -6]->minor),array('var'=>$this->yystack[$this->yyidx + -3]->minor),array('step'=>'='.$this->yystack[$this->yyidx + -1]->minor))),1);
    }
#line 2094 "Smarty_Compiler_Template_Php_Parser.php"
#line 388 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r36(){
    $len =strlen($this->yystack[$this->yyidx + -1]->minor);
    $this->_retvalue = $this->compiler->compileTag('for',array_merge($this->yystack[$this->yyidx + 0]->minor,array(array('start'=>$this->yystack[$this->yyidx + -7]->minor),array('ifexp'=>$this->yystack[$this->yyidx + -4]->minor),array('var'=>substr($this->yystack[$this->yyidx + -1]->minor,1,$len-3)),array('step'=>substr($this->yystack[$this->yyidx + -1]->minor,$len-2)))),1);
    }
#line 2100 "Smarty_Compiler_Template_Php_Parser.php"
#line 393 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r37(){
    $this->_retvalue = $this->compiler->compileTag('for',array_merge($this->yystack[$this->yyidx + 0]->minor,array(array('start'=>$this->yystack[$this->yyidx + -3]->minor),array('to'=>$this->yystack[$this->yyidx + -1]->minor))),0);
    }
#line 2105 "Smarty_Compiler_Template_Php_Parser.php"
#line 397 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r38(){
    $this->_retvalue = $this->compiler->compileTag('for',array_merge($this->yystack[$this->yyidx + 0]->minor,array(array('start'=>$this->yystack[$this->yyidx + -5]->minor),array('to'=>$this->yystack[$this->yyidx + -3]->minor),array('step'=>$this->yystack[$this->yyidx + -1]->minor))),0);
    }
#line 2110 "Smarty_Compiler_Template_Php_Parser.php"
#line 402 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r39(){
    $this->_retvalue = $this->compiler->compileTag('foreach',$this->yystack[$this->yyidx + 0]->minor);
    }
#line 2115 "Smarty_Compiler_Template_Php_Parser.php"
#line 407 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r40(){
    $this->_retvalue = $this->compiler->compileTag('foreach',array_merge($this->yystack[$this->yyidx + 0]->minor,array(array('from'=>$this->yystack[$this->yyidx + -3]->minor),array('item'=>$this->yystack[$this->yyidx + -1]->minor))));
    }
#line 2120 "Smarty_Compiler_Template_Php_Parser.php"
#line 411 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r41(){
    $this->_retvalue = $this->compiler->compileTag('foreach',array_merge($this->yystack[$this->yyidx + 0]->minor,array(array('from'=>$this->yystack[$this->yyidx + -5]->minor),array('item'=>$this->yystack[$this->yyidx + -1]->minor),array('key'=>$this->yystack[$this->yyidx + -3]->minor))));
    }
#line 2125 "Smarty_Compiler_Template_Php_Parser.php"
#line 424 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r44(){
    $this->_retvalue = $this->compiler->compileTag('setfilter',array(),array('modifier_list'=>array(array_merge(array($this->yystack[$this->yyidx + -1]->minor),$this->yystack[$this->yyidx + 0]->minor))));
    }
#line 2130 "Smarty_Compiler_Template_Php_Parser.php"
#line 428 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r45(){
    $this->_retvalue = $this->compiler->compileTag('setfilter',array(),array('modifier_list'=>array_merge(array(array_merge(array($this->yystack[$this->yyidx + -3]->minor),$this->yystack[$this->yyidx + -2]->minor)),$this->yystack[$this->yyidx + -1]->minor)));
    }
#line 2135 "Smarty_Compiler_Template_Php_Parser.php"
#line 435 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r46(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + 0]->minor.'close',array());
    }
#line 2140 "Smarty_Compiler_Template_Php_Parser.php"
#line 439 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r47(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -1]->minor.'close',array(),array('modifier_list'=>$this->yystack[$this->yyidx + 0]->minor));
    }
#line 2145 "Smarty_Compiler_Template_Php_Parser.php"
#line 444 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r48(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -2]->minor.'close',array(),array('object_method'=>$this->yystack[$this->yyidx + 0]->minor));
    }
#line 2150 "Smarty_Compiler_Template_Php_Parser.php"
#line 448 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r49(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -3]->minor.'close',array(),array('object_method'=>$this->yystack[$this->yyidx + -1]->minor,'modifier_list'=>$this->yystack[$this->yyidx + 0]->minor));
    }
#line 2155 "Smarty_Compiler_Template_Php_Parser.php"
#line 456 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r50(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;
    $this->_retvalue[] = $this->yystack[$this->yyidx + 0]->minor;
    }
#line 2161 "Smarty_Compiler_Template_Php_Parser.php"
#line 462 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r51(){
    $this->_retvalue = array($this->yystack[$this->yyidx + 0]->minor);
    }
#line 2166 "Smarty_Compiler_Template_Php_Parser.php"
#line 467 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r52(){
    $this->_retvalue = array();
    }
#line 2171 "Smarty_Compiler_Template_Php_Parser.php"
#line 472 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r53(){
    if (preg_match('~^true$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>'true');
    } elseif (preg_match('~^false$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>'false');
    } elseif (preg_match('~^null$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>'null');
    } else {
        $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>"'".$this->yystack[$this->yyidx + 0]->minor."'");
    }
    }
#line 2184 "Smarty_Compiler_Template_Php_Parser.php"
#line 484 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r54(){
    $this->_retvalue = array(trim($this->yystack[$this->yyidx + -1]->minor," =\n\r\t")=>$this->yystack[$this->yyidx + 0]->minor);
    }
#line 2189 "Smarty_Compiler_Template_Php_Parser.php"
#line 492 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r55(){
    $this->_retvalue = "'".$this->yystack[$this->yyidx + 0]->minor."'";
    }
#line 2194 "Smarty_Compiler_Template_Php_Parser.php"
#line 504 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r57(){
    $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>$this->yystack[$this->yyidx + 0]->minor);
    }
#line 2199 "Smarty_Compiler_Template_Php_Parser.php"
#line 517 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r59(){
    $this->yystack[$this->yyidx + -2]->minor[]=$this->yystack[$this->yyidx + 0]->minor;
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor;
    }
#line 2205 "Smarty_Compiler_Template_Php_Parser.php"
#line 523 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r60(){
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor;
    $this->_retvalue['value'] = $this->yystack[$this->yyidx + 0]->minor;
    }
#line 2211 "Smarty_Compiler_Template_Php_Parser.php"
#line 548 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r64(){
    $this->_retvalue = '$this->smarty->getStreamVariable(\''. $this->yystack[$this->yyidx + -2]->minor .'://'. $this->yystack[$this->yyidx + 0]->minor . '\')';
    }
#line 2216 "Smarty_Compiler_Template_Php_Parser.php"
#line 553 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r65(){
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor . trim($this->yystack[$this->yyidx + -1]->minor) . $this->yystack[$this->yyidx + 0]->minor;
    }
#line 2221 "Smarty_Compiler_Template_Php_Parser.php"
#line 572 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r68(){
    $this->_retvalue = $this->compiler->compileTag('Internal_Modifier',array(),array('value'=>$this->yystack[$this->yyidx + -1]->minor,'modifier_list'=>$this->yystack[$this->yyidx + 0]->minor));
    }
#line 2226 "Smarty_Compiler_Template_Php_Parser.php"
#line 578 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r69(){
    $operator = strtolower(trim($this->yystack[$this->yyidx + -1]->minor));
    if (isset($this->opMap[$operator])) {
        $operator = $this->opMap[$operator];
    }
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor." {$operator} ".$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2235 "Smarty_Compiler_Template_Php_Parser.php"
#line 590 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r70(){
    $this->_retvalue = 'in_array('.$this->yystack[$this->yyidx + -2]->minor.',(array)'.$this->yystack[$this->yyidx + 0]->minor.')';
    }
#line 2240 "Smarty_Compiler_Template_Php_Parser.php"
#line 602 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r72(){
    $this->_retvalue = '!('.$this->yystack[$this->yyidx + -2]->minor.' % '.$this->yystack[$this->yyidx + 0]->minor.')';
    }
#line 2245 "Smarty_Compiler_Template_Php_Parser.php"
#line 606 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r73(){
    $this->_retvalue = '('.$this->yystack[$this->yyidx + -2]->minor.' % '.$this->yystack[$this->yyidx + 0]->minor.')';
    }
#line 2250 "Smarty_Compiler_Template_Php_Parser.php"
#line 610 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r74(){
    $this->_retvalue = '!(1 & '.$this->yystack[$this->yyidx + -1]->minor.')';
    }
#line 2255 "Smarty_Compiler_Template_Php_Parser.php"
#line 614 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r75(){
    $this->_retvalue = '(1 & '.$this->yystack[$this->yyidx + -1]->minor.')';
    }
#line 2260 "Smarty_Compiler_Template_Php_Parser.php"
#line 618 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r76(){
    $this->_retvalue = '!(1 & '.$this->yystack[$this->yyidx + -2]->minor.' / '.$this->yystack[$this->yyidx + 0]->minor.')';
    }
#line 2265 "Smarty_Compiler_Template_Php_Parser.php"
#line 622 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r77(){
    $this->_retvalue = '(1 & '.$this->yystack[$this->yyidx + -2]->minor.' / '.$this->yystack[$this->yyidx + 0]->minor.')';
    }
#line 2270 "Smarty_Compiler_Template_Php_Parser.php"
#line 642 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r82(){
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2275 "Smarty_Compiler_Template_Php_Parser.php"
#line 650 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r84(){
    $this->prefix_number++;
    $this->compiler->prefix_code[] = '$_tmp'.$this->prefix_number.'='.$this->yystack[$this->yyidx + 0]->minor.';';
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.'$_tmp'.$this->prefix_number;
    }
#line 2282 "Smarty_Compiler_Template_Php_Parser.php"
#line 663 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r86(){
    $this->_retvalue = $this->yystack[$this->yyidx + -6]->minor.' ? '. $this->compiler->compileVariable("'".$this->yystack[$this->yyidx + -2]->minor."'") . ' : '.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2287 "Smarty_Compiler_Template_Php_Parser.php"
#line 667 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r87(){
    $this->_retvalue = $this->yystack[$this->yyidx + -5]->minor.' ? '.$this->yystack[$this->yyidx + -2]->minor.' : '.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2292 "Smarty_Compiler_Template_Php_Parser.php"
#line 683 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r90(){
    $operator = strtolower(trim($this->yystack[$this->yyidx + -1]->minor));
    if (isset($this->opMap[$operator])) {
        $operator = $this->opMap[$operator];
    }

    $this->_retvalue = $operator.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2302 "Smarty_Compiler_Template_Php_Parser.php"
#line 709 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r95(){
    $this->_retvalue = '.'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2307 "Smarty_Compiler_Template_Php_Parser.php"
#line 714 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r96(){
    if (preg_match('~^true$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = 'true';
    } elseif (preg_match('~^false$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = 'false';
    } elseif (preg_match('~^null$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = 'null';
    } else {
        $this->_retvalue = "'".$this->yystack[$this->yyidx + 0]->minor."'";
    }
    }
#line 2320 "Smarty_Compiler_Template_Php_Parser.php"
#line 732 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r98(){
    $this->_retvalue = "(". $this->yystack[$this->yyidx + -1]->minor .")";
    }
#line 2325 "Smarty_Compiler_Template_Php_Parser.php"
#line 746 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r101(){
    $len = strlen($this->yystack[$this->yyidx + 0]->minor);
    $this->_retvalue = '$_scope->' . substr($this->yystack[$this->yyidx + 0]->minor,1,$len-3) . '->value' . substr($this->yystack[$this->yyidx + 0]->minor,$len-2);
    }
#line 2331 "Smarty_Compiler_Template_Php_Parser.php"
#line 752 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r102(){
    if (!$this->security || isset($this->compiler->tpl_obj->registered_classes[$this->yystack[$this->yyidx + -1]->minor]) || $this->compiler->tpl_obj->security_policy->isTrustedStaticClass($this->yystack[$this->yyidx + -1]->minor, $this->compiler)) {
        if (isset($this->compiler->tpl_obj->registered_classes[$this->yystack[$this->yyidx + -1]->minor])) {
            $this->_retvalue = $this->compiler->tpl_obj->registered_classes[$this->yystack[$this->yyidx + -1]->minor].$this->yystack[$this->yyidx + 0]->minor;
        } else {
            $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
        } 
    } else {
        $this->compiler->error ("static class '".$this->yystack[$this->yyidx + -1]->minor."' is undefined or not allowed by security setting");
    }
    }
#line 2344 "Smarty_Compiler_Template_Php_Parser.php"
#line 765 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r103(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.r;
    }
#line 2349 "Smarty_Compiler_Template_Php_Parser.php"
#line 774 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r105(){
    $this->_retvalue = $this->compiler->compileVariable($this->yystack[$this->yyidx + -1]->minor).$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2354 "Smarty_Compiler_Template_Php_Parser.php"
#line 779 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r106(){
    $this->prefix_number++;
    $code = new Smarty_Compiler_Code();
    $code->iniTagCode($this->compiler);
    $code->php("ob_start();")->newline();
    $code->mergeCode($this->yystack[$this->yyidx + 0]->minor);
    $code->php("\$_tmp{$this->prefix_number} = ob_get_clean();")->newline();
    $this->compiler->prefix_code[] = $code;
    $this->_retvalue = '$_tmp'.$this->prefix_number;
    }
#line 2366 "Smarty_Compiler_Template_Php_Parser.php"
#line 800 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r108(){
    if ($this->yystack[$this->yyidx + 0]->minor['var'] == 'smarty') {
        $this->_retvalue = $this->compiler->compileTag('Internal_SpecialVariable',array(),$this->yystack[$this->yyidx + 0]->minor['smarty_internal_index']);
    } else {
        $this->_retvalue = $this->compiler->compileVariable($this->yystack[$this->yyidx + 0]->minor['var']).$this->yystack[$this->yyidx + 0]->minor['smarty_internal_index'];
    }
    }
#line 2375 "Smarty_Compiler_Template_Php_Parser.php"
#line 809 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r109(){
    $this->_retvalue = '$_scope->' . trim($this->yystack[$this->yyidx + -2]->minor,"'") . '->' . $this->yystack[$this->yyidx + 0]->minor;
    }
#line 2380 "Smarty_Compiler_Template_Php_Parser.php"
#line 824 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r111(){
    $var = trim($this->yystack[$this->yyidx + -2]->minor,'\'');
    $this->_retvalue = "\$_scope->___config_var_{$var}".$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2386 "Smarty_Compiler_Template_Php_Parser.php"
#line 833 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r112(){
    $this->_retvalue = "\$_scope->___config_var_{{$this->yystack[$this->yyidx + -2]->minor}}".$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2391 "Smarty_Compiler_Template_Php_Parser.php"
#line 837 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r113(){
    $this->_retvalue = array('var'=>$this->yystack[$this->yyidx + -1]->minor, 'smarty_internal_index'=>$this->yystack[$this->yyidx + 0]->minor);
    }
#line 2396 "Smarty_Compiler_Template_Php_Parser.php"
#line 850 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r115(){
    return;
    }
#line 2401 "Smarty_Compiler_Template_Php_Parser.php"
#line 856 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r116(){
    $this->_retvalue = '['.$this->compiler->compileVariable($this->yystack[$this->yyidx + 0]->minor).']';
    }
#line 2406 "Smarty_Compiler_Template_Php_Parser.php"
#line 860 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r117(){
    $this->_retvalue = '['.$this->compiler->compileVariable($this->yystack[$this->yyidx + -2]->minor).'->'.$this->yystack[$this->yyidx + 0]->minor.']';
    }
#line 2411 "Smarty_Compiler_Template_Php_Parser.php"
#line 864 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r118(){
    $this->_retvalue = "['". $this->yystack[$this->yyidx + 0]->minor ."']";
    }
#line 2416 "Smarty_Compiler_Template_Php_Parser.php"
#line 868 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r119(){
    $this->_retvalue = "[". $this->yystack[$this->yyidx + 0]->minor ."]";
    }
#line 2421 "Smarty_Compiler_Template_Php_Parser.php"
#line 873 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r120(){
    $this->_retvalue = "[". implode('][', explode('.', $this->yystack[$this->yyidx + 0]->minor)) ."]";
    }
#line 2426 "Smarty_Compiler_Template_Php_Parser.php"
#line 882 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r122(){
    $this->_retvalue = '['.$this->compiler->compileTag('Internal_SpecialVariable',array(),'[\'section\'][\''.$this->yystack[$this->yyidx + -1]->minor.'\'][\'index\']').']';
    }
#line 2431 "Smarty_Compiler_Template_Php_Parser.php"
#line 886 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r123(){
    $this->_retvalue = '['.$this->compiler->compileTag('Internal_SpecialVariable',array(),'[\'section\'][\''.$this->yystack[$this->yyidx + -3]->minor.'\'][\''.$this->yystack[$this->yyidx + -1]->minor.'\']').']';
    }
#line 2436 "Smarty_Compiler_Template_Php_Parser.php"
#line 891 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r124(){
    $this->_retvalue = "[". $this->yystack[$this->yyidx + -1]->minor ."]";
    }
#line 2441 "Smarty_Compiler_Template_Php_Parser.php"
#line 896 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r125(){
    $this->_retvalue = '[]';
    }
#line 2446 "Smarty_Compiler_Template_Php_Parser.php"
#line 900 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r126(){
    $this->_retvalue = '::'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2451 "Smarty_Compiler_Template_Php_Parser.php"
#line 912 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r128(){
    $this->prefix_number++;
    $code = new Smarty_Compiler_Code;
    $code->iniTagCode($this->compiler);
    $code->php('$_tmp'.$this->prefix_number.'='.$this->yystack[$this->yyidx + 0]->minor.";\n");
    $this->compiler->prefix_code[] = $code;
    $this->_retvalue = '$_tmp'.$this->prefix_number;
    }
#line 2461 "Smarty_Compiler_Template_Php_Parser.php"
#line 922 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r129(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.'.'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2466 "Smarty_Compiler_Template_Php_Parser.php"
#line 927 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r130(){
    $this->_retvalue = '\''.$this->yystack[$this->yyidx + 0]->minor.'\'';
    }
#line 2471 "Smarty_Compiler_Template_Php_Parser.php"
#line 932 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r131(){
    $this->_retvalue = '('.$this->yystack[$this->yyidx + 0]->minor.')';
    }
#line 2476 "Smarty_Compiler_Template_Php_Parser.php"
#line 939 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r132(){
    if ($this->yystack[$this->yyidx + -1]->minor['var'] == '\'smarty\'') {
        $this->_retvalue =  $this->compiler->compileTag('Internal_SpecialVariable',array(),$this->yystack[$this->yyidx + -1]->minor['smarty_internal_index']).$this->yystack[$this->yyidx + 0]->minor;
    } else {
        $this->_retvalue = $this->compiler->compileVariable($this->yystack[$this->yyidx + -1]->minor['var']).$this->yystack[$this->yyidx + -1]->minor['smarty_internal_index'].$this->yystack[$this->yyidx + 0]->minor;
    }
    }
#line 2485 "Smarty_Compiler_Template_Php_Parser.php"
#line 948 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r133(){
    $this->_retvalue  = $this->yystack[$this->yyidx + 0]->minor;
    }
#line 2490 "Smarty_Compiler_Template_Php_Parser.php"
#line 953 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r134(){
    $this->_retvalue  = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2495 "Smarty_Compiler_Template_Php_Parser.php"
#line 958 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r135(){
    if ($this->security && substr($this->yystack[$this->yyidx + -1]->minor,0,1) == '_') {
        $this->compiler->error (self::Err1);
    }
    $this->_retvalue = '->'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2503 "Smarty_Compiler_Template_Php_Parser.php"
#line 965 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r136(){
    if ($this->security) {
        $this->compiler->error (self::Err2);
    }
    $this->_retvalue = '->{'.$this->yystack[$this->yyidx + 0]->minor.'}';
    }
#line 2511 "Smarty_Compiler_Template_Php_Parser.php"
#line 972 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r137(){
    if ($this->security) {
        $this->compiler->error (self::Err2);
    }
    $this->_retvalue = '->{'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor.'}';
    }
#line 2519 "Smarty_Compiler_Template_Php_Parser.php"
#line 979 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r138(){
    if ($this->security) {
        $this->compiler->error (self::Err2);
    }
    $this->_retvalue = '->{\''.$this->yystack[$this->yyidx + -2]->minor.'\'.'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor.'}';
    }
#line 2527 "Smarty_Compiler_Template_Php_Parser.php"
#line 987 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r139(){
    $this->_retvalue = '->'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2532 "Smarty_Compiler_Template_Php_Parser.php"
#line 995 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r140(){
    if (!$this->security || $this->compiler->tpl_obj->security_policy->isTrustedPhpFunction($this->yystack[$this->yyidx + -3]->minor, $this->compiler)) {
        if (strcasecmp($this->yystack[$this->yyidx + -3]->minor,'isset') === 0 || strcasecmp($this->yystack[$this->yyidx + -3]->minor,'empty') === 0 || strcasecmp($this->yystack[$this->yyidx + -3]->minor,'array') === 0 || is_callable($this->yystack[$this->yyidx + -3]->minor)) {
            $func_name = strtolower($this->yystack[$this->yyidx + -3]->minor);
            if ($func_name == 'isset') {
                if (count($this->yystack[$this->yyidx + -1]->minor) == 0) {
                    $this->compiler->error ('Illegal number of paramer in "isset()"');
                }
                $par = implode(',',$this->yystack[$this->yyidx + -1]->minor);
                preg_match('/\$_scope->([0-9]*[a-zA-Z_]\w*)(.*)/',$par,$match);
                if (isset($match[1])) {
                    $search = array('/\$_scope->([0-9]*[a-zA-Z_]\w*)/','/->value.*/');
                    $replace = array('Smarty_Variable_Extension_GetVariable::getVariable($this, \'\1\', null, false, false)','');
                    $this->prefix_number++;
                    $code = new Smarty_Compiler_Code();
                    $code->iniTagCode($this->compiler);
                    $code->php("\$_tmp{$this->prefix_number} = "  .preg_replace($search, $replace, $par) . ';')->newline();
                    $this->compiler->prefix_code[] = $code;
                    $isset_par = '$_tmp'.$this->prefix_number.$match[2];
                } else {
                    $this->prefix_number++;
                    $code = new Smarty_Compiler_Code();
                    $code->iniTagCode($this->compiler);
                    $code->php("\$_tmp{$this->prefix_number} = " . $par . ';')->newline();
                    $this->compiler->prefix_code[] = $code;
                    $isset_par = '$_tmp'.$this->prefix_number;
                }
                $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". $isset_par .")";
            } elseif (in_array($func_name,array('empty','reset','current','end','prev','next'))){
                if (count($this->yystack[$this->yyidx + -1]->minor) != 1) {
                    $this->compiler->error ("Illegal number of paramer in \"{$func_name}\"");
                }
                $this->_retvalue = $func_name.'('.$this->yystack[$this->yyidx + -1]->minor[0].')';
            } else {
                $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". implode(',',$this->yystack[$this->yyidx + -1]->minor) .")";
            }
        } else {
            $this->compiler->error ("unknown function \"" . $this->yystack[$this->yyidx + -3]->minor . "\"");
        }
    }
    }
#line 2575 "Smarty_Compiler_Template_Php_Parser.php"
#line 1040 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r141(){
    if (!$this->security || $this->compiler->tpl_obj->security_policy->isTrustedPhpFunction($this->yystack[$this->yyidx + -3]->minor, $this->compiler)) {
        if (is_callable($this->yystack[$this->yyidx + -3]->minor)) {
            $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". implode(',',$this->yystack[$this->yyidx + -1]->minor) .")";
        } else {
            $this->compiler->error ("unknown function \"" . $this->yystack[$this->yyidx + -3]->minor . "\"");
        }
    }
    }
#line 2586 "Smarty_Compiler_Template_Php_Parser.php"
#line 1053 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r142(){
    if ($this->security && substr($this->yystack[$this->yyidx + -3]->minor,0,1) == '_') {
        $this->compiler->error (self::Err1);
    }
    $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". implode(',',$this->yystack[$this->yyidx + -1]->minor) .")";
    }
#line 2594 "Smarty_Compiler_Template_Php_Parser.php"
#line 1060 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r143(){
    if ($this->security) {
        $this->compiler->error (self::Err2);
    }
    $this->prefix_number++;
    $code = new Smarty_Compiler_Code();
    $code->iniTagCode($this->compiler);
    $code->php("\$_tmp{$this->prefix_number} = " . $this->compiler->compileVariable("'".$this->yystack[$this->yyidx + -3]->minor."'") . ';')->newline();
    $this->compiler->prefix_code[] = $code;
    $this->_retvalue = '$_tmp'.$this->prefix_number.'('. implode(',',$this->yystack[$this->yyidx + -1]->minor) .')';
    }
#line 2607 "Smarty_Compiler_Template_Php_Parser.php"
#line 1074 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r144(){
    $this->_retvalue = array_merge($this->yystack[$this->yyidx + -2]->minor,array($this->yystack[$this->yyidx + 0]->minor));
    }
#line 2612 "Smarty_Compiler_Template_Php_Parser.php"
#line 1094 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r147(){
    $this->_retvalue = array_merge($this->yystack[$this->yyidx + -2]->minor,array(array_merge($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor)));
    }
#line 2617 "Smarty_Compiler_Template_Php_Parser.php"
#line 1098 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r148(){
    $this->_retvalue = array(array_merge($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor));
    }
#line 2622 "Smarty_Compiler_Template_Php_Parser.php"
#line 1106 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r150(){
    $this->_retvalue =  array($this->yystack[$this->yyidx + 0]->minor);
    }
#line 2627 "Smarty_Compiler_Template_Php_Parser.php"
#line 1114 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r151(){
    $this->_retvalue = array_merge($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor);
    }
#line 2632 "Smarty_Compiler_Template_Php_Parser.php"
#line 1144 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r157(){
    $this->_retvalue = '$'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2637 "Smarty_Compiler_Template_Php_Parser.php"
#line 1149 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r158(){
    $this->_retvalue = '$'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2642 "Smarty_Compiler_Template_Php_Parser.php"
#line 1158 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r159(){
    $this->_retvalue = 'array('.$this->yystack[$this->yyidx + -1]->minor.')';
    }
#line 2647 "Smarty_Compiler_Template_Php_Parser.php"
#line 1166 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r161(){
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.','.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2652 "Smarty_Compiler_Template_Php_Parser.php"
#line 1174 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r163(){
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'=>'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2657 "Smarty_Compiler_Template_Php_Parser.php"
#line 1178 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r164(){ 
    $this->_retvalue = '\''.$this->yystack[$this->yyidx + -2]->minor.'\'=>'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2662 "Smarty_Compiler_Template_Php_Parser.php"
#line 1190 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r166(){
    $this->_retvalue = "''";
    }
#line 2667 "Smarty_Compiler_Template_Php_Parser.php"
#line 1199 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r168(){
    if ($this->yystack[$this->yyidx + 0]->minor === false) {
       $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;
    } else {
       $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor. '.' . $this->yystack[$this->yyidx + 0]->minor;
    }
    }
#line 2676 "Smarty_Compiler_Template_Php_Parser.php"
#line 1207 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r169(){
    if ($this->yystack[$this->yyidx + 0]->minor === false) {
       $this->_retvalue = "''";
    } else {
       $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;
    }
    }
#line 2685 "Smarty_Compiler_Template_Php_Parser.php"
#line 1215 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r170(){
    if (empty($this->db_quote_code_buffer)) {
        $this->_retvalue = '(string)'.$this->yystack[$this->yyidx + -1]->minor;
    } else {
        $this->db_quote_code_buffer .= 'echo (string)'.$this->yystack[$this->yyidx + -1]->minor.';';
        $this->_retvalue = false;
    }
    }
#line 2695 "Smarty_Compiler_Template_Php_Parser.php"
#line 1224 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r171(){
    if (empty($this->db_quote_code_buffer)) {
        $this->_retvalue = '(string)('.$this->yystack[$this->yyidx + -1]->minor.')';
    } else {
        $this->db_quote_code_buffer .= 'echo (string)('.$this->yystack[$this->yyidx + -1]->minor.');';
        $this->_retvalue = false;
    }
    }
#line 2705 "Smarty_Compiler_Template_Php_Parser.php"
#line 1233 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r172(){
    if (empty($this->db_quote_code_buffer)) {
        $this->_retvalue = '(string)$_scope->'. substr($this->yystack[$this->yyidx + 0]->minor,1) . '->value';
    } else {
        $this->db_quote_code_buffer .= 'echo (string)$_scope->'. substr($this->yystack[$this->yyidx + 0]->minor,1) . '->value;';
        $this->_retvalue = false;
    }
    }
#line 2715 "Smarty_Compiler_Template_Php_Parser.php"
#line 1251 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r174(){
    if (empty($this->db_quote_code_buffer)) {
        $this->_retvalue = '(string)('.$this->yystack[$this->yyidx + 0]->minor.')';
    } else {
        $this->db_quote_code_buffer .= 'echo (string)('.$this->yystack[$this->yyidx + 0]->minor.');';
        $this->_retvalue = false;
    }
    }
#line 2725 "Smarty_Compiler_Template_Php_Parser.php"
#line 1260 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r175(){
    if (empty($this->db_quote_code_buffer)) {
            $this->db_quote_code_buffer = "ob_start();\n";
    }
    $this->db_quote_code_buffer .= $this->yystack[$this->yyidx + -1]->minor->buffer;
        if ($this->block_nesting_level == count($this->compiler->_tag_stack)) {
        $this->prefix_number++;
        $code = new Smarty_Compiler_Code();
        $code->iniTagCode($this->compiler);
        $code->formatPHP( $this->db_quote_code_buffer . ' $_tmp'.$this->prefix_number.'=ob_get_clean();')->newline();
        $this->compiler->prefix_code[] = $code;
        $this->db_quote_code_buffer = '';
        $this->_retvalue = '$_tmp'.$this->prefix_number;
    } else {
        $this->_retvalue = false;
    }

    }
#line 2745 "Smarty_Compiler_Template_Php_Parser.php"
#line 1279 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r176(){
    if (empty($this->db_quote_code_buffer)) {
        $this->_retvalue = '"'.$this->yystack[$this->yyidx + 0]->minor.'"';
    } else {
        $this->db_quote_code_buffer .= 'echo ' . sprintf('"%s"', addcslashes($this->yystack[$this->yyidx + 0]->minor, "\0\t\n\r\"\$\\")) . ';';
        $this->_retvalue = false;
    }
    }
#line 2755 "Smarty_Compiler_Template_Php_Parser.php"
#line 1288 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r177(){
    $this->compiler->lex->yypopstate();
    $this->_retvalue = '';
    }
#line 2761 "Smarty_Compiler_Template_Php_Parser.php"

    private $_retvalue;

    public function yy_reduce($yyruleno)
    {
        $yymsp = $this->yystack[$this->yyidx];
        if (self::$yyTraceFILE && $yyruleno >= 0
              && $yyruleno < count(self::$yyRuleName)) {
            fprintf(self::$yyTraceFILE, "%sReduce (%d) [%s].\n",
                self::$yyTracePrompt, $yyruleno,
                self::$yyRuleName[$yyruleno]);
        }

        $this->_retvalue = $yy_lefthand_side = null;
        if (array_key_exists($yyruleno, self::$yyReduceMap)) {
            // call the action
            $this->_retvalue = null;
            $this->{'yy_r' . self::$yyReduceMap[$yyruleno]}();
            $yy_lefthand_side = $this->_retvalue;
        }
        $yygoto = self::$yyRuleInfo[$yyruleno]['lhs'];
        $yysize = self::$yyRuleInfo[$yyruleno]['rhs'];
        $this->yyidx -= $yysize;
        for ($i = $yysize; $i; $i--) {
            // pop all of the right-hand side parameters
            array_pop($this->yystack);
        }
        $yyact = $this->yy_find_reduce_action($this->yystack[$this->yyidx]->stateno, $yygoto);
        if ($yyact < self::YYNSTATE) {
            if (!self::$yyTraceFILE && $yysize) {
                $this->yyidx++;
                $x = new TP_yyStackEntry;
                $x->stateno = $yyact;
                $x->major = $yygoto;
                $x->minor = $yy_lefthand_side;
                $this->yystack[$this->yyidx] = $x;
            } else {
                $this->yy_shift($yyact, $yygoto, $yy_lefthand_side);
            }
        } elseif ($yyact == self::YYNSTATE + self::YYNRULE + 1) {
            $this->yy_accept();
        }
    }

    public function yy_parse_failed()
    {
        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sFail!\n", self::$yyTracePrompt);
        }
        while ($this->yyidx >= 0) {
            $this->yy_pop_parser_stack();
        }
    }

    public function yy_syntax_error($yymajor, $TOKEN)
    {
#line 64 "Smarty_Compiler_Template_Php_Parser.y"

    $this->internalError = true;
    // expected token from parser
    $error_text = "<br> Syntax error :Unexpected '<b>{$this->lex->value}</b>'";
    if (count($this->yy_get_expected_tokens($yymajor)) <= 4) {
        foreach ($this->yy_get_expected_tokens($yymajor) as $token) {
            $exp_token = $this->yyTokenName[$token];
            if (isset($this->lex->smarty_token_names[$exp_token])) {
                // token type from lexer
                $expect[] = "'<b>{$this->lex->smarty_token_names[$exp_token]}</b>'";
            } else {
                // otherwise internal token name
                $expect[] = $this->yyTokenName[$token];
            }
        }
        $error_text .= ', expected one of: ' . implode(' , ', $expect) . '<br>';
    }
    $this->compiler->error($error_text);
#line 2838 "Smarty_Compiler_Template_Php_Parser.php"
    }

    public function yy_accept()
    {
        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sAccept!\n", self::$yyTracePrompt);
        } while ($this->yyidx >= 0) {
            $stack = $this->yy_pop_parser_stack();
        }
#line 56 "Smarty_Compiler_Template_Php_Parser.y"

    $this->successful = !$this->internalError;
    $this->internalError = false;
    $this->retvalue = $this->_retvalue;
    //echo $this->retvalue."\n\n";
#line 2855 "Smarty_Compiler_Template_Php_Parser.php"
    }

    public function doParse($yymajor, $yytokenvalue)
    {
        $yyerrorhit = 0;   /* True if yymajor has invoked an error */

        if ($this->yyidx === null || $this->yyidx < 0) {
            $this->yyidx = 0;
            $this->yyerrcnt = -1;
            $x = new TP_yyStackEntry;
            $x->stateno = 0;
            $x->major = 0;
            $this->yystack = array();
            array_push($this->yystack, $x);
        }
        $yyendofinput = ($yymajor==0);

        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sInput %s\n",
                self::$yyTracePrompt, $this->yyTokenName[$yymajor]);
        }

        do {
            $yyact = $this->yy_find_shift_action($yymajor);
            if ($yymajor < self::YYERRORSYMBOL &&
                  !$this->yy_is_expected_token($yymajor)) {
                // force a syntax error
                $yyact = self::YY_ERROR_ACTION;
            }
            if ($yyact < self::YYNSTATE) {
                $this->yy_shift($yyact, $yymajor, $yytokenvalue);
                $this->yyerrcnt--;
                if ($yyendofinput && $this->yyidx >= 0) {
                    $yymajor = 0;
                } else {
                    $yymajor = self::YYNOCODE;
                }
            } elseif ($yyact < self::YYNSTATE + self::YYNRULE) {
                $this->yy_reduce($yyact - self::YYNSTATE);
            } elseif ($yyact == self::YY_ERROR_ACTION) {
                if (self::$yyTraceFILE) {
                    fprintf(self::$yyTraceFILE, "%sSyntax Error!\n",
                        self::$yyTracePrompt);
                }
                if (self::YYERRORSYMBOL) {
                    if ($this->yyerrcnt < 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $yymx = $this->yystack[$this->yyidx]->major;
                    if ($yymx == self::YYERRORSYMBOL || $yyerrorhit) {
                        if (self::$yyTraceFILE) {
                            fprintf(self::$yyTraceFILE, "%sDiscard input token %s\n",
                                self::$yyTracePrompt, $this->yyTokenName[$yymajor]);
                        }
                        $this->yy_destructor($yymajor, $yytokenvalue);
                        $yymajor = self::YYNOCODE;
                    } else {
                        while ($this->yyidx >= 0 &&
                                 $yymx != self::YYERRORSYMBOL &&
        ($yyact = $this->yy_find_shift_action(self::YYERRORSYMBOL)) >= self::YYNSTATE
                              ){
                            $this->yy_pop_parser_stack();
                        }
                        if ($this->yyidx < 0 || $yymajor==0) {
                            $this->yy_destructor($yymajor, $yytokenvalue);
                            $this->yy_parse_failed();
                            $yymajor = self::YYNOCODE;
                        } elseif ($yymx != self::YYERRORSYMBOL) {
                            $u2 = 0;
                            $this->yy_shift($yyact, self::YYERRORSYMBOL, $u2);
                        }
                    }
                    $this->yyerrcnt = 3;
                    $yyerrorhit = 1;
                } else {
                    if ($this->yyerrcnt <= 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $this->yyerrcnt = 3;
                    $this->yy_destructor($yymajor, $yytokenvalue);
                    if ($yyendofinput) {
                        $this->yy_parse_failed();
                    }
                    $yymajor = self::YYNOCODE;
                }
            } else {
                $this->yy_accept();
                $yymajor = self::YYNOCODE;
            }
        } while ($yymajor != self::YYNOCODE && $this->yyidx >= 0);
    }
}
