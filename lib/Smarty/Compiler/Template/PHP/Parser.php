<?php
/**
 * Smarty Internal Plugin Template_parser
 *
 * This is the template parser.
 * It is generated from the internal.template_parser.y file
 * @package Smarty
 * @subpackage Compiler
 * @author Uwe Tews
 */
class TP_yyToken implements ArrayAccess
{
    public $string = '';
    public $metadata = array();

    public function __construct($s, $m = array())
    {
        if ($s instanceof TP_yyToken) {
            $this->string = $s->string;
            $this->metadata = $s->metadata;
        } else {
            $this->string = (string)$s;
            if ($m instanceof TP_yyToken) {
                $this->metadata = $m->metadata;
            } elseif (is_array($m)) {
                $this->metadata = $m;
            }
        }
    }

    public function __toString()
    {
        return $this->_string;
    }

    public function offsetExists($offset)
    {
        return isset($this->metadata[$offset]);
    }

    public function offsetGet($offset)
    {
        return $this->metadata[$offset];
    }

    public function offsetSet($offset, $value)
    {
        if ($offset === null) {
            if (isset($value[0])) {
                $x = ($value instanceof TP_yyToken) ?
                    $value->metadata : $value;
                $this->metadata = array_merge($this->metadata, $x);

                return;
            }
            $offset = count($this->metadata);
        }
        if ($value === null) {
            return;
        }
        if ($value instanceof TP_yyToken) {
            if ($value->metadata) {
                $this->metadata[$offset] = $value->metadata;
            }
        } elseif ($value) {
            $this->metadata[$offset] = $value;
        }
    }

    public function offsetUnset($offset)
    {
        unset($this->metadata[$offset]);
    }
}

class TP_yyStackEntry
{
    public $stateno; /* The state-number */
    public $major; /* The major token value.  This is the code
                     ** number for the token at this stack level */
    public $minor; /* The user-supplied minor token value.  This
                     ** is the value of the token  */
}

;


#line 13 "Smarty_Compiler_Template_Php_Parser.y"
class Smarty_Compiler_Template_PHP_Parser extends Smarty_Exception_Magic #line 80 "Smarty_Compiler_Template_Php_Parser.php"
{
#line 15 "Smarty_Compiler_Template_Php_Parser.y"

    const Err1 = "Security error: Call to private object member not allowed";
    const Err2 = "Security error: Call to dynamic object member not allowed";
    const Err3 = "PHP in template not allowed. Use SmartyBC to enable it";
    // states whether the parse was successful or not
    public $successful = true;
    public $retvalue = 0;
    public $lex = null;
    public $compiler = null;
    public $prefix_number = 0;
    public $block_nesting_level = 0;
    private $internalError = false;
    private $strip = false;
    private $text_is_php = false;
    private $is_xml = false;
    private $db_quote_code_buffer = '';
    private $asp_tags = null;
    private $php_handling = null;
    private $security = null;
    private $opMap = array('and' => '&&', 'or' => '||', 'eq' => '==', 'neq' => '!=', 'ne' => '!=', 'gt' => '>',
        'lt' => '<', 'ge' => '>=', 'gte' => '>=', 'le' => '<=', 'lte' => '<=', 'mod' => '%',
        'not' => '!');

    function __construct($lex, $compiler)
    {
        $this->lex = $lex;
        $this->lex->parser_class = get_class($this);
        $this->compiler = $compiler;
        $this->compiler->prefix_code = array();
        if ($this->security = isset($this->compiler->context->smarty->security_policy)) {
            $this->php_handling = $this->compiler->context->smarty->security_policy->php_handling;
        } else {
            $this->php_handling = $this->compiler->context->smarty->php_handling;
        }
        $this->asp_tags = (ini_get('asp_tags') != '0');
    }

#line 119 "Smarty_Compiler_Template_Php_Parser.php"

    const TP_VERT = 1;
    const TP_COLON = 2;
    const TP_TEMPLATEINIT = 3;
    const TP_RDEL = 4;
    const TP_COMMENT = 5;
    const TP_PHPSTARTTAG = 6;
    const TP_PHPENDTAG = 7;
    const TP_ASPSTARTTAG = 8;
    const TP_ASPENDTAG = 9;
    const TP_FAKEPHPSTARTTAG = 10;
    const TP_XMLTAG = 11;
    const TP_TEXT = 12;
    const TP_STRIPON = 13;
    const TP_STRIPOFF = 14;
    const TP_LITERALSTART = 15;
    const TP_LITERALEND = 16;
    const TP_LITERAL = 17;
    const TP_LDEL = 18;
    const TP_EQUAL = 19;
    const TP_ID = 20;
    const TP_PTR = 21;
    const TP_LDELIF = 22;
    const TP_LDELFOR = 23;
    const TP_SEMICOLON = 24;
    const TP_IDINCDEC = 25;
    const TP_TO = 26;
    const TP_STEP = 27;
    const TP_LDELFOREACH = 28;
    const TP_SPACE = 29;
    const TP_AS = 30;
    const TP_APTR = 31;
    const TP_LDELSETFILTER = 32;
    const TP_LDELSLASH = 33;
    const TP_ATTR = 34;
    const TP_COMMA = 35;
    const TP_OPENP = 36;
    const TP_CLOSEP = 37;
    const TP_DOLLAR = 38;
    const TP_MATH = 39;
    const TP_UNIMATH = 40;
    const TP_ANDSYM = 41;
    const TP_IFCOND = 42;
    const TP_ISIN = 43;
    const TP_LOP = 44;
    const TP_ISDIVBY = 45;
    const TP_ISNOTDIVBY = 46;
    const TP_ISEVEN = 47;
    const TP_ISNOTEVEN = 48;
    const TP_ISEVENBY = 49;
    const TP_ISNOTEVENBY = 50;
    const TP_ISODD = 51;
    const TP_ISNOTODD = 52;
    const TP_ISODDBY = 53;
    const TP_ISNOTODDBY = 54;
    const TP_INSTANCEOF = 55;
    const TP_NAMESPACE = 56;
    const TP_QMARK = 57;
    const TP_NOT = 58;
    const TP_TYPECAST = 59;
    const TP_NUMBER = 60;
    const TP_SINGLEQUOTESTRING = 61;
    const TP_AT = 62;
    const TP_HATCH = 63;
    const TP_DOT = 64;
    const TP_OPENB = 65;
    const TP_CLOSEB = 66;
    const TP_DOUBLECOLON = 67;
    const TP_QUOTE = 68;
    const TP_BACKTICK = 69;
    const TP_DOLLARID = 70;
    const TP_DQTAG = 71;
    const YY_NO_ACTION = 497;
    const YY_ACCEPT_ACTION = 496;
    const YY_ERROR_ACTION = 495;

    const YY_SZ_ACTTAB = 1789;
    static public $yy_action = array(
        /*     0 */
        25, 150, 134, 159, 6, 58, 210, 239, 205, 201,
        /*    10 */
        106, 190, 268, 233, 211, 213, 202, 33, 12, 121,
        /*    20 */
        117, 5, 39, 299, 182, 129, 19, 142, 100, 170,
        /*    30 */
        256, 249, 229, 242, 13, 309, 268, 188, 161, 29,
        /*    40 */
        43, 44, 253, 228, 202, 107, 110, 1, 310, 209,
        /*    50 */
        94, 292, 102, 186, 42, 41, 45, 26, 40, 22,
        /*    60 */
        21, 20, 306, 313, 23, 24, 314, 315, 27, 18,
        /*    70 */
        34, 202, 13, 168, 300, 151, 272, 29, 445, 179,
        /*    80 */
        445, 202, 42, 41, 45, 26, 40, 22, 21, 20,
        /*    90 */
        306, 313, 23, 24, 314, 315, 27, 18, 202, 186,
        /*   100 */
        296, 300, 202, 186, 496, 59, 250, 227, 247, 42,
        /*   110 */
        41, 45, 26, 40, 22, 21, 20, 306, 313, 23,
        /*   120 */
        24, 314, 315, 27, 18, 302, 13, 102, 171, 283,
        /*   130 */
        172, 29, 290, 10, 285, 93, 42, 41, 45, 26,
        /*   140 */
        40, 22, 21, 20, 306, 313, 23, 24, 314, 315,
        /*   150 */
        27, 18, 272, 37, 186, 25, 46, 156, 5, 6,
        /*   160 */
        58, 19, 239, 267, 445, 106, 445, 225, 233, 211,
        /*   170 */
        213, 202, 68, 12, 105, 117, 204, 39, 118, 182,
        /*   180 */
        115, 116, 2, 243, 5, 256, 249, 229, 242, 102,
        /*   190 */
        309, 116, 140, 161, 170, 43, 44, 253, 228, 13,
        /*   200 */
        107, 268, 1, 295, 29, 94, 202, 92, 289, 10,
        /*   210 */
        285, 93, 25, 173, 156, 102, 6, 58, 186, 239,
        /*   220 */
        176, 283, 106, 56, 64, 233, 211, 213, 241, 51,
        /*   230 */
        31, 105, 104, 101, 39, 178, 182, 115, 113, 152,
        /*   240 */
        243, 170, 256, 249, 229, 242, 5, 309, 268, 19,
        /*   250 */
        161, 199, 43, 44, 253, 228, 116, 107, 305, 1,
        /*   260 */
        46, 231, 94, 190, 260, 186, 95, 9, 192, 25,
        /*   270 */
        210, 131, 204, 6, 58, 190, 239, 102, 19, 106,
        /*   280 */
        133, 297, 233, 211, 213, 202, 83, 12, 121, 117,
        /*   290 */
        13, 39, 175, 182, 115, 29, 154, 243, 60, 256,
        /*   300 */
        249, 229, 242, 224, 309, 268, 96, 161, 145, 43,
        /*   310 */
        44, 253, 228, 13, 107, 170, 1, 268, 29, 94,
        /*   320 */
        202, 202, 186, 42, 41, 45, 26, 40, 22, 21,
        /*   330 */
        20, 306, 313, 23, 24, 314, 315, 27, 18, 186,
        /*   340 */
        223, 32, 25, 301, 48, 162, 6, 58, 13, 239,
        /*   350 */
        206, 17, 106, 29, 268, 5, 211, 213, 202, 233,
        /*   360 */
        12, 298, 117, 72, 39, 121, 445, 210, 445, 265,
        /*   370 */
        182, 115, 190, 296, 243, 46, 256, 249, 229, 242,
        /*   380 */
        161, 309, 43, 44, 253, 228, 102, 107, 47, 1,
        /*   390 */
        174, 283, 94, 95, 9, 13, 163, 180, 170, 25,
        /*   400 */
        29, 137, 146, 6, 58, 268, 239, 215, 32, 106,
        /*   410 */
        235, 268, 233, 211, 213, 102, 89, 12, 121, 117,
        /*   420 */
        30, 39, 186, 182, 115, 116, 166, 243, 170, 256,
        /*   430 */
        249, 229, 242, 4, 309, 268, 445, 161, 445, 43,
        /*   440 */
        44, 253, 228, 445, 107, 445, 1, 56, 32, 94,
        /*   450 */
        311, 3, 186, 143, 19, 170, 25, 32, 156, 232,
        /*   460 */
        6, 58, 268, 239, 102, 307, 106, 312, 234, 233,
        /*   470 */
        211, 213, 7, 88, 8, 121, 117, 158, 39, 186,
        /*   480 */
        182, 115, 274, 155, 243, 102, 256, 249, 229, 242,
        /*   490 */
        221, 309, 268, 189, 161, 147, 43, 44, 253, 228,
        /*   500 */
        153, 107, 245, 1, 268, 202, 94, 132, 271, 188,
        /*   510 */
        251, 227, 247, 25, 217, 136, 97, 6, 58, 294,
        /*   520 */
        239, 188, 65, 106, 116, 219, 233, 211, 213, 114,
        /*   530 */
        81, 12, 121, 117, 207, 39, 237, 182, 115, 202,
        /*   540 */
        47, 243, 139, 256, 249, 229, 242, 19, 309, 266,
        /*   550 */
        280, 161, 255, 43, 44, 253, 228, 160, 107, 36,
        /*   560 */
        1, 56, 19, 94, 138, 19, 268, 135, 7, 241,
        /*   570 */
        25, 28, 156, 148, 6, 58, 29, 239, 214, 108,
        /*   580 */
        106, 212, 268, 233, 211, 213, 190, 87, 12, 121,
        /*   590 */
        112, 19, 39, 194, 182, 115, 226, 184, 243, 293,
        /*   600 */
        256, 249, 229, 242, 15, 309, 56, 222, 161, 167,
        /*   610 */
        43, 44, 253, 228, 187, 107, 288, 1, 268, 244,
        /*   620 */
        94, 186, 35, 126, 258, 203, 36, 25, 193, 157,
        /*   630 */
        109, 6, 58, 38, 239, 279, 11, 106, 63, 191,
        /*   640 */
        233, 211, 213, 103, 55, 31, 111, 104, 257, 39,
        /*   650 */
        169, 182, 115, 144, 165, 243, 149, 256, 249, 229,
        /*   660 */
        242, 284, 309, 120, 308, 164, 304, 43, 44, 253,
        /*   670 */
        228, 202, 107, 57, 1, 177, 252, 94, 246, 254,
        /*   680 */
        262, 263, 264, 261, 230, 238, 236, 303, 185, 302,
        /*   690 */
        281, 25, 286, 218, 183, 6, 58, 202, 259, 248,
        /*   700 */
        2, 106, 61, 292, 16, 211, 213, 292, 240, 42,
        /*   710 */
        41, 45, 26, 40, 22, 21, 20, 306, 313, 23,
        /*   720 */
        24, 314, 315, 27, 18, 202, 181, 292, 292, 292,
        /*   730 */
        292, 292, 292, 292, 292, 42, 41, 45, 26, 40,
        /*   740 */
        22, 21, 20, 306, 313, 23, 24, 314, 315, 27,
        /*   750 */
        18, 202, 292, 292, 292, 292, 292, 292, 292, 292,
        /*   760 */
        292, 317, 292, 42, 41, 45, 26, 40, 22, 21,
        /*   770 */
        20, 306, 313, 23, 24, 314, 315, 27, 18, 292,
        /*   780 */
        292, 292, 292, 292, 292, 292, 292, 292, 292, 42,
        /*   790 */
        41, 45, 26, 40, 22, 21, 20, 306, 313, 23,
        /*   800 */
        24, 314, 315, 27, 18, 202, 292, 292, 292, 412,
        /*   810 */
        292, 292, 273, 270, 291, 287, 269, 292, 292, 282,
        /*   820 */
        292, 185, 316, 278, 292, 292, 292, 292, 292, 412,
        /*   830 */
        292, 412, 412, 292, 412, 412, 412, 292, 292, 412,
        /*   840 */
        412, 5, 412, 42, 41, 45, 26, 40, 22, 21,
        /*   850 */
        20, 306, 313, 23, 24, 314, 315, 27, 18, 202,
        /*   860 */
        412, 292, 292, 292, 292, 292, 292, 292, 292, 233,
        /*   870 */
        275, 412, 102, 82, 412, 121, 292, 292, 292, 292,
        /*   880 */
        182, 115, 292, 292, 243, 292, 256, 249, 229, 242,
        /*   890 */
        292, 309, 292, 292, 292, 208, 292, 42, 41, 45,
        /*   900 */
        26, 40, 22, 21, 20, 306, 313, 23, 24, 314,
        /*   910 */
        315, 27, 18, 202, 292, 292, 292, 14, 292, 292,
        /*   920 */
        292, 6, 58, 292, 292, 292, 292, 106, 292, 292,
        /*   930 */
        292, 211, 213, 292, 292, 42, 41, 45, 26, 40,
        /*   940 */
        22, 21, 20, 306, 313, 23, 24, 314, 315, 27,
        /*   950 */
        18, 42, 41, 45, 26, 40, 22, 21, 20, 306,
        /*   960 */
        313, 23, 24, 314, 315, 27, 18, 292, 292, 292,
        /*   970 */
        292, 292, 292, 292, 233, 292, 292, 292, 80, 292,
        /*   980 */
        121, 292, 292, 292, 292, 182, 98, 292, 141, 243,
        /*   990 */
        62, 256, 249, 229, 242, 292, 309, 268, 292, 292,
        /*  1000 */
        292, 292, 292, 292, 248, 292, 292, 197, 276, 292,
        /*  1010 */
        292, 292, 233, 292, 186, 292, 77, 292, 121, 292,
        /*  1020 */
        292, 292, 292, 182, 115, 292, 292, 243, 292, 256,
        /*  1030 */
        249, 229, 242, 233, 309, 292, 292, 77, 292, 121,
        /*  1040 */
        292, 292, 198, 292, 182, 115, 292, 292, 243, 292,
        /*  1050 */
        256, 249, 229, 242, 292, 309, 292, 292, 292, 292,
        /*  1060 */
        292, 292, 233, 200, 292, 292, 77, 292, 121, 292,
        /*  1070 */
        292, 292, 292, 182, 115, 292, 292, 243, 292, 256,
        /*  1080 */
        249, 229, 242, 292, 309, 233, 292, 292, 292, 80,
        /*  1090 */
        292, 121, 195, 292, 292, 292, 182, 98, 292, 292,
        /*  1100 */
        243, 292, 256, 249, 229, 242, 233, 309, 292, 292,
        /*  1110 */
        77, 292, 121, 292, 292, 292, 292, 182, 115, 277,
        /*  1120 */
        292, 243, 292, 256, 249, 229, 242, 233, 309, 292,
        /*  1130 */
        292, 69, 292, 121, 292, 292, 196, 292, 182, 115,
        /*  1140 */
        292, 292, 243, 292, 220, 249, 229, 242, 292, 309,
        /*  1150 */
        233, 292, 292, 292, 54, 292, 121, 292, 292, 292,
        /*  1160 */
        292, 182, 115, 292, 292, 243, 292, 256, 249, 229,
        /*  1170 */
        242, 292, 309, 233, 292, 292, 292, 84, 292, 121,
        /*  1180 */
        292, 292, 292, 292, 182, 115, 292, 292, 243, 292,
        /*  1190 */
        256, 249, 229, 242, 233, 309, 292, 292, 67, 292,
        /*  1200 */
        121, 292, 292, 292, 292, 182, 115, 292, 292, 243,
        /*  1210 */
        292, 256, 249, 229, 242, 233, 309, 292, 292, 74,
        /*  1220 */
        292, 121, 292, 292, 292, 292, 182, 115, 292, 292,
        /*  1230 */
        243, 292, 256, 249, 229, 242, 292, 309, 233, 292,
        /*  1240 */
        292, 292, 49, 292, 111, 292, 292, 292, 292, 182,
        /*  1250 */
        115, 292, 292, 243, 292, 216, 249, 229, 242, 292,
        /*  1260 */
        309, 233, 292, 292, 292, 71, 292, 121, 292, 292,
        /*  1270 */
        292, 292, 182, 115, 292, 292, 243, 292, 256, 249,
        /*  1280 */
        229, 242, 233, 309, 292, 292, 53, 292, 121, 292,
        /*  1290 */
        292, 292, 292, 182, 115, 292, 292, 243, 292, 256,
        /*  1300 */
        249, 229, 242, 233, 309, 292, 292, 86, 292, 121,
        /*  1310 */
        292, 292, 292, 292, 182, 115, 292, 292, 243, 292,
        /*  1320 */
        256, 249, 229, 242, 292, 309, 233, 292, 292, 292,
        /*  1330 */
        68, 292, 121, 292, 292, 292, 292, 182, 115, 292,
        /*  1340 */
        292, 243, 292, 256, 249, 229, 242, 292, 309, 233,
        /*  1350 */
        292, 292, 292, 75, 292, 121, 292, 292, 292, 292,
        /*  1360 */
        182, 115, 292, 292, 243, 292, 256, 249, 229, 242,
        /*  1370 */
        233, 309, 292, 292, 66, 292, 121, 292, 292, 292,
        /*  1380 */
        292, 182, 115, 292, 292, 243, 292, 256, 249, 229,
        /*  1390 */
        242, 233, 309, 292, 292, 91, 292, 121, 292, 292,
        /*  1400 */
        292, 292, 182, 115, 292, 292, 243, 292, 256, 249,
        /*  1410 */
        229, 242, 292, 309, 233, 292, 292, 292, 76, 292,
        /*  1420 */
        121, 292, 292, 292, 292, 182, 115, 292, 292, 243,
        /*  1430 */
        292, 256, 249, 229, 242, 292, 309, 233, 292, 292,
        /*  1440 */
        292, 90, 292, 121, 292, 292, 292, 292, 182, 115,
        /*  1450 */
        292, 292, 243, 292, 256, 249, 229, 242, 233, 309,
        /*  1460 */
        292, 292, 52, 292, 121, 292, 292, 292, 292, 182,
        /*  1470 */
        115, 292, 292, 243, 292, 256, 249, 229, 242, 233,
        /*  1480 */
        309, 292, 292, 70, 292, 121, 292, 292, 292, 292,
        /*  1490 */
        182, 115, 292, 292, 243, 292, 256, 249, 229, 242,
        /*  1500 */
        292, 309, 233, 292, 292, 292, 79, 292, 121, 292,
        /*  1510 */
        292, 292, 292, 182, 115, 292, 292, 243, 292, 256,
        /*  1520 */
        249, 229, 242, 292, 309, 233, 292, 292, 292, 78,
        /*  1530 */
        292, 121, 292, 292, 292, 292, 182, 115, 292, 292,
        /*  1540 */
        243, 292, 256, 249, 229, 242, 233, 309, 292, 292,
        /*  1550 */
        73, 292, 121, 292, 292, 292, 292, 182, 99, 292,
        /*  1560 */
        292, 243, 292, 256, 249, 229, 242, 233, 309, 292,
        /*  1570 */
        292, 50, 292, 121, 292, 292, 292, 292, 182, 115,
        /*  1580 */
        292, 292, 243, 292, 256, 249, 229, 242, 292, 309,
        /*  1590 */
        233, 292, 292, 292, 85, 292, 121, 292, 292, 292,
        /*  1600 */
        292, 182, 115, 292, 292, 243, 292, 256, 249, 229,
        /*  1610 */
        242, 292, 309, 233, 292, 292, 292, 292, 292, 121,
        /*  1620 */
        292, 292, 292, 292, 182, 125, 292, 292, 292, 292,
        /*  1630 */
        256, 249, 229, 242, 233, 309, 292, 292, 292, 292,
        /*  1640 */
        121, 292, 292, 292, 292, 182, 128, 292, 292, 292,
        /*  1650 */
        292, 256, 249, 229, 242, 233, 309, 292, 292, 292,
        /*  1660 */
        292, 121, 292, 292, 292, 292, 182, 119, 292, 292,
        /*  1670 */
        292, 292, 256, 249, 229, 242, 292, 309, 233, 292,
        /*  1680 */
        292, 292, 292, 292, 121, 292, 292, 292, 292, 182,
        /*  1690 */
        123, 292, 292, 292, 292, 256, 249, 229, 242, 292,
        /*  1700 */
        309, 233, 292, 292, 292, 292, 292, 121, 292, 292,
        /*  1710 */
        292, 292, 182, 122, 292, 292, 292, 292, 256, 249,
        /*  1720 */
        229, 242, 233, 309, 292, 292, 292, 292, 121, 292,
        /*  1730 */
        292, 292, 292, 182, 127, 292, 292, 292, 292, 256,
        /*  1740 */
        249, 229, 242, 233, 309, 292, 292, 292, 292, 121,
        /*  1750 */
        292, 292, 292, 292, 182, 130, 292, 292, 292, 292,
        /*  1760 */
        256, 249, 229, 242, 292, 309, 233, 292, 292, 292,
        /*  1770 */
        292, 292, 121, 292, 292, 292, 292, 182, 124, 292,
        /*  1780 */
        292, 292, 292, 256, 249, 229, 242, 292, 309,
    );
    static public $yy_lookahead = array(
        /*     0 */
        18, 99, 20, 81, 22, 23, 82, 25, 84, 85,
        /*    10 */
        28, 87, 90, 76, 32, 33, 1, 2, 36, 82,
        /*    20 */
        38, 36, 40, 16, 87, 88, 18, 81, 20, 83,
        /*    30 */
        93, 94, 95, 96, 29, 98, 90, 107, 56, 34,
        /*    40 */
        58, 59, 60, 61, 1, 63, 38, 65, 66, 64,
        /*    50 */
        68, 66, 67, 107, 39, 40, 41, 42, 43, 44,
        /*    60 */
        45, 46, 47, 48, 49, 50, 51, 52, 53, 54,
        /*    70 */
        27, 1, 29, 89, 4, 83, 12, 34, 18, 83,
        /*    80 */
        20, 1, 39, 40, 41, 42, 43, 44, 45, 46,
        /*    90 */
        47, 48, 49, 50, 51, 52, 53, 54, 1, 107,
        /*   100 */
        108, 4, 1, 107, 73, 74, 75, 76, 77, 39,
        /*   110 */
        40, 41, 42, 43, 44, 45, 46, 47, 48, 49,
        /*   120 */
        50, 51, 52, 53, 54, 100, 29, 67, 103, 104,
        /*   130 */
        83, 34, 68, 69, 70, 71, 39, 40, 41, 42,
        /*   140 */
        43, 44, 45, 46, 47, 48, 49, 50, 51, 52,
        /*   150 */
        53, 54, 12, 31, 107, 18, 55, 20, 36, 22,
        /*   160 */
        23, 18, 25, 20, 18, 28, 20, 19, 76, 32,
        /*   170 */
        33, 1, 80, 36, 82, 38, 84, 40, 25, 87,
        /*   180 */
        88, 38, 36, 91, 36, 93, 94, 95, 96, 67,
        /*   190 */
        98, 38, 81, 56, 83, 58, 59, 60, 61, 29,
        /*   200 */
        63, 90, 65, 60, 34, 68, 1, 78, 68, 69,
        /*   210 */
        70, 71, 18, 24, 20, 67, 22, 23, 107, 25,
        /*   220 */
        103, 104, 28, 21, 35, 76, 32, 33, 92, 80,
        /*   230 */
        36, 82, 38, 84, 40, 30, 87, 88, 102, 81,
        /*   240 */
        91, 83, 93, 94, 95, 96, 36, 98, 90, 18,
        /*   250 */
        56, 20, 58, 59, 60, 61, 38, 63, 82, 65,
        /*   260 */
        55, 20, 68, 87, 29, 107, 64, 65, 92, 18,
        /*   270 */
        82, 20, 84, 22, 23, 87, 25, 67, 18, 28,
        /*   280 */
        20, 105, 76, 32, 33, 1, 80, 36, 82, 38,
        /*   290 */
        29, 40, 31, 87, 88, 34, 81, 91, 83, 93,
        /*   300 */
        94, 95, 96, 62, 98, 90, 87, 56, 81, 58,
        /*   310 */
        59, 60, 61, 29, 63, 83, 65, 90, 34, 68,
        /*   320 */
        1, 1, 107, 39, 40, 41, 42, 43, 44, 45,
        /*   330 */
        46, 47, 48, 49, 50, 51, 52, 53, 54, 107,
        /*   340 */
        21, 35, 18, 37, 20, 81, 22, 23, 29, 25,
        /*   350 */
        2, 31, 28, 34, 90, 36, 32, 33, 1, 76,
        /*   360 */
        36, 4, 38, 80, 40, 82, 18, 82, 20, 84,
        /*   370 */
        87, 88, 87, 108, 91, 55, 93, 94, 95, 96,
        /*   380 */
        56, 98, 58, 59, 60, 61, 67, 63, 2, 65,
        /*   390 */
        103, 104, 68, 64, 65, 29, 81, 31, 83, 18,
        /*   400 */
        34, 20, 81, 22, 23, 90, 25, 20, 35, 28,
        /*   410 */
        37, 90, 76, 32, 33, 67, 80, 36, 82, 38,
        /*   420 */
        2, 40, 107, 87, 88, 38, 81, 91, 83, 93,
        /*   430 */
        94, 95, 96, 36, 98, 90, 18, 56, 20, 58,
        /*   440 */
        59, 60, 61, 18, 63, 20, 65, 21, 35, 68,
        /*   450 */
        37, 35, 107, 81, 18, 83, 18, 35, 20, 37,
        /*   460 */
        22, 23, 90, 25, 67, 77, 28, 79, 104, 76,
        /*   470 */
        32, 33, 36, 80, 36, 82, 38, 99, 40, 107,
        /*   480 */
        87, 88, 66, 81, 91, 67, 93, 94, 95, 96,
        /*   490 */
        62, 98, 90, 92, 56, 81, 58, 59, 60, 61,
        /*   500 */
        99, 63, 4, 65, 90, 1, 68, 111, 112, 107,
        /*   510 */
        75, 76, 77, 18, 87, 20, 87, 22, 23, 92,
        /*   520 */
        25, 107, 36, 28, 38, 21, 76, 32, 33, 87,
        /*   530 */
        80, 36, 82, 38, 76, 40, 20, 87, 88, 1,
        /*   540 */
        2, 91, 86, 93, 94, 95, 96, 18, 98, 20,
        /*   550 */
        92, 56, 37, 58, 59, 60, 61, 81, 63, 19,
        /*   560 */
        65, 21, 18, 68, 20, 18, 90, 20, 36, 92,
        /*   570 */
        18, 29, 20, 81, 22, 23, 34, 25, 20, 102,
        /*   580 */
        28, 82, 90, 76, 32, 33, 87, 80, 36, 82,
        /*   590 */
        38, 18, 40, 20, 87, 88, 38, 83, 91, 66,
        /*   600 */
        93, 94, 95, 96, 19, 98, 21, 62, 56, 81,
        /*   610 */
        58, 59, 60, 61, 63, 63, 4, 65, 90, 101,
        /*   620 */
        68, 107, 26, 105, 20, 20, 19, 18, 63, 20,
        /*   630 */
        20, 22, 23, 57, 25, 4, 19, 28, 89, 20,
        /*   640 */
        76, 32, 33, 87, 80, 36, 82, 38, 20, 40,
        /*   650 */
        20, 87, 88, 99, 99, 91, 99, 93, 94, 95,
        /*   660 */
        96, 69, 98, 20, 20, 56, 20, 58, 59, 60,
        /*   670 */
        61, 1, 63, 20, 65, 89, 3, 68, 5, 6,
        /*   680 */
        7, 8, 9, 10, 11, 12, 13, 14, 15, 100,
        /*   690 */
        90, 18, 112, 87, 24, 22, 23, 1, 97, 97,
        /*   700 */
        36, 28, 99, 113, 86, 32, 33, 113, 97, 39,
        /*   710 */
        40, 41, 42, 43, 44, 45, 46, 47, 48, 49,
        /*   720 */
        50, 51, 52, 53, 54, 1, 30, 113, 113, 113,
        /*   730 */
        113, 113, 113, 113, 113, 39, 40, 41, 42, 43,
        /*   740 */
        44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        /*   750 */
        54, 1, 113, 113, 113, 113, 113, 113, 113, 113,
        /*   760 */
        113, 37, 113, 39, 40, 41, 42, 43, 44, 45,
        /*   770 */
        46, 47, 48, 49, 50, 51, 52, 53, 54, 113,
        /*   780 */
        113, 113, 113, 113, 113, 113, 113, 113, 113, 39,
        /*   790 */
        40, 41, 42, 43, 44, 45, 46, 47, 48, 49,
        /*   800 */
        50, 51, 52, 53, 54, 1, 113, 113, 113, 4,
        /*   810 */
        113, 113, 6, 7, 8, 9, 10, 113, 113, 69,
        /*   820 */
        113, 15, 16, 17, 113, 113, 113, 113, 113, 24,
        /*   830 */
        113, 26, 27, 113, 29, 30, 31, 113, 113, 34,
        /*   840 */
        35, 36, 37, 39, 40, 41, 42, 43, 44, 45,
        /*   850 */
        46, 47, 48, 49, 50, 51, 52, 53, 54, 1,
        /*   860 */
        55, 113, 113, 113, 113, 113, 113, 113, 113, 76,
        /*   870 */
        66, 66, 67, 80, 69, 82, 113, 113, 113, 113,
        /*   880 */
        87, 88, 113, 113, 91, 113, 93, 94, 95, 96,
        /*   890 */
        113, 98, 113, 113, 113, 37, 113, 39, 40, 41,
        /*   900 */
        42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
        /*   910 */
        52, 53, 54, 1, 113, 113, 113, 18, 113, 113,
        /*   920 */
        113, 22, 23, 113, 113, 113, 113, 28, 113, 113,
        /*   930 */
        113, 32, 33, 113, 113, 39, 40, 41, 42, 43,
        /*   940 */
        44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        /*   950 */
        54, 39, 40, 41, 42, 43, 44, 45, 46, 47,
        /*   960 */
        48, 49, 50, 51, 52, 53, 54, 113, 113, 113,
        /*   970 */
        113, 113, 113, 113, 76, 113, 113, 113, 80, 113,
        /*   980 */
        82, 113, 113, 113, 113, 87, 88, 113, 81, 91,
        /*   990 */
        83, 93, 94, 95, 96, 113, 98, 90, 113, 113,
        /*  1000 */
        113, 113, 113, 113, 97, 113, 113, 109, 110, 113,
        /*  1010 */
        113, 113, 76, 113, 107, 113, 80, 113, 82, 113,
        /*  1020 */
        113, 113, 113, 87, 88, 113, 113, 91, 113, 93,
        /*  1030 */
        94, 95, 96, 76, 98, 113, 113, 80, 113, 82,
        /*  1040 */
        113, 113, 106, 113, 87, 88, 113, 113, 91, 113,
        /*  1050 */
        93, 94, 95, 96, 113, 98, 113, 113, 113, 113,
        /*  1060 */
        113, 113, 76, 106, 113, 113, 80, 113, 82, 113,
        /*  1070 */
        113, 113, 113, 87, 88, 113, 113, 91, 113, 93,
        /*  1080 */
        94, 95, 96, 113, 98, 76, 113, 113, 113, 80,
        /*  1090 */
        113, 82, 106, 113, 113, 113, 87, 88, 113, 113,
        /*  1100 */
        91, 113, 93, 94, 95, 96, 76, 98, 113, 113,
        /*  1110 */
        80, 113, 82, 113, 113, 113, 113, 87, 88, 110,
        /*  1120 */
        113, 91, 113, 93, 94, 95, 96, 76, 98, 113,
        /*  1130 */
        113, 80, 113, 82, 113, 113, 106, 113, 87, 88,
        /*  1140 */
        113, 113, 91, 113, 93, 94, 95, 96, 113, 98,
        /*  1150 */
        76, 113, 113, 113, 80, 113, 82, 113, 113, 113,
        /*  1160 */
        113, 87, 88, 113, 113, 91, 113, 93, 94, 95,
        /*  1170 */
        96, 113, 98, 76, 113, 113, 113, 80, 113, 82,
        /*  1180 */
        113, 113, 113, 113, 87, 88, 113, 113, 91, 113,
        /*  1190 */
        93, 94, 95, 96, 76, 98, 113, 113, 80, 113,
        /*  1200 */
        82, 113, 113, 113, 113, 87, 88, 113, 113, 91,
        /*  1210 */
        113, 93, 94, 95, 96, 76, 98, 113, 113, 80,
        /*  1220 */
        113, 82, 113, 113, 113, 113, 87, 88, 113, 113,
        /*  1230 */
        91, 113, 93, 94, 95, 96, 113, 98, 76, 113,
        /*  1240 */
        113, 113, 80, 113, 82, 113, 113, 113, 113, 87,
        /*  1250 */
        88, 113, 113, 91, 113, 93, 94, 95, 96, 113,
        /*  1260 */
        98, 76, 113, 113, 113, 80, 113, 82, 113, 113,
        /*  1270 */
        113, 113, 87, 88, 113, 113, 91, 113, 93, 94,
        /*  1280 */
        95, 96, 76, 98, 113, 113, 80, 113, 82, 113,
        /*  1290 */
        113, 113, 113, 87, 88, 113, 113, 91, 113, 93,
        /*  1300 */
        94, 95, 96, 76, 98, 113, 113, 80, 113, 82,
        /*  1310 */
        113, 113, 113, 113, 87, 88, 113, 113, 91, 113,
        /*  1320 */
        93, 94, 95, 96, 113, 98, 76, 113, 113, 113,
        /*  1330 */
        80, 113, 82, 113, 113, 113, 113, 87, 88, 113,
        /*  1340 */
        113, 91, 113, 93, 94, 95, 96, 113, 98, 76,
        /*  1350 */
        113, 113, 113, 80, 113, 82, 113, 113, 113, 113,
        /*  1360 */
        87, 88, 113, 113, 91, 113, 93, 94, 95, 96,
        /*  1370 */
        76, 98, 113, 113, 80, 113, 82, 113, 113, 113,
        /*  1380 */
        113, 87, 88, 113, 113, 91, 113, 93, 94, 95,
        /*  1390 */
        96, 76, 98, 113, 113, 80, 113, 82, 113, 113,
        /*  1400 */
        113, 113, 87, 88, 113, 113, 91, 113, 93, 94,
        /*  1410 */
        95, 96, 113, 98, 76, 113, 113, 113, 80, 113,
        /*  1420 */
        82, 113, 113, 113, 113, 87, 88, 113, 113, 91,
        /*  1430 */
        113, 93, 94, 95, 96, 113, 98, 76, 113, 113,
        /*  1440 */
        113, 80, 113, 82, 113, 113, 113, 113, 87, 88,
        /*  1450 */
        113, 113, 91, 113, 93, 94, 95, 96, 76, 98,
        /*  1460 */
        113, 113, 80, 113, 82, 113, 113, 113, 113, 87,
        /*  1470 */
        88, 113, 113, 91, 113, 93, 94, 95, 96, 76,
        /*  1480 */
        98, 113, 113, 80, 113, 82, 113, 113, 113, 113,
        /*  1490 */
        87, 88, 113, 113, 91, 113, 93, 94, 95, 96,
        /*  1500 */
        113, 98, 76, 113, 113, 113, 80, 113, 82, 113,
        /*  1510 */
        113, 113, 113, 87, 88, 113, 113, 91, 113, 93,
        /*  1520 */
        94, 95, 96, 113, 98, 76, 113, 113, 113, 80,
        /*  1530 */
        113, 82, 113, 113, 113, 113, 87, 88, 113, 113,
        /*  1540 */
        91, 113, 93, 94, 95, 96, 76, 98, 113, 113,
        /*  1550 */
        80, 113, 82, 113, 113, 113, 113, 87, 88, 113,
        /*  1560 */
        113, 91, 113, 93, 94, 95, 96, 76, 98, 113,
        /*  1570 */
        113, 80, 113, 82, 113, 113, 113, 113, 87, 88,
        /*  1580 */
        113, 113, 91, 113, 93, 94, 95, 96, 113, 98,
        /*  1590 */
        76, 113, 113, 113, 80, 113, 82, 113, 113, 113,
        /*  1600 */
        113, 87, 88, 113, 113, 91, 113, 93, 94, 95,
        /*  1610 */
        96, 113, 98, 76, 113, 113, 113, 113, 113, 82,
        /*  1620 */
        113, 113, 113, 113, 87, 88, 113, 113, 113, 113,
        /*  1630 */
        93, 94, 95, 96, 76, 98, 113, 113, 113, 113,
        /*  1640 */
        82, 113, 113, 113, 113, 87, 88, 113, 113, 113,
        /*  1650 */
        113, 93, 94, 95, 96, 76, 98, 113, 113, 113,
        /*  1660 */
        113, 82, 113, 113, 113, 113, 87, 88, 113, 113,
        /*  1670 */
        113, 113, 93, 94, 95, 96, 113, 98, 76, 113,
        /*  1680 */
        113, 113, 113, 113, 82, 113, 113, 113, 113, 87,
        /*  1690 */
        88, 113, 113, 113, 113, 93, 94, 95, 96, 113,
        /*  1700 */
        98, 76, 113, 113, 113, 113, 113, 82, 113, 113,
        /*  1710 */
        113, 113, 87, 88, 113, 113, 113, 113, 93, 94,
        /*  1720 */
        95, 96, 76, 98, 113, 113, 113, 113, 82, 113,
        /*  1730 */
        113, 113, 113, 87, 88, 113, 113, 113, 113, 93,
        /*  1740 */
        94, 95, 96, 76, 98, 113, 113, 113, 113, 82,
        /*  1750 */
        113, 113, 113, 113, 87, 88, 113, 113, 113, 113,
        /*  1760 */
        93, 94, 95, 96, 113, 98, 76, 113, 113, 113,
        /*  1770 */
        113, 113, 82, 113, 113, 113, 113, 87, 88, 113,
        /*  1780 */
        113, 113, 113, 93, 94, 95, 96, 113, 98,
    );
    const YY_SHIFT_USE_DFLT = -19;
    const YY_SHIFT_MAX = 227;
    static public $yy_shift_ofst = array(
        /*     0 */
        673, 495, 137, 495, 137, 137, 438, 137, 438, -18,
        /*    10 */
        137, 137, 137, 381, 324, 137, 137, 137, 137, 137,
        /*    20 */
        137, 137, 137, 137, 137, 324, 137, 137, 381, 137,
        /*    30 */
        251, 137, 137, 137, 137, 137, 137, 137, 552, 194,
        /*    40 */
        194, 194, 194, 194, 194, 194, 609, 194, 319, 97,
        /*    50 */
        43, 284, 284, 284, 284, 284, 8, 170, 486, 673,
        /*    60 */
        170, 202, 170, 538, 486, 486, 724, 804, 858, 750,
        /*    70 */
        15, 670, 70, 696, 912, 912, 912, 912, 912, 912,
        /*    80 */
        912, 912, 912, 912, 912, 912, 912, 912, 912, 912,
        /*    90 */
        896, 896, 806, 899, 140, 143, 366, 261, 320, 205,
        /*   100 */
        436, 5, 558, 5, 544, 540, 542, 387, 529, 504,
        /*   110 */
        573, 585, 547, 529, 5, 101, 231, 260, 5, 80,
        /*   120 */
        80, 426, 80, 80, 80, 80, 426, 80, 80, 80,
        /*   130 */
        -19, 805, 64, 348, -15, 418, 122, 148, 60, 153,
        /*   140 */
        5, 5, 5, 5, 329, 5, 5, 5, 5, 329,
        /*   150 */
        329, 357, 5, 329, 5, 5, 210, 210, 329, 5,
        /*   160 */
        5, 397, 5, 5, 397, 329, 5, 5, 386, 664,
        /*   170 */
        80, 426, 80, 235, 426, 218, 426, 386, 218, 80,
        /*   180 */
        218, 218, 428, 235, 80, 7, -19, -19, -19, -19,
        /*   190 */
        -19, -19, -19, -19, 146, 306, 413, 416, 422, 425,
        /*   200 */
        373, 189, 241, 533, 515, 596, 604, 631, 576, 605,
        /*   210 */
        607, 619, 565, 610, 532, 551, 612, 545, 617, 643,
        /*   220 */
        592, 644, 646, 653, 516, 628, 630, 498,
    );
    const YY_REDUCE_USE_DFLT = -99;
    const YY_REDUCE_MAX = 193;
    static public $yy_reduce_ofst = array(
        /*     0 */
        31, 898, 1030, 1009, 986, 957, 149, 936, 92, 1118,
        /*    10 */
        1051, 1074, 1250, 1139, 1162, 1206, 1185, 1227, 507, 283,
        /*    20 */
        336, 206, 393, 793, 450, 564, 1097, 1514, 1470, 1338,
        /*    30 */
        1315, 1294, 1273, 1361, 1382, 1491, 1449, 1426, 1403, 1579,
        /*    40 */
        1690, 1646, -63, 1625, 1602, 1558, 1537, 1667, 907, 111,
        /*    50 */
        315, 372, 345, -54, 158, 111, 176, 215, -76, 435,
        /*    60 */
        402, 25, 414, -8, 285, 188, 232, 232, 232, 232,
        /*    70 */
        232, 232, 232, 232, 232, 232, 232, 232, 232, 232,
        /*    80 */
        232, 232, 232, 232, 232, 232, 232, 232, 232, 232,
        /*    90 */
        232, 232, 388, 458, 396, 427, 321, 264, -4, -4,
        /*   100 */
        401, 528, 518, 476, 136, 117, 492, 499, 477, 514,
        /*   110 */
        136, 117, 136, 477, 227, -4, 136, 136, -78, -4,
        /*   120 */
        47, 117, -4, -4, -4, -4, 287, -4, -4, -4,
        /*   130 */
        -4, 602, 580, 601, 602, 601, 602, 602, 601, 606,
        /*   140 */
        600, 600, 600, 600, 589, 600, 600, 600, 600, 589,
        /*   150 */
        589, -70, 600, 589, 600, 600, 602, 602, 589, 600,
        /*   160 */
        600, 611, 600, 600, 611, 589, 600, 600, 265, 603,
        /*   170 */
        -70, 364, -70, 618, 364, 556, 364, 265, 219, -70,
        /*   180 */
        442, 429, 378, 456, -70, 129, -16, -98, 586, 554,
        /*   190 */
        378, 549, 555, 557,
    );
    static public $yyExpectedTokens = array(
        /* 0 */
        array(3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 22, 23, 28, 32, 33,),
        /* 1 */
        array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68,),
        /* 2 */
        array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68,),
        /* 3 */
        array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68,),
        /* 4 */
        array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68,),
        /* 5 */
        array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68,),
        /* 6 */
        array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68,),
        /* 7 */
        array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68,),
        /* 8 */
        array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68,),
        /* 9 */
        array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 66, 68,),
        /* 10 */
        array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68,),
        /* 11 */
        array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68,),
        /* 12 */
        array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68,),
        /* 13 */
        array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68,),
        /* 14 */
        array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68,),
        /* 15 */
        array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68,),
        /* 16 */
        array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68,),
        /* 17 */
        array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68,),
        /* 18 */
        array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68,),
        /* 19 */
        array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68,),
        /* 20 */
        array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68,),
        /* 21 */
        array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68,),
        /* 22 */
        array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68,),
        /* 23 */
        array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68,),
        /* 24 */
        array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68,),
        /* 25 */
        array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68,),
        /* 26 */
        array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68,),
        /* 27 */
        array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68,),
        /* 28 */
        array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68,),
        /* 29 */
        array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68,),
        /* 30 */
        array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68,),
        /* 31 */
        array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68,),
        /* 32 */
        array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68,),
        /* 33 */
        array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68,),
        /* 34 */
        array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68,),
        /* 35 */
        array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68,),
        /* 36 */
        array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68,),
        /* 37 */
        array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68,),
        /* 38 */
        array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68,),
        /* 39 */
        array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68,),
        /* 40 */
        array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68,),
        /* 41 */
        array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68,),
        /* 42 */
        array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68,),
        /* 43 */
        array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68,),
        /* 44 */
        array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68,),
        /* 45 */
        array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68,),
        /* 46 */
        array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68,),
        /* 47 */
        array(18, 20, 22, 23, 25, 28, 32, 33, 36, 38, 40, 56, 58, 59, 60, 61, 63, 65, 68,),
        /* 48 */
        array(1, 21, 29, 34, 36, 67,),
        /* 49 */
        array(1, 4, 29, 34, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54,),
        /* 50 */
        array(1, 27, 29, 34, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54,),
        /* 51 */
        array(1, 29, 34, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54,),
        /* 52 */
        array(1, 29, 34, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54,),
        /* 53 */
        array(1, 29, 34, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54,),
        /* 54 */
        array(1, 29, 34, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54,),
        /* 55 */
        array(1, 29, 34, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54,),
        /* 56 */
        array(18, 20, 38,),
        /* 57 */
        array(1, 29, 34,),
        /* 58 */
        array(36, 38,),
        /* 59 */
        array(3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 22, 23, 28, 32, 33,),
        /* 60 */
        array(1, 29, 34,),
        /* 61 */
        array(21, 64, 65,),
        /* 62 */
        array(1, 29, 34,),
        /* 63 */
        array(1, 2,),
        /* 64 */
        array(36, 38,),
        /* 65 */
        array(36, 38,),
        /* 66 */
        array(1, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54,),
        /* 67 */
        array(1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 66,),
        /* 68 */
        array(1, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54,),
        /* 69 */
        array(1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 69,),
        /* 70 */
        array(1, 2, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54,),
        /* 71 */
        array(1, 24, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54,),
        /* 72 */
        array(1, 4, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54,),
        /* 73 */
        array(1, 30, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54,),
        /* 74 */
        array(1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54,),
        /* 75 */
        array(1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54,),
        /* 76 */
        array(1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54,),
        /* 77 */
        array(1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54,),
        /* 78 */
        array(1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54,),
        /* 79 */
        array(1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54,),
        /* 80 */
        array(1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54,),
        /* 81 */
        array(1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54,),
        /* 82 */
        array(1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54,),
        /* 83 */
        array(1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54,),
        /* 84 */
        array(1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54,),
        /* 85 */
        array(1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54,),
        /* 86 */
        array(1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54,),
        /* 87 */
        array(1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54,),
        /* 88 */
        array(1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54,),
        /* 89 */
        array(1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54,),
        /* 90 */
        array(39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54,),
        /* 91 */
        array(39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54,),
        /* 92 */
        array(6, 7, 8, 9, 10, 15, 16, 17,),
        /* 93 */
        array(18, 22, 23, 28, 32, 33,),
        /* 94 */
        array(12, 68, 69, 70, 71,),
        /* 95 */
        array(18, 20, 38, 60,),
        /* 96 */
        array(29, 31, 34,),
        /* 97 */
        array(29, 31, 34,),
        /* 98 */
        array(1, 31, 55,),
        /* 99 */
        array(1, 30, 55,),
        /* 100 */
        array(18, 36,),
        /* 101 */
        array(29, 34,),
        /* 102 */
        array(20, 38,),
        /* 103 */
        array(29, 34,),
        /* 104 */
        array(18, 20,),
        /* 105 */
        array(19, 21,),
        /* 106 */
        array(29, 34,),
        /* 107 */
        array(20, 38,),
        /* 108 */
        array(18, 20,),
        /* 109 */
        array(1, 21,),
        /* 110 */
        array(18, 20,),
        /* 111 */
        array(19, 21,),
        /* 112 */
        array(18, 20,),
        /* 113 */
        array(18, 20,),
        /* 114 */
        array(29, 34,),
        /* 115 */
        array(1, 55,),
        /* 116 */
        array(18, 20,),
        /* 117 */
        array(18, 20,),
        /* 118 */
        array(29, 34,),
        /* 119 */
        array(1,),
        /* 120 */
        array(1,),
        /* 121 */
        array(21,),
        /* 122 */
        array(1,),
        /* 123 */
        array(1,),
        /* 124 */
        array(1,),
        /* 125 */
        array(1,),
        /* 126 */
        array(21,),
        /* 127 */
        array(1,),
        /* 128 */
        array(1,),
        /* 129 */
        array(1,),
        /* 130 */
        array(),
        /* 131 */
        array(4, 24, 26, 27, 29, 30, 31, 34, 35, 36, 37, 55, 66, 67, 69,),
        /* 132 */
        array(12, 68, 69, 70, 71,),
        /* 133 */
        array(2, 18, 20, 67,),
        /* 134 */
        array(36, 64, 66, 67,),
        /* 135 */
        array(2, 18, 20, 67,),
        /* 136 */
        array(31, 36, 67,),
        /* 137 */
        array(19, 36, 67,),
        /* 138 */
        array(18, 20, 67,),
        /* 139 */
        array(25, 38,),
        /* 140 */
        array(29, 34,),
        /* 141 */
        array(29, 34,),
        /* 142 */
        array(29, 34,),
        /* 143 */
        array(29, 34,),
        /* 144 */
        array(64, 65,),
        /* 145 */
        array(29, 34,),
        /* 146 */
        array(29, 34,),
        /* 147 */
        array(29, 34,),
        /* 148 */
        array(29, 34,),
        /* 149 */
        array(64, 65,),
        /* 150 */
        array(64, 65,),
        /* 151 */
        array(1, 4,),
        /* 152 */
        array(29, 34,),
        /* 153 */
        array(64, 65,),
        /* 154 */
        array(29, 34,),
        /* 155 */
        array(29, 34,),
        /* 156 */
        array(36, 67,),
        /* 157 */
        array(36, 67,),
        /* 158 */
        array(64, 65,),
        /* 159 */
        array(29, 34,),
        /* 160 */
        array(29, 34,),
        /* 161 */
        array(36, 67,),
        /* 162 */
        array(29, 34,),
        /* 163 */
        array(29, 34,),
        /* 164 */
        array(36, 67,),
        /* 165 */
        array(64, 65,),
        /* 166 */
        array(29, 34,),
        /* 167 */
        array(29, 34,),
        /* 168 */
        array(2,),
        /* 169 */
        array(36,),
        /* 170 */
        array(1,),
        /* 171 */
        array(21,),
        /* 172 */
        array(1,),
        /* 173 */
        array(29,),
        /* 174 */
        array(21,),
        /* 175 */
        array(38,),
        /* 176 */
        array(21,),
        /* 177 */
        array(2,),
        /* 178 */
        array(38,),
        /* 179 */
        array(1,),
        /* 180 */
        array(38,),
        /* 181 */
        array(38,),
        /* 182 */
        array(62,),
        /* 183 */
        array(29,),
        /* 184 */
        array(1,),
        /* 185 */
        array(16,),
        /* 186 */
        array(),
        /* 187 */
        array(),
        /* 188 */
        array(),
        /* 189 */
        array(),
        /* 190 */
        array(),
        /* 191 */
        array(),
        /* 192 */
        array(),
        /* 193 */
        array(),
        /* 194 */
        array(18, 20, 36,),
        /* 195 */
        array(35, 37,),
        /* 196 */
        array(35, 37,),
        /* 197 */
        array(35, 66,),
        /* 198 */
        array(35, 37,),
        /* 199 */
        array(18, 20,),
        /* 200 */
        array(35, 37,),
        /* 201 */
        array(24, 35,),
        /* 202 */
        array(20, 62,),
        /* 203 */
        array(66,),
        /* 204 */
        array(37,),
        /* 205 */
        array(26,),
        /* 206 */
        array(20,),
        /* 207 */
        array(4,),
        /* 208 */
        array(57,),
        /* 209 */
        array(20,),
        /* 210 */
        array(19,),
        /* 211 */
        array(20,),
        /* 212 */
        array(63,),
        /* 213 */
        array(20,),
        /* 214 */
        array(36,),
        /* 215 */
        array(63,),
        /* 216 */
        array(4,),
        /* 217 */
        array(62,),
        /* 218 */
        array(19,),
        /* 219 */
        array(20,),
        /* 220 */
        array(69,),
        /* 221 */
        array(20,),
        /* 222 */
        array(20,),
        /* 223 */
        array(20,),
        /* 224 */
        array(20,),
        /* 225 */
        array(20,),
        /* 226 */
        array(20,),
        /* 227 */
        array(4,),
        /* 228 */
        array(),
        /* 229 */
        array(),
        /* 230 */
        array(),
        /* 231 */
        array(),
        /* 232 */
        array(),
        /* 233 */
        array(),
        /* 234 */
        array(),
        /* 235 */
        array(),
        /* 236 */
        array(),
        /* 237 */
        array(),
        /* 238 */
        array(),
        /* 239 */
        array(),
        /* 240 */
        array(),
        /* 241 */
        array(),
        /* 242 */
        array(),
        /* 243 */
        array(),
        /* 244 */
        array(),
        /* 245 */
        array(),
        /* 246 */
        array(),
        /* 247 */
        array(),
        /* 248 */
        array(),
        /* 249 */
        array(),
        /* 250 */
        array(),
        /* 251 */
        array(),
        /* 252 */
        array(),
        /* 253 */
        array(),
        /* 254 */
        array(),
        /* 255 */
        array(),
        /* 256 */
        array(),
        /* 257 */
        array(),
        /* 258 */
        array(),
        /* 259 */
        array(),
        /* 260 */
        array(),
        /* 261 */
        array(),
        /* 262 */
        array(),
        /* 263 */
        array(),
        /* 264 */
        array(),
        /* 265 */
        array(),
        /* 266 */
        array(),
        /* 267 */
        array(),
        /* 268 */
        array(),
        /* 269 */
        array(),
        /* 270 */
        array(),
        /* 271 */
        array(),
        /* 272 */
        array(),
        /* 273 */
        array(),
        /* 274 */
        array(),
        /* 275 */
        array(),
        /* 276 */
        array(),
        /* 277 */
        array(),
        /* 278 */
        array(),
        /* 279 */
        array(),
        /* 280 */
        array(),
        /* 281 */
        array(),
        /* 282 */
        array(),
        /* 283 */
        array(),
        /* 284 */
        array(),
        /* 285 */
        array(),
        /* 286 */
        array(),
        /* 287 */
        array(),
        /* 288 */
        array(),
        /* 289 */
        array(),
        /* 290 */
        array(),
        /* 291 */
        array(),
        /* 292 */
        array(),
        /* 293 */
        array(),
        /* 294 */
        array(),
        /* 295 */
        array(),
        /* 296 */
        array(),
        /* 297 */
        array(),
        /* 298 */
        array(),
        /* 299 */
        array(),
        /* 300 */
        array(),
        /* 301 */
        array(),
        /* 302 */
        array(),
        /* 303 */
        array(),
        /* 304 */
        array(),
        /* 305 */
        array(),
        /* 306 */
        array(),
        /* 307 */
        array(),
        /* 308 */
        array(),
        /* 309 */
        array(),
        /* 310 */
        array(),
        /* 311 */
        array(),
        /* 312 */
        array(),
        /* 313 */
        array(),
        /* 314 */
        array(),
        /* 315 */
        array(),
        /* 316 */
        array(),
        /* 317 */
        array(),
    );
    static public $yy_default = array(
        /*     0 */
        321, 477, 461, 495, 461, 461, 495, 461, 495, 495,
        /*    10 */
        495, 495, 495, 495, 495, 495, 495, 495, 495, 495,
        /*    20 */
        495, 495, 495, 495, 495, 495, 495, 495, 495, 495,
        /*    30 */
        495, 495, 495, 495, 495, 495, 495, 495, 495, 495,
        /*    40 */
        495, 495, 495, 495, 495, 495, 495, 495, 371, 495,
        /*    50 */
        371, 371, 371, 371, 371, 371, 495, 371, 495, 318,
        /*    60 */
        371, 472, 371, 363, 495, 495, 495, 495, 495, 495,
        /*    70 */
        495, 495, 495, 375, 375, 459, 373, 460, 378, 479,
        /*    80 */
        480, 395, 394, 390, 387, 398, 478, 399, 389, 391,
        /*    90 */
        405, 404, 495, 492, 495, 495, 371, 371, 380, 380,
        /*   100 */
        431, 371, 495, 371, 495, 424, 371, 495, 444, 365,
        /*   110 */
        495, 424, 495, 443, 371, 380, 495, 495, 371, 407,
        /*   120 */
        367, 424, 408, 409, 388, 402, 469, 384, 385, 383,
        /*   130 */
        468, 382, 495, 442, 412, 442, 412, 374, 442, 495,
        /*   140 */
        346, 348, 347, 352, 453, 360, 359, 349, 358, 428,
        /*   150 */
        427, 495, 354, 450, 351, 350, 412, 400, 429, 355,
        /*   160 */
        362, 420, 361, 356, 401, 452, 357, 353, 463, 431,
        /*   170 */
        386, 473, 368, 494, 470, 495, 447, 462, 495, 423,
        /*   180 */
        495, 495, 431, 494, 366, 338, 467, 431, 467, 431,
        /*   190 */
        431, 467, 431, 431, 442, 495, 495, 495, 495, 442,
        /*   200 */
        495, 495, 495, 495, 495, 376, 495, 495, 414, 495,
        /*   210 */
        495, 495, 495, 495, 471, 495, 406, 432, 495, 495,
        /*   220 */
        406, 495, 495, 495, 495, 495, 495, 495, 415, 413,
        /*   230 */
        331, 465, 457, 422, 449, 455, 333, 464, 332, 417,
        /*   240 */
        419, 446, 416, 381, 441, 323, 324, 325, 418, 411,
        /*   250 */
        319, 320, 322, 410, 326, 379, 406, 372, 382, 421,
        /*   260 */
        493, 330, 327, 328, 329, 377, 445, 434, 370, 342,
        /*   270 */
        343, 484, 491, 341, 474, 439, 475, 476, 340, 490,
        /*   280 */
        489, 369, 486, 448, 485, 487, 483, 345, 488, 481,
        /*   290 */
        482, 344, 437, 438, 436, 435, 466, 454, 364, 335,
        /*   300 */
        403, 456, 430, 334, 433, 451, 392, 339, 425, 426,
        /*   310 */
        440, 458, 337, 393, 396, 397, 336, 414,
    );
    const YYNOCODE = 114;
    const YYSTACKDEPTH = 500;
    const YYNSTATE = 318;
    const YYNRULE = 177;
    const YYERRORSYMBOL = 72;
    const YYERRSYMDT = 'yy0';
    const YYFALLBACK = 0;
    public static $yyFallback = array();

    public static function Trace($TraceFILE, $zTracePrompt)
    {
        if (!$TraceFILE) {
            $zTracePrompt = 0;
        } elseif (!$zTracePrompt) {
            $TraceFILE = 0;
        }
        self::$yyTraceFILE = $TraceFILE;
        self::$yyTracePrompt = $zTracePrompt;
    }

    public static function PrintTrace()
    {
        self::$yyTraceFILE = fopen('php://output', 'w');
        self::$yyTracePrompt = '<br>';
    }

    public static $yyTraceFILE;
    public static $yyTracePrompt;
    public $yyidx; /* Index of top element in stack */
    public $yyerrcnt; /* Shifts left before out of the error */
    public $yystack = array(); /* The parser's stack */

    public $yyTokenName = array(
        '$', 'VERT', 'COLON', 'TEMPLATEINIT',
        'RDEL', 'COMMENT', 'PHPSTARTTAG', 'PHPENDTAG',
        'ASPSTARTTAG', 'ASPENDTAG', 'FAKEPHPSTARTTAG', 'XMLTAG',
        'TEXT', 'STRIPON', 'STRIPOFF', 'LITERALSTART',
        'LITERALEND', 'LITERAL', 'LDEL', 'EQUAL',
        'ID', 'PTR', 'LDELIF', 'LDELFOR',
        'SEMICOLON', 'IDINCDEC', 'TO', 'STEP',
        'LDELFOREACH', 'SPACE', 'AS', 'APTR',
        'LDELSETFILTER', 'LDELSLASH', 'ATTR', 'COMMA',
        'OPENP', 'CLOSEP', 'DOLLAR', 'MATH',
        'UNIMATH', 'ANDSYM', 'IFCOND', 'ISIN',
        'LOP', 'ISDIVBY', 'ISNOTDIVBY', 'ISEVEN',
        'ISNOTEVEN', 'ISEVENBY', 'ISNOTEVENBY', 'ISODD',
        'ISNOTODD', 'ISODDBY', 'ISNOTODDBY', 'INSTANCEOF',
        'NAMESPACE', 'QMARK', 'NOT', 'TYPECAST',
        'NUMBER', 'SINGLEQUOTESTRING', 'AT', 'HATCH',
        'DOT', 'OPENB', 'CLOSEB', 'DOUBLECOLON',
        'QUOTE', 'BACKTICK', 'DOLLARID', 'DQTAG',
        'error', 'start', 'template', 'template_element',
        'smartytag', 'literal', 'literal_elements', 'literal_element',
        'expr', 'attributes', 'varindexed', 'modifierlist',
        'statement', 'statements', 'optspace', 'varvar',
        'value', 'modparameters', 'attribute', 'ternary',
        'ldelexprrdel', 'variable', 'array', 'function',
        'doublequoted_with_quotes', 'static', 'object', 'arrayindex',
        'indexdef', 'static_class_access', 'varvarele', 'objectchain',
        'objectelement', 'method', 'params', 'modifier',
        'modparameter', 'arrayelements', 'arrayelement', 'doublequoted',
        'doublequotedcontent',
    );

    public static $yyRuleName = array(
        /*   0 */
        "start ::= template",
        /*   1 */
        "template ::= template_element",
        /*   2 */
        "template ::= template template_element",
        /*   3 */
        "template ::=",
        /*   4 */
        "template_element ::= TEMPLATEINIT",
        /*   5 */
        "template_element ::= smartytag RDEL",
        /*   6 */
        "template_element ::= COMMENT",
        /*   7 */
        "template_element ::= literal",
        /*   8 */
        "template_element ::= PHPSTARTTAG",
        /*   9 */
        "template_element ::= PHPENDTAG",
        /*  10 */
        "template_element ::= ASPSTARTTAG",
        /*  11 */
        "template_element ::= ASPENDTAG",
        /*  12 */
        "template_element ::= FAKEPHPSTARTTAG",
        /*  13 */
        "template_element ::= XMLTAG",
        /*  14 */
        "template_element ::= TEXT",
        /*  15 */
        "template_element ::= STRIPON",
        /*  16 */
        "template_element ::= STRIPOFF",
        /*  17 */
        "literal ::= LITERALSTART LITERALEND",
        /*  18 */
        "literal ::= LITERALSTART literal_elements LITERALEND",
        /*  19 */
        "literal_elements ::= literal_elements literal_element",
        /*  20 */
        "literal_elements ::=",
        /*  21 */
        "literal_element ::= literal",
        /*  22 */
        "literal_element ::= LITERAL",
        /*  23 */
        "literal_element ::= PHPSTARTTAG",
        /*  24 */
        "literal_element ::= FAKEPHPSTARTTAG",
        /*  25 */
        "literal_element ::= PHPENDTAG",
        /*  26 */
        "literal_element ::= ASPSTARTTAG",
        /*  27 */
        "literal_element ::= ASPENDTAG",
        /*  28 */
        "smartytag ::= LDEL expr attributes",
        /*  29 */
        "smartytag ::= LDEL varindexed EQUAL expr attributes",
        /*  30 */
        "smartytag ::= LDEL ID attributes",
        /*  31 */
        "smartytag ::= LDEL ID modifierlist attributes",
        /*  32 */
        "smartytag ::= LDEL ID PTR ID modifierlist attributes",
        /*  33 */
        "smartytag ::= LDEL ID PTR ID attributes",
        /*  34 */
        "smartytag ::= LDELIF expr attributes",
        /*  35 */
        "smartytag ::= LDELIF statement attributes",
        /*  36 */
        "smartytag ::= LDELFOR statements SEMICOLON optspace expr SEMICOLON optspace varvar EQUAL expr attributes",
        /*  37 */
        "smartytag ::= LDELFOR statements SEMICOLON optspace expr SEMICOLON optspace IDINCDEC attributes",
        /*  38 */
        "smartytag ::= LDELFOR statement TO expr attributes",
        /*  39 */
        "smartytag ::= LDELFOR statement TO expr STEP expr attributes",
        /*  40 */
        "smartytag ::= LDELFOREACH attributes",
        /*  41 */
        "smartytag ::= LDELFOREACH SPACE value AS varvar attributes",
        /*  42 */
        "smartytag ::= LDELFOREACH SPACE value AS varvar APTR varvar attributes",
        /*  43 */
        "smartytag ::= LDELFOREACH SPACE expr AS varvar attributes",
        /*  44 */
        "smartytag ::= LDELFOREACH SPACE expr AS varvar APTR varvar attributes",
        /*  45 */
        "smartytag ::= LDELSETFILTER ID modparameters",
        /*  46 */
        "smartytag ::= LDELSETFILTER ID modparameters modifierlist RDEL",
        /*  47 */
        "smartytag ::= LDELSLASH ID",
        /*  48 */
        "smartytag ::= LDELSLASH ID modifierlist",
        /*  49 */
        "smartytag ::= LDELSLASH ID PTR ID",
        /*  50 */
        "smartytag ::= LDELSLASH ID PTR ID modifierlist",
        /*  51 */
        "attributes ::= attributes attribute",
        /*  52 */
        "attributes ::= attribute",
        /*  53 */
        "attributes ::=",
        /*  54 */
        "attribute ::= SPACE ID EQUAL ID",
        /*  55 */
        "attribute ::= ATTR expr",
        /*  56 */
        "attribute ::= SPACE ID",
        /*  57 */
        "attribute ::= SPACE expr",
        /*  58 */
        "statements ::= statement",
        /*  59 */
        "statements ::= statements COMMA statement",
        /*  60 */
        "statement ::= varindexed EQUAL expr",
        /*  61 */
        "statement ::= OPENP statement CLOSEP",
        /*  62 */
        "expr ::= value",
        /*  63 */
        "expr ::= ternary",
        /*  64 */
        "expr ::= DOLLAR ID COLON ID",
        /*  65 */
        "expr ::= expr MATH value",
        /*  66 */
        "expr ::= expr UNIMATH value",
        /*  67 */
        "expr ::= expr ANDSYM value",
        /*  68 */
        "expr ::= expr modifierlist",
        /*  69 */
        "expr ::= expr IFCOND expr",
        /*  70 */
        "expr ::= expr ISIN value",
        /*  71 */
        "expr ::= expr LOP expr",
        /*  72 */
        "expr ::= expr ISDIVBY expr",
        /*  73 */
        "expr ::= expr ISNOTDIVBY expr",
        /*  74 */
        "expr ::= expr ISEVEN",
        /*  75 */
        "expr ::= expr ISNOTEVEN",
        /*  76 */
        "expr ::= expr ISEVENBY expr",
        /*  77 */
        "expr ::= expr ISNOTEVENBY expr",
        /*  78 */
        "expr ::= expr ISODD",
        /*  79 */
        "expr ::= expr ISNOTODD",
        /*  80 */
        "expr ::= expr ISODDBY expr",
        /*  81 */
        "expr ::= expr ISNOTODDBY expr",
        /*  82 */
        "expr ::= value INSTANCEOF ID",
        /*  83 */
        "expr ::= value INSTANCEOF NAMESPACE",
        /*  84 */
        "expr ::= value INSTANCEOF value",
        /*  85 */
        "ldelexprrdel ::= LDEL expr RDEL",
        /*  86 */
        "ternary ::= OPENP expr CLOSEP QMARK DOLLAR ID COLON expr",
        /*  87 */
        "ternary ::= OPENP expr CLOSEP QMARK expr COLON expr",
        /*  88 */
        "value ::= variable",
        /*  89 */
        "value ::= UNIMATH value",
        /*  90 */
        "value ::= NOT value",
        /*  91 */
        "value ::= TYPECAST value",
        /*  92 */
        "value ::= NUMBER",
        /*  93 */
        "value ::= array",
        /*  94 */
        "value ::= ID",
        /*  95 */
        "value ::= function",
        /*  96 */
        "value ::= OPENP expr CLOSEP",
        /*  97 */
        "value ::= SINGLEQUOTESTRING",
        /*  98 */
        "value ::= doublequoted_with_quotes",
        /*  99 */
        "value ::= IDINCDEC",
        /* 100 */
        "value ::= ID static",
        /* 101 */
        "value ::= NAMESPACE static",
        /* 102 */
        "value ::= NAMESPACE",
        /* 103 */
        "value ::= DOLLAR ID static",
        /* 104 */
        "value ::= smartytag",
        /* 105 */
        "value ::= value modifierlist",
        /* 106 */
        "variable ::= varindexed",
        /* 107 */
        "variable ::= varvar AT ID",
        /* 108 */
        "variable ::= object",
        /* 109 */
        "variable ::= HATCH ID HATCH arrayindex",
        /* 110 */
        "variable ::= HATCH varindexed HATCH arrayindex",
        /* 111 */
        "varindexed ::= varvar arrayindex",
        /* 112 */
        "arrayindex ::= arrayindex indexdef",
        /* 113 */
        "arrayindex ::=",
        /* 114 */
        "indexdef ::= DOT varvar",
        /* 115 */
        "indexdef ::= DOT varvar AT ID",
        /* 116 */
        "indexdef ::= DOT ID",
        /* 117 */
        "indexdef ::= DOT NUMBER",
        /* 118 */
        "indexdef ::= DOT ldelexprrdel",
        /* 119 */
        "indexdef ::= OPENB ID CLOSEB",
        /* 120 */
        "indexdef ::= OPENB ID DOT ID CLOSEB",
        /* 121 */
        "indexdef ::= OPENB expr CLOSEB",
        /* 122 */
        "indexdef ::= OPENB CLOSEB",
        /* 123 */
        "static ::= DOUBLECOLON static_class_access",
        /* 124 */
        "varvar ::= DOLLAR ID",
        /* 125 */
        "varvar ::= DOLLAR varvarele",
        /* 126 */
        "varvarele ::= varvarele varvarele",
        /* 127 */
        "varvarele ::= ID",
        /* 128 */
        "varvarele ::= ldelexprrdel",
        /* 129 */
        "object ::= varindexed objectchain",
        /* 130 */
        "objectchain ::= objectelement",
        /* 131 */
        "objectchain ::= objectchain objectelement",
        /* 132 */
        "objectelement ::= PTR ID arrayindex",
        /* 133 */
        "objectelement ::= PTR varindexed",
        /* 134 */
        "objectelement ::= PTR ldelexprrdel arrayindex",
        /* 135 */
        "objectelement ::= PTR ID ldelexprrdel arrayindex",
        /* 136 */
        "objectelement ::= PTR method",
        /* 137 */
        "function ::= ID OPENP params CLOSEP",
        /* 138 */
        "function ::= NAMESPACE OPENP params CLOSEP",
        /* 139 */
        "method ::= ID OPENP params CLOSEP",
        /* 140 */
        "method ::= DOLLAR ID OPENP params CLOSEP",
        /* 141 */
        "params ::= params COMMA expr",
        /* 142 */
        "params ::= expr",
        /* 143 */
        "params ::=",
        /* 144 */
        "modifierlist ::= modifierlist modifier modparameters",
        /* 145 */
        "modifierlist ::= modifier modparameters",
        /* 146 */
        "modifier ::= VERT AT ID",
        /* 147 */
        "modifier ::= VERT ID",
        /* 148 */
        "modparameters ::= modparameters modparameter",
        /* 149 */
        "modparameters ::=",
        /* 150 */
        "modparameter ::= COLON value",
        /* 151 */
        "static_class_access ::= method",
        /* 152 */
        "static_class_access ::= method objectchain",
        /* 153 */
        "static_class_access ::= ID",
        /* 154 */
        "static_class_access ::= DOLLAR ID arrayindex",
        /* 155 */
        "static_class_access ::= DOLLAR ID arrayindex objectchain",
        /* 156 */
        "array ::= OPENB arrayelements CLOSEB",
        /* 157 */
        "arrayelements ::= arrayelement",
        /* 158 */
        "arrayelements ::= arrayelements COMMA arrayelement",
        /* 159 */
        "arrayelements ::=",
        /* 160 */
        "arrayelement ::= value APTR expr",
        /* 161 */
        "arrayelement ::= ID APTR expr",
        /* 162 */
        "arrayelement ::= expr",
        /* 163 */
        "doublequoted_with_quotes ::= QUOTE QUOTE",
        /* 164 */
        "doublequoted_with_quotes ::= QUOTE doublequoted QUOTE",
        /* 165 */
        "doublequoted ::= doublequoted doublequotedcontent",
        /* 166 */
        "doublequoted ::= doublequotedcontent",
        /* 167 */
        "doublequotedcontent ::= BACKTICK variable BACKTICK",
        /* 168 */
        "doublequotedcontent ::= BACKTICK expr BACKTICK",
        /* 169 */
        "doublequotedcontent ::= DOLLARID",
        /* 170 */
        "doublequotedcontent ::= DQTAG LDEL variable RDEL",
        /* 171 */
        "doublequotedcontent ::= DQTAG ldelexprrdel",
        /* 172 */
        "doublequotedcontent ::= DQTAG smartytag RDEL",
        /* 173 */
        "doublequotedcontent ::= TEXT",
        /* 174 */
        "doublequotedcontent ::= DQTAG",
        /* 175 */
        "optspace ::= SPACE",
        /* 176 */
        "optspace ::=",
    );

    public function tokenName($tokenType)
    {
        if ($tokenType === 0) {
            return 'End of Input';
        }
        if ($tokenType > 0 && $tokenType < count($this->yyTokenName)) {
            return $this->yyTokenName[$tokenType];
        } else {
            return "Unknown";
        }
    }

    public static function yy_destructor($yymajor, $yypminor)
    {
        switch ($yymajor) {
            default:
                break; /* If no destructor action specified: do nothing */
        }
    }

    public function yy_pop_parser_stack()
    {
        if (!count($this->yystack)) {
            return;
        }
        $yytos = array_pop($this->yystack);
        if (self::$yyTraceFILE && $this->yyidx >= 0) {
            fwrite(self::$yyTraceFILE,
                self::$yyTracePrompt . 'Popping ' . $this->yyTokenName[$yytos->major] .
                "\n");
        }
        $yymajor = $yytos->major;
        self::yy_destructor($yymajor, $yytos->minor);
        $this->yyidx--;

        return $yymajor;
    }

    public function __destruct()
    {
        while ($this->yystack !== Array()) {
            $this->yy_pop_parser_stack();
        }
        if (is_resource(self::$yyTraceFILE)) {
            fclose(self::$yyTraceFILE);
        }
    }

    public function yy_get_expected_tokens($token)
    {
        $state = $this->yystack[$this->yyidx]->stateno;
        $expected = self::$yyExpectedTokens[$state];
        if (in_array($token, self::$yyExpectedTokens[$state], true)) {
            return $expected;
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return array_unique($expected);
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[$yyruleno]['rhs'];
                    $nextstate = $this->yy_find_reduce_action(
                        $this->yystack[$this->yyidx]->stateno,
                        self::$yyRuleInfo[$yyruleno]['lhs']);
                    if (isset(self::$yyExpectedTokens[$nextstate])) {
                        $expected = array_merge($expected, self::$yyExpectedTokens[$nextstate]);
                        if (in_array($token,
                            self::$yyExpectedTokens[$nextstate], true)
                        ) {
                            $this->yyidx = $yyidx;
                            $this->yystack = $stack;

                            return array_unique($expected);
                        }
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[$yyruleno]['lhs'];
                        $this->yystack[$this->yyidx] = $x;
                        continue 2;
                    } elseif ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return array_unique($expected);
                    } elseif ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return $expected;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
        $this->yyidx = $yyidx;
        $this->yystack = $stack;

        return array_unique($expected);
    }

    public function yy_is_expected_token($token)
    {
        if ($token === 0) {
            return true; // 0 is not part of this
        }
        $state = $this->yystack[$this->yyidx]->stateno;
        if (in_array($token, self::$yyExpectedTokens[$state], true)) {
            return true;
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return true;
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[$yyruleno]['rhs'];
                    $nextstate = $this->yy_find_reduce_action(
                        $this->yystack[$this->yyidx]->stateno,
                        self::$yyRuleInfo[$yyruleno]['lhs']);
                    if (isset(self::$yyExpectedTokens[$nextstate]) &&
                        in_array($token, self::$yyExpectedTokens[$nextstate], true)
                    ) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;

                        return true;
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[$yyruleno]['lhs'];
                        $this->yystack[$this->yyidx] = $x;
                        continue 2;
                    } elseif ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        if (!$token) {
                            // end of input: this is valid
                            return true;
                        }
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return false;
                    } elseif ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return true;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
        $this->yyidx = $yyidx;
        $this->yystack = $stack;

        return true;
    }

    public function yy_find_shift_action($iLookAhead)
    {
        $stateno = $this->yystack[$this->yyidx]->stateno;

        /* if ($this->yyidx < 0) return self::YY_NO_ACTION;  */
        if (!isset(self::$yy_shift_ofst[$stateno])) {
            // no shift actions
            return self::$yy_default[$stateno];
        }
        $i = self::$yy_shift_ofst[$stateno];
        if ($i === self::YY_SHIFT_USE_DFLT) {
            return self::$yy_default[$stateno];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
            self::$yy_lookahead[$i] != $iLookAhead
        ) {
            if (count(self::$yyFallback) && $iLookAhead < count(self::$yyFallback)
                && ($iFallback = self::$yyFallback[$iLookAhead]) != 0
            ) {
                if (self::$yyTraceFILE) {
                    fwrite(self::$yyTraceFILE, self::$yyTracePrompt . "FALLBACK " .
                        $this->yyTokenName[$iLookAhead] . " => " .
                        $this->yyTokenName[$iFallback] . "\n");
                }

                return $this->yy_find_shift_action($iFallback);
            }

            return self::$yy_default[$stateno];
        } else {
            return self::$yy_action[$i];
        }
    }

    public function yy_find_reduce_action($stateno, $iLookAhead)
    {
        /* $stateno = $this->yystack[$this->yyidx]->stateno; */

        if (!isset(self::$yy_reduce_ofst[$stateno])) {
            return self::$yy_default[$stateno];
        }
        $i = self::$yy_reduce_ofst[$stateno];
        if ($i == self::YY_REDUCE_USE_DFLT) {
            return self::$yy_default[$stateno];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
            self::$yy_lookahead[$i] != $iLookAhead
        ) {
            return self::$yy_default[$stateno];
        } else {
            return self::$yy_action[$i];
        }
    }

    public function yy_shift($yyNewState, $yyMajor, $yypMinor)
    {
        $this->yyidx++;
        if ($this->yyidx >= self::YYSTACKDEPTH) {
            $this->yyidx--;
            if (self::$yyTraceFILE) {
                fprintf(self::$yyTraceFILE, "%sStack Overflow!\n", self::$yyTracePrompt);
            }
            while ($this->yyidx >= 0) {
                $this->yy_pop_parser_stack();
            }
#line 85 "Smarty_Compiler_Template_Php_Parser.y"

            $this->internalError = true;
            $this->compiler->error("Stack overflow in template parser");
#line 1475 "Smarty_Compiler_Template_Php_Parser.php"

            return;
        }
        $yytos = new TP_yyStackEntry;
        $yytos->stateno = $yyNewState;
        $yytos->major = $yyMajor;
        $yytos->minor = $yypMinor;
        array_push($this->yystack, $yytos);
        if (self::$yyTraceFILE && $this->yyidx > 0) {
            fprintf(self::$yyTraceFILE, "%sShift %d\n", self::$yyTracePrompt,
                $yyNewState);
            fprintf(self::$yyTraceFILE, "%sStack:", self::$yyTracePrompt);
            for ($i = 1; $i <= $this->yyidx; $i++) {
                fprintf(self::$yyTraceFILE, " %s",
                    $this->yyTokenName[$this->yystack[$i]->major]);
            }
            fwrite(self::$yyTraceFILE, "\n");
        }
    }

    public static $yyRuleInfo = array(
        array('lhs' => 73, 'rhs' => 1),
        array('lhs' => 74, 'rhs' => 1),
        array('lhs' => 74, 'rhs' => 2),
        array('lhs' => 74, 'rhs' => 0),
        array('lhs' => 75, 'rhs' => 1),
        array('lhs' => 75, 'rhs' => 2),
        array('lhs' => 75, 'rhs' => 1),
        array('lhs' => 75, 'rhs' => 1),
        array('lhs' => 75, 'rhs' => 1),
        array('lhs' => 75, 'rhs' => 1),
        array('lhs' => 75, 'rhs' => 1),
        array('lhs' => 75, 'rhs' => 1),
        array('lhs' => 75, 'rhs' => 1),
        array('lhs' => 75, 'rhs' => 1),
        array('lhs' => 75, 'rhs' => 1),
        array('lhs' => 75, 'rhs' => 1),
        array('lhs' => 75, 'rhs' => 1),
        array('lhs' => 77, 'rhs' => 2),
        array('lhs' => 77, 'rhs' => 3),
        array('lhs' => 78, 'rhs' => 2),
        array('lhs' => 78, 'rhs' => 0),
        array('lhs' => 79, 'rhs' => 1),
        array('lhs' => 79, 'rhs' => 1),
        array('lhs' => 79, 'rhs' => 1),
        array('lhs' => 79, 'rhs' => 1),
        array('lhs' => 79, 'rhs' => 1),
        array('lhs' => 79, 'rhs' => 1),
        array('lhs' => 79, 'rhs' => 1),
        array('lhs' => 76, 'rhs' => 3),
        array('lhs' => 76, 'rhs' => 5),
        array('lhs' => 76, 'rhs' => 3),
        array('lhs' => 76, 'rhs' => 4),
        array('lhs' => 76, 'rhs' => 6),
        array('lhs' => 76, 'rhs' => 5),
        array('lhs' => 76, 'rhs' => 3),
        array('lhs' => 76, 'rhs' => 3),
        array('lhs' => 76, 'rhs' => 11),
        array('lhs' => 76, 'rhs' => 9),
        array('lhs' => 76, 'rhs' => 5),
        array('lhs' => 76, 'rhs' => 7),
        array('lhs' => 76, 'rhs' => 2),
        array('lhs' => 76, 'rhs' => 6),
        array('lhs' => 76, 'rhs' => 8),
        array('lhs' => 76, 'rhs' => 6),
        array('lhs' => 76, 'rhs' => 8),
        array('lhs' => 76, 'rhs' => 3),
        array('lhs' => 76, 'rhs' => 5),
        array('lhs' => 76, 'rhs' => 2),
        array('lhs' => 76, 'rhs' => 3),
        array('lhs' => 76, 'rhs' => 4),
        array('lhs' => 76, 'rhs' => 5),
        array('lhs' => 81, 'rhs' => 2),
        array('lhs' => 81, 'rhs' => 1),
        array('lhs' => 81, 'rhs' => 0),
        array('lhs' => 90, 'rhs' => 4),
        array('lhs' => 90, 'rhs' => 2),
        array('lhs' => 90, 'rhs' => 2),
        array('lhs' => 90, 'rhs' => 2),
        array('lhs' => 85, 'rhs' => 1),
        array('lhs' => 85, 'rhs' => 3),
        array('lhs' => 84, 'rhs' => 3),
        array('lhs' => 84, 'rhs' => 3),
        array('lhs' => 80, 'rhs' => 1),
        array('lhs' => 80, 'rhs' => 1),
        array('lhs' => 80, 'rhs' => 4),
        array('lhs' => 80, 'rhs' => 3),
        array('lhs' => 80, 'rhs' => 3),
        array('lhs' => 80, 'rhs' => 3),
        array('lhs' => 80, 'rhs' => 2),
        array('lhs' => 80, 'rhs' => 3),
        array('lhs' => 80, 'rhs' => 3),
        array('lhs' => 80, 'rhs' => 3),
        array('lhs' => 80, 'rhs' => 3),
        array('lhs' => 80, 'rhs' => 3),
        array('lhs' => 80, 'rhs' => 2),
        array('lhs' => 80, 'rhs' => 2),
        array('lhs' => 80, 'rhs' => 3),
        array('lhs' => 80, 'rhs' => 3),
        array('lhs' => 80, 'rhs' => 2),
        array('lhs' => 80, 'rhs' => 2),
        array('lhs' => 80, 'rhs' => 3),
        array('lhs' => 80, 'rhs' => 3),
        array('lhs' => 80, 'rhs' => 3),
        array('lhs' => 80, 'rhs' => 3),
        array('lhs' => 80, 'rhs' => 3),
        array('lhs' => 92, 'rhs' => 3),
        array('lhs' => 91, 'rhs' => 8),
        array('lhs' => 91, 'rhs' => 7),
        array('lhs' => 88, 'rhs' => 1),
        array('lhs' => 88, 'rhs' => 2),
        array('lhs' => 88, 'rhs' => 2),
        array('lhs' => 88, 'rhs' => 2),
        array('lhs' => 88, 'rhs' => 1),
        array('lhs' => 88, 'rhs' => 1),
        array('lhs' => 88, 'rhs' => 1),
        array('lhs' => 88, 'rhs' => 1),
        array('lhs' => 88, 'rhs' => 3),
        array('lhs' => 88, 'rhs' => 1),
        array('lhs' => 88, 'rhs' => 1),
        array('lhs' => 88, 'rhs' => 1),
        array('lhs' => 88, 'rhs' => 2),
        array('lhs' => 88, 'rhs' => 2),
        array('lhs' => 88, 'rhs' => 1),
        array('lhs' => 88, 'rhs' => 3),
        array('lhs' => 88, 'rhs' => 1),
        array('lhs' => 88, 'rhs' => 2),
        array('lhs' => 93, 'rhs' => 1),
        array('lhs' => 93, 'rhs' => 3),
        array('lhs' => 93, 'rhs' => 1),
        array('lhs' => 93, 'rhs' => 4),
        array('lhs' => 93, 'rhs' => 4),
        array('lhs' => 82, 'rhs' => 2),
        array('lhs' => 99, 'rhs' => 2),
        array('lhs' => 99, 'rhs' => 0),
        array('lhs' => 100, 'rhs' => 2),
        array('lhs' => 100, 'rhs' => 4),
        array('lhs' => 100, 'rhs' => 2),
        array('lhs' => 100, 'rhs' => 2),
        array('lhs' => 100, 'rhs' => 2),
        array('lhs' => 100, 'rhs' => 3),
        array('lhs' => 100, 'rhs' => 5),
        array('lhs' => 100, 'rhs' => 3),
        array('lhs' => 100, 'rhs' => 2),
        array('lhs' => 97, 'rhs' => 2),
        array('lhs' => 87, 'rhs' => 2),
        array('lhs' => 87, 'rhs' => 2),
        array('lhs' => 102, 'rhs' => 2),
        array('lhs' => 102, 'rhs' => 1),
        array('lhs' => 102, 'rhs' => 1),
        array('lhs' => 98, 'rhs' => 2),
        array('lhs' => 103, 'rhs' => 1),
        array('lhs' => 103, 'rhs' => 2),
        array('lhs' => 104, 'rhs' => 3),
        array('lhs' => 104, 'rhs' => 2),
        array('lhs' => 104, 'rhs' => 3),
        array('lhs' => 104, 'rhs' => 4),
        array('lhs' => 104, 'rhs' => 2),
        array('lhs' => 95, 'rhs' => 4),
        array('lhs' => 95, 'rhs' => 4),
        array('lhs' => 105, 'rhs' => 4),
        array('lhs' => 105, 'rhs' => 5),
        array('lhs' => 106, 'rhs' => 3),
        array('lhs' => 106, 'rhs' => 1),
        array('lhs' => 106, 'rhs' => 0),
        array('lhs' => 83, 'rhs' => 3),
        array('lhs' => 83, 'rhs' => 2),
        array('lhs' => 107, 'rhs' => 3),
        array('lhs' => 107, 'rhs' => 2),
        array('lhs' => 89, 'rhs' => 2),
        array('lhs' => 89, 'rhs' => 0),
        array('lhs' => 108, 'rhs' => 2),
        array('lhs' => 101, 'rhs' => 1),
        array('lhs' => 101, 'rhs' => 2),
        array('lhs' => 101, 'rhs' => 1),
        array('lhs' => 101, 'rhs' => 3),
        array('lhs' => 101, 'rhs' => 4),
        array('lhs' => 94, 'rhs' => 3),
        array('lhs' => 109, 'rhs' => 1),
        array('lhs' => 109, 'rhs' => 3),
        array('lhs' => 109, 'rhs' => 0),
        array('lhs' => 110, 'rhs' => 3),
        array('lhs' => 110, 'rhs' => 3),
        array('lhs' => 110, 'rhs' => 1),
        array('lhs' => 96, 'rhs' => 2),
        array('lhs' => 96, 'rhs' => 3),
        array('lhs' => 111, 'rhs' => 2),
        array('lhs' => 111, 'rhs' => 1),
        array('lhs' => 112, 'rhs' => 3),
        array('lhs' => 112, 'rhs' => 3),
        array('lhs' => 112, 'rhs' => 1),
        array('lhs' => 112, 'rhs' => 4),
        array('lhs' => 112, 'rhs' => 2),
        array('lhs' => 112, 'rhs' => 3),
        array('lhs' => 112, 'rhs' => 1),
        array('lhs' => 112, 'rhs' => 1),
        array('lhs' => 86, 'rhs' => 1),
        array('lhs' => 86, 'rhs' => 0),
    );

    public static $yyReduceMap = array(
        0 => 0,
        1 => 1,
        2 => 1,
        4 => 1,
        6 => 1,
        5 => 5,
        7 => 7,
        8 => 8,
        9 => 9,
        10 => 10,
        11 => 11,
        12 => 12,
        13 => 13,
        14 => 14,
        15 => 15,
        16 => 16,
        17 => 17,
        20 => 17,
        176 => 17,
        18 => 18,
        61 => 18,
        85 => 18,
        164 => 18,
        19 => 19,
        89 => 19,
        91 => 19,
        101 => 19,
        112 => 19,
        152 => 19,
        21 => 21,
        22 => 21,
        23 => 21,
        24 => 21,
        25 => 21,
        26 => 21,
        27 => 21,
        57 => 21,
        62 => 21,
        63 => 21,
        88 => 21,
        92 => 21,
        93 => 21,
        95 => 21,
        97 => 21,
        98 => 21,
        102 => 21,
        108 => 21,
        124 => 21,
        151 => 21,
        153 => 21,
        157 => 21,
        162 => 21,
        175 => 21,
        28 => 28,
        29 => 29,
        30 => 30,
        31 => 31,
        32 => 32,
        33 => 33,
        34 => 34,
        35 => 34,
        36 => 36,
        37 => 37,
        38 => 38,
        39 => 39,
        40 => 40,
        41 => 41,
        43 => 41,
        42 => 42,
        44 => 42,
        45 => 45,
        46 => 46,
        47 => 47,
        48 => 48,
        49 => 49,
        50 => 50,
        51 => 51,
        52 => 52,
        58 => 52,
        142 => 52,
        146 => 52,
        150 => 52,
        53 => 53,
        143 => 53,
        149 => 53,
        54 => 54,
        55 => 55,
        56 => 56,
        59 => 59,
        60 => 60,
        64 => 64,
        65 => 65,
        66 => 65,
        67 => 65,
        68 => 68,
        105 => 68,
        69 => 69,
        71 => 69,
        70 => 70,
        72 => 72,
        73 => 73,
        74 => 74,
        79 => 74,
        75 => 75,
        78 => 75,
        76 => 76,
        81 => 76,
        77 => 77,
        80 => 77,
        82 => 82,
        83 => 82,
        84 => 84,
        86 => 86,
        87 => 87,
        90 => 90,
        94 => 94,
        96 => 96,
        99 => 99,
        100 => 100,
        103 => 103,
        104 => 104,
        106 => 106,
        107 => 107,
        109 => 109,
        110 => 110,
        111 => 111,
        113 => 113,
        159 => 113,
        114 => 114,
        115 => 115,
        116 => 116,
        117 => 117,
        118 => 118,
        119 => 119,
        120 => 120,
        121 => 121,
        122 => 122,
        123 => 123,
        125 => 125,
        126 => 126,
        127 => 127,
        128 => 128,
        129 => 129,
        130 => 130,
        131 => 131,
        132 => 132,
        133 => 133,
        134 => 134,
        135 => 135,
        136 => 136,
        137 => 137,
        138 => 138,
        139 => 139,
        140 => 140,
        141 => 141,
        144 => 144,
        145 => 145,
        147 => 147,
        148 => 148,
        154 => 154,
        155 => 155,
        156 => 156,
        158 => 158,
        160 => 160,
        161 => 161,
        163 => 163,
        165 => 165,
        166 => 166,
        167 => 167,
        170 => 167,
        168 => 168,
        169 => 169,
        171 => 171,
        172 => 172,
        173 => 173,
        174 => 174,
    );

#line 96 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r0()
    {
        // execute end of template
        if ($this->compiler->context->caching) {
            $this->compiler->has_code = true;
            $this->compiler->nocache_nolog = true;
        }
    }

#line 1862 "Smarty_Compiler_Template_Php_Parser.php"
#line 108 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r1()
    {
    }

#line 1866 "Smarty_Compiler_Template_Php_Parser.php"
#line 127 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r5()
    {
        if ($this->compiler->has_code) {
            $this->compiler->nocacheCode($this->yystack[$this->yyidx + -1]->minor, true);
        } else {
            $this->compiler->template_code->raw($this->yystack[$this->yyidx + -1]->minor);
        }
        $this->block_nesting_level = count($this->compiler->_tag_stack);
    }

#line 1876 "Smarty_Compiler_Template_Php_Parser.php"
#line 141 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r7()
    {
        $this->compiler->template_code->php('echo ')->string($this->yystack[$this->yyidx + 0]->minor)->raw(";\n");
    }

#line 1881 "Smarty_Compiler_Template_Php_Parser.php"
#line 146 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r8()
    {
        if ($this->php_handling == Smarty::PHP_PASSTHRU) {
            $this->compiler->template_code->php("echo '<?php';\n");
        } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
            $this->compiler->template_code->php("echo '&lt;?php';\n");
        } elseif ($this->php_handling == Smarty::PHP_ALLOW) {
            if (!($this->compiler->context->smarty instanceof Smarty_Smarty2BC)) {
                $this->compiler->error(self::Err3);
            }
            $this->text_is_php = true;
        }
    }

#line 1895 "Smarty_Compiler_Template_Php_Parser.php"
#line 160 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r9()
    {
        if ($this->is_xml) {
            $this->is_xml = false;
            $this->compiler->template_code->php("echo '?>';\n");
        } elseif ($this->php_handling == Smarty::PHP_PASSTHRU) {
            $this->compiler->template_code->php("echo '?>';\n");
        } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
            $this->compiler->template_code->php("echo '?&gt;';\n");
        } elseif ($this->php_handling == Smarty::PHP_ALLOW) {
            $this->text_is_php = false;
        }
    }

#line 1909 "Smarty_Compiler_Template_Php_Parser.php"
#line 174 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r10()
    {
        if ($this->php_handling == Smarty::PHP_PASSTHRU) {
            $this->compiler->template_code->php("echo '<%';\n");
        } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
            $this->compiler->template_code->php("echo '&lt;%';\n");
        } elseif ($this->php_handling == Smarty::PHP_ALLOW) {
            if ($this->asp_tags) {
                if (!($this->compiler->template instanceof SmartyBC)) {
                    $this->compiler->error(self::Err3);
                }
                $this->text_is_php = true;
            } else {
                $this->compiler->template_code->php("echo '<%';\n");
            }
        } elseif ($this->php_handling == Smarty::PHP_REMOVE) {
            if (!$this->asp_tags) {
                $this->compiler->template_code->php("echo '<%';\n");
            }
        }
    }

#line 1931 "Smarty_Compiler_Template_Php_Parser.php"
#line 196 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r11()
    {
        if ($this->php_handling == Smarty::PHP_PASSTHRU) {
            $this->compiler->template_code->php("echo '%>';\n");
        } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
            $this->compiler->template_code->php("echo '%&gt;';\n");
        } elseif ($this->php_handling == Smarty::PHP_ALLOW) {
            if ($this->asp_tags) {
                $this->text_is_php = false;
            } else {
                $this->compiler->template_code->php("echo '%>';\n");
            }
        } elseif ($this->php_handling == Smarty::PHP_REMOVE) {
            if (!$this->asp_tags) {
                $this->compiler->template_code->php("echo '%>';\n");
            }
        }
    }

#line 1950 "Smarty_Compiler_Template_Php_Parser.php"
#line 214 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r12()
    {
        if ($this->strip) {
            $this->compiler->template_code->php('echo ')->string(preg_replace('![\t ]*[\r\n]+[\t ]*!', '', $this->yystack[$this->yyidx + 0]->minor))->raw(";\n");
        } else {
            $this->compiler->template_code->php('echo ')->string($this->yystack[$this->yyidx + 0]->minor)->raw(";\n");
        }
    }

#line 1959 "Smarty_Compiler_Template_Php_Parser.php"
#line 223 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r13()
    {
        $this->is_xml = true;
        $this->compiler->template_code->php("echo '<?xml';\n");
    }

#line 1965 "Smarty_Compiler_Template_Php_Parser.php"
#line 229 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r14()
    {
        if ($this->text_is_php) {
            $this->compiler->prefix_code[] = $this->yystack[$this->yyidx + 0]->minor;
            $this->compiler->nocacheCode('', true);
        } else {
            // inheritance child templates shall not output text
            if (!$this->compiler->isInheritanceChild || $this->compiler->block_nesting_level > 0) {
                if ($this->strip) {
                    $this->compiler->template_code->php('echo ')->string(preg_replace('![\t ]*[\r\n]+[\t ]*!', '', $this->yystack[$this->yyidx + 0]->minor))->raw(";\n");
                } else {
                    $this->compiler->template_code->php('echo ')->string($this->yystack[$this->yyidx + 0]->minor)->raw(";\n");
                }
            }
        }
    }

#line 1982 "Smarty_Compiler_Template_Php_Parser.php"
#line 246 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r15()
    {
        $this->strip = true;
    }

#line 1987 "Smarty_Compiler_Template_Php_Parser.php"
#line 250 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r16()
    {
        $this->strip = false;
    }

#line 1992 "Smarty_Compiler_Template_Php_Parser.php"
#line 255 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r17()
    {
        $this->_retvalue = '';
    }

#line 1997 "Smarty_Compiler_Template_Php_Parser.php"
#line 259 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r18()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;
    }

#line 2002 "Smarty_Compiler_Template_Php_Parser.php"
#line 263 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r19()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor . $this->yystack[$this->yyidx + 0]->minor;
    }

#line 2007 "Smarty_Compiler_Template_Php_Parser.php"
#line 271 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r21()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;
    }

#line 2012 "Smarty_Compiler_Template_Php_Parser.php"
#line 312 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r28()
    {
        $this->_retvalue = $this->compiler->compileTag('Internal_PrintExpression', $this->yystack[$this->yyidx + 0]->minor, array('value' => $this->yystack[$this->yyidx + -1]->minor));
    }

#line 2017 "Smarty_Compiler_Template_Php_Parser.php"
#line 333 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r29()
    {
        $this->_retvalue = $this->compiler->compileTag('assign', array_merge(array(array('value' => $this->yystack[$this->yyidx + -1]->minor), array('var' => $this->yystack[$this->yyidx + -3]->minor['var'])), $this->yystack[$this->yyidx + 0]->minor), array('smarty_internal_index' => $this->yystack[$this->yyidx + -3]->minor['smarty_internal_index']));
    }

#line 2022 "Smarty_Compiler_Template_Php_Parser.php"
#line 338 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r30()
    {
        $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -1]->minor, $this->yystack[$this->yyidx + 0]->minor);
    }

#line 2027 "Smarty_Compiler_Template_Php_Parser.php"
#line 352 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r31()
    {
        $this->_retvalue = 'ob_start(); ' . $this->compiler->compileTag($this->yystack[$this->yyidx + -2]->minor, $this->yystack[$this->yyidx + 0]->minor) . ' echo ';
        $this->_retvalue .= $this->compiler->compileTag('Internal_Modifier', array(), array('modifier_list' => $this->yystack[$this->yyidx + -1]->minor, 'value' => 'ob_get_clean()')) . ';';
    }

#line 2033 "Smarty_Compiler_Template_Php_Parser.php"
#line 358 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r32()
    {
        $this->_retvalue = 'ob_start(); ' . $this->compiler->compileTag($this->yystack[$this->yyidx + -4]->minor, $this->yystack[$this->yyidx + 0]->minor, array('object_method' => $this->yystack[$this->yyidx + -2]->minor)) . ' echo ';
        $this->_retvalue .= $this->compiler->compileTag('Internal_Modifier', array(), array('modifier_list' => $this->yystack[$this->yyidx + -1]->minor, 'value' => 'ob_get_clean()')) . ';';
    }

#line 2039 "Smarty_Compiler_Template_Php_Parser.php"
#line 364 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r33()
    {
        $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -3]->minor, $this->yystack[$this->yyidx + 0]->minor, array('object_method' => $this->yystack[$this->yyidx + -1]->minor));
    }

#line 2044 "Smarty_Compiler_Template_Php_Parser.php"
#line 374 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r34()
    {
        $tag = trim(substr($this->yystack[$this->yyidx + -2]->minor, $this->lex->ldel_length));
        $this->_retvalue = $this->compiler->compileTag(($tag == 'else if') ? 'elseif' : $tag, $this->yystack[$this->yyidx + 0]->minor, array('if condition' => $this->yystack[$this->yyidx + -1]->minor));
    }

#line 2050 "Smarty_Compiler_Template_Php_Parser.php"
#line 390 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r36()
    {
        $this->_retvalue = $this->compiler->compileTag('for', array_merge($this->yystack[$this->yyidx + 0]->minor, array(array('start' => $this->yystack[$this->yyidx + -9]->minor), array('ifexp' => $this->yystack[$this->yyidx + -6]->minor), array('var' => $this->yystack[$this->yyidx + -3]->minor), array('step' => '=' . $this->yystack[$this->yyidx + -1]->minor))), 1);
    }

#line 2055 "Smarty_Compiler_Template_Php_Parser.php"
#line 393 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r37()
    {
        $len = strlen($this->yystack[$this->yyidx + -1]->minor);
        $this->_retvalue = $this->compiler->compileTag('for', array_merge($this->yystack[$this->yyidx + 0]->minor, array(array('start' => $this->yystack[$this->yyidx + -7]->minor), array('ifexp' => $this->yystack[$this->yyidx + -4]->minor), array('var' => substr($this->yystack[$this->yyidx + -1]->minor, 1, $len - 3)), array('step' => substr($this->yystack[$this->yyidx + -1]->minor, $len - 2)))), 1);
    }

#line 2061 "Smarty_Compiler_Template_Php_Parser.php"
#line 398 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r38()
    {
        $this->_retvalue = $this->compiler->compileTag('for', array_merge($this->yystack[$this->yyidx + 0]->minor, array(array('start' => $this->yystack[$this->yyidx + -3]->minor), array('to' => $this->yystack[$this->yyidx + -1]->minor))), 0);
    }

#line 2066 "Smarty_Compiler_Template_Php_Parser.php"
#line 402 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r39()
    {
        $this->_retvalue = $this->compiler->compileTag('for', array_merge($this->yystack[$this->yyidx + 0]->minor, array(array('start' => $this->yystack[$this->yyidx + -5]->minor), array('to' => $this->yystack[$this->yyidx + -3]->minor), array('step' => $this->yystack[$this->yyidx + -1]->minor))), 0);
    }

#line 2071 "Smarty_Compiler_Template_Php_Parser.php"
#line 407 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r40()
    {
        $this->_retvalue = $this->compiler->compileTag('foreach', $this->yystack[$this->yyidx + 0]->minor);
    }

#line 2076 "Smarty_Compiler_Template_Php_Parser.php"
#line 412 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r41()
    {
        $this->_retvalue = $this->compiler->compileTag('foreach', array_merge($this->yystack[$this->yyidx + 0]->minor, array(array('from' => $this->yystack[$this->yyidx + -3]->minor), array('item' => $this->yystack[$this->yyidx + -1]->minor))));
    }

#line 2081 "Smarty_Compiler_Template_Php_Parser.php"
#line 416 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r42()
    {
        $this->_retvalue = $this->compiler->compileTag('foreach', array_merge($this->yystack[$this->yyidx + 0]->minor, array(array('from' => $this->yystack[$this->yyidx + -5]->minor), array('item' => $this->yystack[$this->yyidx + -1]->minor), array('key' => $this->yystack[$this->yyidx + -3]->minor))));
    }

#line 2086 "Smarty_Compiler_Template_Php_Parser.php"
#line 429 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r45()
    {
        $this->_retvalue = $this->compiler->compileTag('setfilter', array(), array('modifier_list' => array(array_merge(array($this->yystack[$this->yyidx + -1]->minor), $this->yystack[$this->yyidx + 0]->minor))));
    }

#line 2091 "Smarty_Compiler_Template_Php_Parser.php"
#line 433 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r46()
    {
        $this->_retvalue = $this->compiler->compileTag('setfilter', array(), array('modifier_list' => array_merge(array(array_merge(array($this->yystack[$this->yyidx + -3]->minor), $this->yystack[$this->yyidx + -2]->minor)), $this->yystack[$this->yyidx + -1]->minor)));
    }

#line 2096 "Smarty_Compiler_Template_Php_Parser.php"
#line 440 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r47()
    {
        $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + 0]->minor . 'close', array());
    }

#line 2101 "Smarty_Compiler_Template_Php_Parser.php"
#line 444 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r48()
    {
        $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -1]->minor . 'close', array(), array('modifier_list' => $this->yystack[$this->yyidx + 0]->minor));
    }

#line 2106 "Smarty_Compiler_Template_Php_Parser.php"
#line 449 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r49()
    {
        $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -2]->minor . 'close', array(), array('object_method' => $this->yystack[$this->yyidx + 0]->minor));
    }

#line 2111 "Smarty_Compiler_Template_Php_Parser.php"
#line 453 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r50()
    {
        $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -3]->minor . 'close', array(), array('object_method' => $this->yystack[$this->yyidx + -1]->minor, 'modifier_list' => $this->yystack[$this->yyidx + 0]->minor));
    }

#line 2116 "Smarty_Compiler_Template_Php_Parser.php"
#line 461 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r51()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;
        $this->_retvalue[] = $this->yystack[$this->yyidx + 0]->minor;
    }

#line 2122 "Smarty_Compiler_Template_Php_Parser.php"
#line 467 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r52()
    {
        $this->_retvalue = array($this->yystack[$this->yyidx + 0]->minor);
    }

#line 2127 "Smarty_Compiler_Template_Php_Parser.php"
#line 472 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r53()
    {
        $this->_retvalue = array();
    }

#line 2132 "Smarty_Compiler_Template_Php_Parser.php"
#line 477 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r54()
    {
        if (preg_match('~^true$~i', $this->yystack[$this->yyidx + 0]->minor)) {
            $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor => 'true');
        } elseif (preg_match('~^false$~i', $this->yystack[$this->yyidx + 0]->minor)) {
            $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor => 'false');
        } elseif (preg_match('~^null$~i', $this->yystack[$this->yyidx + 0]->minor)) {
            $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor => 'null');
        } else {
            $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor => "'" . $this->yystack[$this->yyidx + 0]->minor . "'");
        }
    }

#line 2145 "Smarty_Compiler_Template_Php_Parser.php"
#line 489 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r55()
    {
        $this->_retvalue = array(trim($this->yystack[$this->yyidx + -1]->minor, " =\n\r\t") => $this->yystack[$this->yyidx + 0]->minor);
    }

#line 2150 "Smarty_Compiler_Template_Php_Parser.php"
#line 497 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r56()
    {
        $this->_retvalue = "'" . $this->yystack[$this->yyidx + 0]->minor . "'";
    }

#line 2155 "Smarty_Compiler_Template_Php_Parser.php"
#line 522 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r59()
    {
        $this->yystack[$this->yyidx + -2]->minor[] = $this->yystack[$this->yyidx + 0]->minor;
        $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor;
    }

#line 2161 "Smarty_Compiler_Template_Php_Parser.php"
#line 528 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r60()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor;
        $this->_retvalue['value'] = $this->yystack[$this->yyidx + 0]->minor;
    }

#line 2167 "Smarty_Compiler_Template_Php_Parser.php"
#line 553 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r64()
    {
        $this->_retvalue = '$this->smarty->getStreamVariable(\'' . $this->yystack[$this->yyidx + -2]->minor . '://' . $this->yystack[$this->yyidx + 0]->minor . '\')';
    }

#line 2172 "Smarty_Compiler_Template_Php_Parser.php"
#line 558 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r65()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor . trim($this->yystack[$this->yyidx + -1]->minor) . $this->yystack[$this->yyidx + 0]->minor;
    }

#line 2177 "Smarty_Compiler_Template_Php_Parser.php"
#line 577 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r68()
    {
        $this->_retvalue = $this->compiler->compileTag('Internal_Modifier', array(), array('value' => $this->yystack[$this->yyidx + -1]->minor, 'modifier_list' => $this->yystack[$this->yyidx + 0]->minor));
    }

#line 2182 "Smarty_Compiler_Template_Php_Parser.php"
#line 583 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r69()
    {
        $operator = strtolower(trim($this->yystack[$this->yyidx + -1]->minor));
        if (isset($this->opMap[$operator])) {
            $operator = $this->opMap[$operator];
        }
        $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor . " {$operator} " . $this->yystack[$this->yyidx + 0]->minor;
    }

#line 2191 "Smarty_Compiler_Template_Php_Parser.php"
#line 595 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r70()
    {
        $this->_retvalue = 'in_array(' . $this->yystack[$this->yyidx + -2]->minor . ',(array)' . $this->yystack[$this->yyidx + 0]->minor . ')';
    }

#line 2196 "Smarty_Compiler_Template_Php_Parser.php"
#line 607 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r72()
    {
        $this->_retvalue = '!(' . $this->yystack[$this->yyidx + -2]->minor . ' % ' . $this->yystack[$this->yyidx + 0]->minor . ')';
    }

#line 2201 "Smarty_Compiler_Template_Php_Parser.php"
#line 611 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r73()
    {
        $this->_retvalue = '(' . $this->yystack[$this->yyidx + -2]->minor . ' % ' . $this->yystack[$this->yyidx + 0]->minor . ')';
    }

#line 2206 "Smarty_Compiler_Template_Php_Parser.php"
#line 615 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r74()
    {
        $this->_retvalue = '!(1 & ' . $this->yystack[$this->yyidx + -1]->minor . ')';
    }

#line 2211 "Smarty_Compiler_Template_Php_Parser.php"
#line 619 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r75()
    {
        $this->_retvalue = '(1 & ' . $this->yystack[$this->yyidx + -1]->minor . ')';
    }

#line 2216 "Smarty_Compiler_Template_Php_Parser.php"
#line 623 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r76()
    {
        $this->_retvalue = '!(1 & ' . $this->yystack[$this->yyidx + -2]->minor . ' / ' . $this->yystack[$this->yyidx + 0]->minor . ')';
    }

#line 2221 "Smarty_Compiler_Template_Php_Parser.php"
#line 627 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r77()
    {
        $this->_retvalue = '(1 & ' . $this->yystack[$this->yyidx + -2]->minor . ' / ' . $this->yystack[$this->yyidx + 0]->minor . ')';
    }

#line 2226 "Smarty_Compiler_Template_Php_Parser.php"
#line 647 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r82()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor . $this->yystack[$this->yyidx + -1]->minor . $this->yystack[$this->yyidx + 0]->minor;
    }

#line 2231 "Smarty_Compiler_Template_Php_Parser.php"
#line 655 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r84()
    {
        $this->prefix_number++;
        $this->compiler->prefix_code[] = '$_tmp' . $this->prefix_number . '=' . $this->yystack[$this->yyidx + 0]->minor . ';';
        $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor . $this->yystack[$this->yyidx + -1]->minor . '$_tmp' . $this->prefix_number;
    }

#line 2238 "Smarty_Compiler_Template_Php_Parser.php"
#line 668 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r86()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + -6]->minor . ' ? ' . $this->compiler->compileVariable("'" . $this->yystack[$this->yyidx + -2]->minor . "'") . ' : ' . $this->yystack[$this->yyidx + 0]->minor;
    }

#line 2243 "Smarty_Compiler_Template_Php_Parser.php"
#line 672 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r87()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + -5]->minor . ' ? ' . $this->yystack[$this->yyidx + -2]->minor . ' : ' . $this->yystack[$this->yyidx + 0]->minor;
    }

#line 2248 "Smarty_Compiler_Template_Php_Parser.php"
#line 688 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r90()
    {
        $operator = strtolower(trim($this->yystack[$this->yyidx + -1]->minor));
        if (isset($this->opMap[$operator])) {
            $operator = $this->opMap[$operator];
        }

        $this->_retvalue = $operator . $this->yystack[$this->yyidx + 0]->minor;
    }

#line 2258 "Smarty_Compiler_Template_Php_Parser.php"
#line 711 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r94()
    {
        if (preg_match('~^true$~i', $this->yystack[$this->yyidx + 0]->minor)) {
            $this->_retvalue = 'true';
        } elseif (preg_match('~^false$~i', $this->yystack[$this->yyidx + 0]->minor)) {
            $this->_retvalue = 'false';
        } elseif (preg_match('~^null$~i', $this->yystack[$this->yyidx + 0]->minor)) {
            $this->_retvalue = 'null';
        } else {
            $this->_retvalue = "'" . $this->yystack[$this->yyidx + 0]->minor . "'";
        }
    }

#line 2271 "Smarty_Compiler_Template_Php_Parser.php"
#line 729 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r96()
    {
        $this->_retvalue = "(" . $this->yystack[$this->yyidx + -1]->minor . ")";
    }

#line 2276 "Smarty_Compiler_Template_Php_Parser.php"
#line 743 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r99()
    {
        $len = strlen($this->yystack[$this->yyidx + 0]->minor);
        $this->_retvalue = '$_scope->_tpl_vars->' . substr($this->yystack[$this->yyidx + 0]->minor, 1, $len - 3) . '->value' . substr($this->yystack[$this->yyidx + 0]->minor, $len - 2);
    }

#line 2282 "Smarty_Compiler_Template_Php_Parser.php"
#line 749 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r100()
    {
        if (!$this->security || isset($this->compiler->context->smarty->_registered['class'][$this->yystack[$this->yyidx + -1]->minor]) || $this->compiler->context->smarty->security_policy->isTrustedStaticClass($this->yystack[$this->yyidx + -1]->minor, $this->compiler)) {
            if (isset($this->compiler->context->smarty->_registered['class'][$this->yystack[$this->yyidx + -1]->minor])) {
                $this->_retvalue = $this->compiler->context->smarty->_registered['class'][$this->yystack[$this->yyidx + -1]->minor] . $this->yystack[$this->yyidx + 0]->minor;
            } else {
                $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor . $this->yystack[$this->yyidx + 0]->minor;
            }
        } else {
            $this->compiler->error("static class '" . $this->yystack[$this->yyidx + -1]->minor . "' is undefined or not allowed by security setting");
        }
    }

#line 2295 "Smarty_Compiler_Template_Php_Parser.php"
#line 771 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r103()
    {
        $this->_retvalue = $this->compiler->compileVariable($this->yystack[$this->yyidx + -1]->minor) . $this->yystack[$this->yyidx + 0]->minor;
    }

#line 2300 "Smarty_Compiler_Template_Php_Parser.php"
#line 776 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r104()
    {
        $this->prefix_number++;
        $code = new Smarty_Compiler_Code();
        $code->iniTagCode($this->compiler);
        $code->php("ob_start();")->newline();
        $code->mergeCode($this->yystack[$this->yyidx + 0]->minor);
        $code->php("\$_tmp{$this->prefix_number} = ob_get_clean();")->newline();
        $this->compiler->prefix_code[] = $code;
        $this->_retvalue = '$_tmp' . $this->prefix_number;
    }

#line 2312 "Smarty_Compiler_Template_Php_Parser.php"
#line 797 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r106()
    {
        if ($this->yystack[$this->yyidx + 0]->minor['var'] == 'smarty') {
            $this->_retvalue = $this->compiler->compileTag('Internal_SpecialVariable', array(), $this->yystack[$this->yyidx + 0]->minor['smarty_internal_index']);
        } else {
            $this->_retvalue = $this->compiler->compileVariable($this->yystack[$this->yyidx + 0]->minor['var']) . $this->yystack[$this->yyidx + 0]->minor['smarty_internal_index'];
        }
    }

#line 2321 "Smarty_Compiler_Template_Php_Parser.php"
#line 806 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r107()
    {
        $this->_retvalue = '$_scope->_tpl_vars->' . trim($this->yystack[$this->yyidx + -2]->minor, "'") . '->' . $this->yystack[$this->yyidx + 0]->minor;
    }

#line 2326 "Smarty_Compiler_Template_Php_Parser.php"
#line 821 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r109()
    {
        $var = trim($this->yystack[$this->yyidx + -2]->minor, '\'');
        $this->_retvalue = "\$_scope->_tpl_vars->___config_var_{$var}" . $this->yystack[$this->yyidx + 0]->minor;
    }

#line 2332 "Smarty_Compiler_Template_Php_Parser.php"
#line 830 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r110()
    {
        $this->_retvalue = "\$_scope->_tpl_vars->___config_var_{{$this->yystack[$this->yyidx + -2]->minor}}" . $this->yystack[$this->yyidx + 0]->minor;
    }

#line 2337 "Smarty_Compiler_Template_Php_Parser.php"
#line 834 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r111()
    {
        $this->_retvalue = array('var' => $this->yystack[$this->yyidx + -1]->minor, 'smarty_internal_index' => $this->yystack[$this->yyidx + 0]->minor);
    }

#line 2342 "Smarty_Compiler_Template_Php_Parser.php"
#line 847 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r113()
    {
        return;
    }

#line 2347 "Smarty_Compiler_Template_Php_Parser.php"
#line 853 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r114()
    {
        $this->_retvalue = '[' . $this->compiler->compileVariable($this->yystack[$this->yyidx + 0]->minor) . ']';
    }

#line 2352 "Smarty_Compiler_Template_Php_Parser.php"
#line 857 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r115()
    {
        $this->_retvalue = '[' . $this->compiler->compileVariable($this->yystack[$this->yyidx + -2]->minor) . '->' . $this->yystack[$this->yyidx + 0]->minor . ']';
    }

#line 2357 "Smarty_Compiler_Template_Php_Parser.php"
#line 861 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r116()
    {
        $this->_retvalue = "['" . $this->yystack[$this->yyidx + 0]->minor . "']";
    }

#line 2362 "Smarty_Compiler_Template_Php_Parser.php"
#line 866 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r117()
    {
        $this->_retvalue = "[" . implode('][', explode('.', $this->yystack[$this->yyidx + 0]->minor)) . "]";
    }

#line 2367 "Smarty_Compiler_Template_Php_Parser.php"
#line 870 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r118()
    {
        $this->_retvalue = "[" . $this->yystack[$this->yyidx + 0]->minor . "]";
    }

#line 2372 "Smarty_Compiler_Template_Php_Parser.php"
#line 875 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r119()
    {
        $this->_retvalue = '[' . $this->compiler->compileTag('Internal_SpecialVariable', array(), '[\'section\'][\'' . $this->yystack[$this->yyidx + -1]->minor . '\'][\'index\']') . ']';
    }

#line 2377 "Smarty_Compiler_Template_Php_Parser.php"
#line 879 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r120()
    {
        $this->_retvalue = '[' . $this->compiler->compileTag('Internal_SpecialVariable', array(), '[\'section\'][\'' . $this->yystack[$this->yyidx + -3]->minor . '\'][\'' . $this->yystack[$this->yyidx + -1]->minor . '\']') . ']';
    }

#line 2382 "Smarty_Compiler_Template_Php_Parser.php"
#line 884 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r121()
    {
        $this->_retvalue = "[" . $this->yystack[$this->yyidx + -1]->minor . "]";
    }

#line 2387 "Smarty_Compiler_Template_Php_Parser.php"
#line 889 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r122()
    {
        $this->_retvalue = '[]';
    }

#line 2392 "Smarty_Compiler_Template_Php_Parser.php"
#line 893 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r123()
    {
        $this->_retvalue = '::' . $this->yystack[$this->yyidx + 0]->minor;
    }

#line 2397 "Smarty_Compiler_Template_Php_Parser.php"
#line 905 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r125()
    {
        $this->prefix_number++;
        $code = new Smarty_Compiler_Code;
        $code->iniTagCode($this->compiler);
        $code->php('$_tmp' . $this->prefix_number . '=' . $this->yystack[$this->yyidx + 0]->minor . ";\n");
        $this->compiler->prefix_code[] = $code;
        $this->_retvalue = '$_tmp' . $this->prefix_number;
    }

#line 2407 "Smarty_Compiler_Template_Php_Parser.php"
#line 915 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r126()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor . '.' . $this->yystack[$this->yyidx + 0]->minor;
    }

#line 2412 "Smarty_Compiler_Template_Php_Parser.php"
#line 920 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r127()
    {
        $this->_retvalue = '\'' . $this->yystack[$this->yyidx + 0]->minor . '\'';
    }

#line 2417 "Smarty_Compiler_Template_Php_Parser.php"
#line 925 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r128()
    {
        $this->_retvalue = '(' . $this->yystack[$this->yyidx + 0]->minor . ')';
    }

#line 2422 "Smarty_Compiler_Template_Php_Parser.php"
#line 932 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r129()
    {
        if ($this->yystack[$this->yyidx + -1]->minor['var'] == '\'smarty\'') {
            $this->_retvalue = $this->compiler->compileTag('Internal_SpecialVariable', array(), $this->yystack[$this->yyidx + -1]->minor['smarty_internal_index']) . $this->yystack[$this->yyidx + 0]->minor;
        } else {
            $this->_retvalue = $this->compiler->compileVariable($this->yystack[$this->yyidx + -1]->minor['var']) . $this->yystack[$this->yyidx + -1]->minor['smarty_internal_index'] . $this->yystack[$this->yyidx + 0]->minor;
        }
    }

#line 2431 "Smarty_Compiler_Template_Php_Parser.php"
#line 941 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r130()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;
    }

#line 2436 "Smarty_Compiler_Template_Php_Parser.php"
#line 946 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r131()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor . $this->yystack[$this->yyidx + 0]->minor;
    }

#line 2441 "Smarty_Compiler_Template_Php_Parser.php"
#line 951 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r132()
    {
        if ($this->security && substr($this->yystack[$this->yyidx + -1]->minor, 0, 1) == '_') {
            $this->compiler->error(self::Err1);
        }
        $this->_retvalue = '->' . $this->yystack[$this->yyidx + -1]->minor . $this->yystack[$this->yyidx + 0]->minor;
    }

#line 2449 "Smarty_Compiler_Template_Php_Parser.php"
#line 958 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r133()
    {
        if ($this->security) {
            $this->compiler->error(self::Err2);
        }
        $this->_retvalue = '->{' . $this->yystack[$this->yyidx + 0]->minor . '}';
    }

#line 2457 "Smarty_Compiler_Template_Php_Parser.php"
#line 965 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r134()
    {
        if ($this->security) {
            $this->compiler->error(self::Err2);
        }
        $this->_retvalue = '->{' . $this->yystack[$this->yyidx + -1]->minor . $this->yystack[$this->yyidx + 0]->minor . '}';
    }

#line 2465 "Smarty_Compiler_Template_Php_Parser.php"
#line 972 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r135()
    {
        if ($this->security) {
            $this->compiler->error(self::Err2);
        }
        $this->_retvalue = '->{\'' . $this->yystack[$this->yyidx + -2]->minor . '\'.' . $this->yystack[$this->yyidx + -1]->minor . $this->yystack[$this->yyidx + 0]->minor . '}';
    }

#line 2473 "Smarty_Compiler_Template_Php_Parser.php"
#line 980 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r136()
    {
        $this->_retvalue = '->' . $this->yystack[$this->yyidx + 0]->minor;
    }

#line 2478 "Smarty_Compiler_Template_Php_Parser.php"
#line 988 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r137()
    {
        if (!$this->security || $this->compiler->context->smarty->security_policy->isTrustedPhpFunction($this->yystack[$this->yyidx + -3]->minor, $this->compiler)) {
            if (strcasecmp($this->yystack[$this->yyidx + -3]->minor, 'isset') === 0 || strcasecmp($this->yystack[$this->yyidx + -3]->minor, 'empty') === 0 || strcasecmp($this->yystack[$this->yyidx + -3]->minor, 'array') === 0 || is_callable($this->yystack[$this->yyidx + -3]->minor)) {
                $func_name = strtolower($this->yystack[$this->yyidx + -3]->minor);
                if ($func_name == 'isset') {
                    if (count($this->yystack[$this->yyidx + -1]->minor) == 0) {
                        $this->compiler->error('Illegal number of paramer in "isset()"');
                    }
                    $par = implode(',', $this->yystack[$this->yyidx + -1]->minor);
                    preg_match('/\$_scope->_tpl_vars->([0-9]*[a-zA-Z_]\w*)(.*)/', $par, $match);
                    if (isset($match[1])) {
                        $search = array('/\$_scope->_tpl_vars->([0-9]*[a-zA-Z_]\w*)/', '/->value.*/');
                        $replace = array('$this->_getVariable(\'\1\', null, false, false)', '');
                        $this->prefix_number++;
                        $code = new Smarty_Compiler_Code();
                        $code->iniTagCode($this->compiler);
                        $code->php("\$_tmp{$this->prefix_number} = " . preg_replace($search, $replace, $par) . ';')->newline();
                        $this->compiler->prefix_code[] = $code;
                        $isset_par = '$_tmp' . $this->prefix_number . $match[2];
                    } else {
                        $this->prefix_number++;
                        $code = new Smarty_Compiler_Code();
                        $code->iniTagCode($this->compiler);
                        $code->php("\$_tmp{$this->prefix_number} = " . $par . ';')->newline();
                        $this->compiler->prefix_code[] = $code;
                        $isset_par = '$_tmp' . $this->prefix_number;
                    }
                    $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(" . $isset_par . ")";
                } elseif (in_array($func_name, array('empty', 'reset', 'current', 'end', 'prev', 'next'))) {
                    if (count($this->yystack[$this->yyidx + -1]->minor) != 1) {
                        $this->compiler->error("Illegal number of paramer in \"{$func_name}\"");
                    }
                    $this->_retvalue = $func_name . '(' . $this->yystack[$this->yyidx + -1]->minor[0] . ')';
                } else {
                    $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(" . implode(',', $this->yystack[$this->yyidx + -1]->minor) . ")";
                }
            } else {
                $this->compiler->error("unknown function \"" . $this->yystack[$this->yyidx + -3]->minor . "\"");
            }
        }
    }

#line 2521 "Smarty_Compiler_Template_Php_Parser.php"
#line 1033 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r138()
    {
        if (!$this->security || $this->compiler->context->smarty->security_policy->isTrustedPhpFunction($this->yystack[$this->yyidx + -3]->minor, $this->compiler)) {
            if (is_callable($this->yystack[$this->yyidx + -3]->minor)) {
                $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(" . implode(',', $this->yystack[$this->yyidx + -1]->minor) . ")";
            } else {
                $this->compiler->error("unknown function \"" . $this->yystack[$this->yyidx + -3]->minor . "\"");
            }
        }
    }

#line 2532 "Smarty_Compiler_Template_Php_Parser.php"
#line 1046 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r139()
    {
        if ($this->security && substr($this->yystack[$this->yyidx + -3]->minor, 0, 1) == '_') {
            $this->compiler->error(self::Err1);
        }
        $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(" . implode(',', $this->yystack[$this->yyidx + -1]->minor) . ")";
    }

#line 2540 "Smarty_Compiler_Template_Php_Parser.php"
#line 1053 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r140()
    {
        if ($this->security) {
            $this->compiler->error(self::Err2);
        }
        $this->prefix_number++;
        $code = new Smarty_Compiler_Code();
        $code->iniTagCode($this->compiler);
        $code->php("\$_tmp{$this->prefix_number} = " . $this->compiler->compileVariable("'" . $this->yystack[$this->yyidx + -3]->minor . "'") . ';')->newline();
        $this->compiler->prefix_code[] = $code;
        $this->_retvalue = '$_tmp' . $this->prefix_number . '(' . implode(',', $this->yystack[$this->yyidx + -1]->minor) . ')';
    }

#line 2553 "Smarty_Compiler_Template_Php_Parser.php"
#line 1067 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r141()
    {
        $this->_retvalue = array_merge($this->yystack[$this->yyidx + -2]->minor, array($this->yystack[$this->yyidx + 0]->minor));
    }

#line 2558 "Smarty_Compiler_Template_Php_Parser.php"
#line 1087 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r144()
    {
        $this->_retvalue = array_merge($this->yystack[$this->yyidx + -2]->minor, array(array_merge($this->yystack[$this->yyidx + -1]->minor, $this->yystack[$this->yyidx + 0]->minor)));
    }

#line 2563 "Smarty_Compiler_Template_Php_Parser.php"
#line 1091 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r145()
    {
        $this->_retvalue = array(array_merge($this->yystack[$this->yyidx + -1]->minor, $this->yystack[$this->yyidx + 0]->minor));
    }

#line 2568 "Smarty_Compiler_Template_Php_Parser.php"
#line 1099 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r147()
    {
        $this->_retvalue = array($this->yystack[$this->yyidx + 0]->minor);
    }

#line 2573 "Smarty_Compiler_Template_Php_Parser.php"
#line 1107 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r148()
    {
        $this->_retvalue = array_merge($this->yystack[$this->yyidx + -1]->minor, $this->yystack[$this->yyidx + 0]->minor);
    }

#line 2578 "Smarty_Compiler_Template_Php_Parser.php"
#line 1137 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r154()
    {
        $this->_retvalue = '$' . $this->yystack[$this->yyidx + -1]->minor . $this->yystack[$this->yyidx + 0]->minor;
    }

#line 2583 "Smarty_Compiler_Template_Php_Parser.php"
#line 1142 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r155()
    {
        $this->_retvalue = '$' . $this->yystack[$this->yyidx + -2]->minor . $this->yystack[$this->yyidx + -1]->minor . $this->yystack[$this->yyidx + 0]->minor;
    }

#line 2588 "Smarty_Compiler_Template_Php_Parser.php"
#line 1151 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r156()
    {
        $this->_retvalue = 'array(' . $this->yystack[$this->yyidx + -1]->minor . ')';
    }

#line 2593 "Smarty_Compiler_Template_Php_Parser.php"
#line 1159 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r158()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor . ',' . $this->yystack[$this->yyidx + 0]->minor;
    }

#line 2598 "Smarty_Compiler_Template_Php_Parser.php"
#line 1167 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r160()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor . '=>' . $this->yystack[$this->yyidx + 0]->minor;
    }

#line 2603 "Smarty_Compiler_Template_Php_Parser.php"
#line 1171 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r161()
    {
        $this->_retvalue = '\'' . $this->yystack[$this->yyidx + -2]->minor . '\'=>' . $this->yystack[$this->yyidx + 0]->minor;
    }

#line 2608 "Smarty_Compiler_Template_Php_Parser.php"
#line 1183 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r163()
    {
        $this->_retvalue = "''";
    }

#line 2613 "Smarty_Compiler_Template_Php_Parser.php"
#line 1192 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r165()
    {
        if ($this->yystack[$this->yyidx + 0]->minor === false) {
            $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;
        } else {
            $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor . '.' . $this->yystack[$this->yyidx + 0]->minor;
        }
    }

#line 2622 "Smarty_Compiler_Template_Php_Parser.php"
#line 1200 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r166()
    {
        if ($this->yystack[$this->yyidx + 0]->minor === false) {
            $this->_retvalue = "''";
        } else {
            $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;
        }
    }

#line 2631 "Smarty_Compiler_Template_Php_Parser.php"
#line 1208 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r167()
    {
        if (empty($this->db_quote_code_buffer)) {
            $this->_retvalue = '(string)' . $this->yystack[$this->yyidx + -1]->minor;
        } else {
            $this->db_quote_code_buffer .= 'echo (string)' . $this->yystack[$this->yyidx + -1]->minor . ';';
            $this->_retvalue = false;
        }
    }

#line 2641 "Smarty_Compiler_Template_Php_Parser.php"
#line 1217 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r168()
    {
        if (empty($this->db_quote_code_buffer)) {
            $this->_retvalue = '(string)(' . $this->yystack[$this->yyidx + -1]->minor . ')';
        } else {
            $this->db_quote_code_buffer .= 'echo (string)(' . $this->yystack[$this->yyidx + -1]->minor . ');';
            $this->_retvalue = false;
        }
    }

#line 2651 "Smarty_Compiler_Template_Php_Parser.php"
#line 1226 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r169()
    {
        if (empty($this->db_quote_code_buffer)) {
            $this->_retvalue = '(string)$_scope->_tpl_vars->' . substr($this->yystack[$this->yyidx + 0]->minor, 1) . '->value';
        } else {
            $this->db_quote_code_buffer .= 'echo (string)$_scope->_tpl_vars->' . substr($this->yystack[$this->yyidx + 0]->minor, 1) . '->value;';
            $this->_retvalue = false;
        }
    }

#line 2661 "Smarty_Compiler_Template_Php_Parser.php"
#line 1244 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r171()
    {
        if (empty($this->db_quote_code_buffer)) {
            $this->_retvalue = '(string)(' . $this->yystack[$this->yyidx + 0]->minor . ')';
        } else {
            $this->db_quote_code_buffer .= 'echo (string)(' . $this->yystack[$this->yyidx + 0]->minor . ');';
            $this->_retvalue = false;
        }
    }

#line 2671 "Smarty_Compiler_Template_Php_Parser.php"
#line 1253 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r172()
    {
        if (empty($this->db_quote_code_buffer)) {
            $this->db_quote_code_buffer = "ob_start();\n";
        }
        $this->db_quote_code_buffer .= $this->yystack[$this->yyidx + -1]->minor->buffer;
        if ($this->block_nesting_level == count($this->compiler->_tag_stack)) {
            $this->prefix_number++;
            $code = new Smarty_Compiler_Code();
            $code->iniTagCode($this->compiler);
            $code->formatPHP($this->db_quote_code_buffer . ' $_tmp' . $this->prefix_number . '=ob_get_clean();')->newline();
            $this->compiler->prefix_code[] = $code;
            $this->db_quote_code_buffer = '';
            $this->_retvalue = '$_tmp' . $this->prefix_number;
        } else {
            $this->_retvalue = false;
        }

    }

#line 2691 "Smarty_Compiler_Template_Php_Parser.php"
#line 1272 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r173()
    {
        if (empty($this->db_quote_code_buffer)) {
            $this->_retvalue = '"' . $this->yystack[$this->yyidx + 0]->minor . '"';
        } else {
            $this->db_quote_code_buffer .= 'echo ' . sprintf('"%s"', addcslashes($this->yystack[$this->yyidx + 0]->minor, "\0\t\n\r\"\$\\")) . ';';
            $this->_retvalue = false;
        }
    }

#line 2701 "Smarty_Compiler_Template_Php_Parser.php"
#line 1281 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r174()
    {
        $this->compiler->lex->yypopstate();
        $this->_retvalue = '';
    }

#line 2707 "Smarty_Compiler_Template_Php_Parser.php"

    private $_retvalue;

    public function yy_reduce($yyruleno)
    {
        $yymsp = $this->yystack[$this->yyidx];
        if (self::$yyTraceFILE && $yyruleno >= 0
            && $yyruleno < count(self::$yyRuleName)
        ) {
            fprintf(self::$yyTraceFILE, "%sReduce (%d) [%s].\n",
                self::$yyTracePrompt, $yyruleno,
                self::$yyRuleName[$yyruleno]);
        }

        $this->_retvalue = $yy_lefthand_side = null;
        if (array_key_exists($yyruleno, self::$yyReduceMap)) {
            // call the action
            $this->_retvalue = null;
            $this->{'yy_r' . self::$yyReduceMap[$yyruleno]}();
            $yy_lefthand_side = $this->_retvalue;
        }
        $yygoto = self::$yyRuleInfo[$yyruleno]['lhs'];
        $yysize = self::$yyRuleInfo[$yyruleno]['rhs'];
        $this->yyidx -= $yysize;
        for ($i = $yysize; $i; $i--) {
            // pop all of the right-hand side parameters
            array_pop($this->yystack);
        }
        $yyact = $this->yy_find_reduce_action($this->yystack[$this->yyidx]->stateno, $yygoto);
        if ($yyact < self::YYNSTATE) {
            if (!self::$yyTraceFILE && $yysize) {
                $this->yyidx++;
                $x = new TP_yyStackEntry;
                $x->stateno = $yyact;
                $x->major = $yygoto;
                $x->minor = $yy_lefthand_side;
                $this->yystack[$this->yyidx] = $x;
            } else {
                $this->yy_shift($yyact, $yygoto, $yy_lefthand_side);
            }
        } elseif ($yyact == self::YYNSTATE + self::YYNRULE + 1) {
            $this->yy_accept();
        }
    }

    public function yy_parse_failed()
    {
        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sFail!\n", self::$yyTracePrompt);
        }
        while ($this->yyidx >= 0) {
            $this->yy_pop_parser_stack();
        }
    }

    public function yy_syntax_error($yymajor, $TOKEN)
    {
#line 64 "Smarty_Compiler_Template_Php_Parser.y"

        $this->internalError = true;
        // expected token from parser
        $error_text = "<br> Syntax error :Unexpected '<b>{$this->lex->value}</b>'";
        if (count($this->yy_get_expected_tokens($yymajor)) <= 4) {
            foreach ($this->yy_get_expected_tokens($yymajor) as $token) {
                $exp_token = $this->yyTokenName[$token];
                if (isset($this->lex->smarty_token_names[$exp_token])) {
                    // token type from lexer
                    $expect[] = "'<b>{$this->lex->smarty_token_names[$exp_token]}</b>'";
                } else {
                    // otherwise internal token name
                    $expect[] = $this->yyTokenName[$token];
                }
            }
            $error_text .= ', expected one of: ' . implode(' , ', $expect) . '<br>';
        }
        $this->compiler->error($error_text);
#line 2784 "Smarty_Compiler_Template_Php_Parser.php"
    }

    public function yy_accept()
    {
        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sAccept!\n", self::$yyTracePrompt);
        }
        while ($this->yyidx >= 0) {
            $stack = $this->yy_pop_parser_stack();
        }
#line 56 "Smarty_Compiler_Template_Php_Parser.y"

        $this->successful = !$this->internalError;
        $this->internalError = false;
        $this->retvalue = $this->_retvalue;
        //echo $this->retvalue."\n\n";
#line 2801 "Smarty_Compiler_Template_Php_Parser.php"
    }

    public function doParse($yymajor, $yytokenvalue)
    {
        $yyerrorhit = 0; /* True if yymajor has invoked an error */

        if ($this->yyidx === null || $this->yyidx < 0) {
            $this->yyidx = 0;
            $this->yyerrcnt = -1;
            $x = new TP_yyStackEntry;
            $x->stateno = 0;
            $x->major = 0;
            $this->yystack = array();
            array_push($this->yystack, $x);
        }
        $yyendofinput = ($yymajor == 0);

        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sInput %s\n",
                self::$yyTracePrompt, $this->yyTokenName[$yymajor]);
        }

        do {
            $yyact = $this->yy_find_shift_action($yymajor);
            if ($yymajor < self::YYERRORSYMBOL &&
                !$this->yy_is_expected_token($yymajor)
            ) {
                // force a syntax error
                $yyact = self::YY_ERROR_ACTION;
            }
            if ($yyact < self::YYNSTATE) {
                $this->yy_shift($yyact, $yymajor, $yytokenvalue);
                $this->yyerrcnt--;
                if ($yyendofinput && $this->yyidx >= 0) {
                    $yymajor = 0;
                } else {
                    $yymajor = self::YYNOCODE;
                }
            } elseif ($yyact < self::YYNSTATE + self::YYNRULE) {
                $this->yy_reduce($yyact - self::YYNSTATE);
            } elseif ($yyact == self::YY_ERROR_ACTION) {
                if (self::$yyTraceFILE) {
                    fprintf(self::$yyTraceFILE, "%sSyntax Error!\n",
                        self::$yyTracePrompt);
                }
                if (self::YYERRORSYMBOL) {
                    if ($this->yyerrcnt < 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $yymx = $this->yystack[$this->yyidx]->major;
                    if ($yymx == self::YYERRORSYMBOL || $yyerrorhit) {
                        if (self::$yyTraceFILE) {
                            fprintf(self::$yyTraceFILE, "%sDiscard input token %s\n",
                                self::$yyTracePrompt, $this->yyTokenName[$yymajor]);
                        }
                        $this->yy_destructor($yymajor, $yytokenvalue);
                        $yymajor = self::YYNOCODE;
                    } else {
                        while ($this->yyidx >= 0 &&
                            $yymx != self::YYERRORSYMBOL &&
                            ($yyact = $this->yy_find_shift_action(self::YYERRORSYMBOL)) >= self::YYNSTATE
                        ) {
                            $this->yy_pop_parser_stack();
                        }
                        if ($this->yyidx < 0 || $yymajor == 0) {
                            $this->yy_destructor($yymajor, $yytokenvalue);
                            $this->yy_parse_failed();
                            $yymajor = self::YYNOCODE;
                        } elseif ($yymx != self::YYERRORSYMBOL) {
                            $u2 = 0;
                            $this->yy_shift($yyact, self::YYERRORSYMBOL, $u2);
                        }
                    }
                    $this->yyerrcnt = 3;
                    $yyerrorhit = 1;
                } else {
                    if ($this->yyerrcnt <= 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $this->yyerrcnt = 3;
                    $this->yy_destructor($yymajor, $yytokenvalue);
                    if ($yyendofinput) {
                        $this->yy_parse_failed();
                    }
                    $yymajor = self::YYNOCODE;
                }
            } else {
                $this->yy_accept();
                $yymajor = self::YYNOCODE;
            }
        } while ($yymajor != self::YYNOCODE && $this->yyidx >= 0);
    }
}
