<?php
/**
* Smarty Internal Plugin Template_parser
*
* This is the template parser.
* It is generated from the internal.template_parser.y file
* @package Smarty
* @subpackage Compiler
* @author Uwe Tews
*/
class TP_yyToken implements ArrayAccess
{
    public $string = '';
    public $metadata = array();

    public function __construct($s, $m = array())
    {
        if ($s instanceof TP_yyToken) {
            $this->string = $s->string;
            $this->metadata = $s->metadata;
        } else {
            $this->string = (string) $s;
            if ($m instanceof TP_yyToken) {
                $this->metadata = $m->metadata;
            } elseif (is_array($m)) {
                $this->metadata = $m;
            }
        }
    }

    public function __toString()
    {
        return $this->_string;
    }

    public function offsetExists($offset)
    {
        return isset($this->metadata[$offset]);
    }

    public function offsetGet($offset)
    {
        return $this->metadata[$offset];
    }

    public function offsetSet($offset, $value)
    {
        if ($offset === null) {
            if (isset($value[0])) {
                $x = ($value instanceof TP_yyToken) ?
                    $value->metadata : $value;
                $this->metadata = array_merge($this->metadata, $x);

                return;
            }
            $offset = count($this->metadata);
        }
        if ($value === null) {
            return;
        }
        if ($value instanceof TP_yyToken) {
            if ($value->metadata) {
                $this->metadata[$offset] = $value->metadata;
            }
        } elseif ($value) {
            $this->metadata[$offset] = $value;
        }
    }

    public function offsetUnset($offset)
    {
        unset($this->metadata[$offset]);
    }
}

class TP_yyStackEntry
{
    public $stateno;       /* The state-number */
    public $major;         /* The major token value.  This is the code
                     ** number for the token at this stack level */
    public $minor; /* The user-supplied minor token value.  This
                     ** is the value of the token  */
};


#line 13 "Smarty_Compiler_Template_Php_Parser.y"
class Smarty_Compiler_Template_PHP_Parser extends Smarty_Exception_Magic#line 80 "Smarty_Compiler_Template_Php_Parser.php"
{
#line 15 "Smarty_Compiler_Template_Php_Parser.y"

    const Err1 = "Security error: Call to private object member not allowed";
    const Err2 = "Security error: Call to dynamic object member not allowed";
    const Err3 = "PHP in template not allowed. Use SmartyBC to enable it";
    // states whether the parse was successful or not
    public $successful = true;
    public $retvalue = 0;
    public  $lex = null;
    public  $compiler = null;
    public  $prefix_number = 0;
    public  $block_nesting_level = 0;
    private $internalError = false;
    private $strip = false;
    private $text_is_php = false;
    private $is_xml = false;
    private $db_quote_code_buffer = '';
    private $asp_tags = null;
    private $php_handling = null;
    private $security = null;
    private $last_variable = null;
    private $last_index = null;

    function __construct($lex, $compiler) {
        $this->lex = $lex;
        $this->lex->parser_class = get_class($this);
        $this->compiler = $compiler;
        $this->compiler->prefix_code = array();
        if ($this->security = isset($this->compiler->tpl_obj->security_policy)) {
            $this->php_handling = $this->compiler->tpl_obj->security_policy->php_handling;
        } else {
            $this->php_handling = $this->compiler->tpl_obj->php_handling;
        }
       $this->asp_tags = (ini_get('asp_tags') != '0');
    }
#line 118 "Smarty_Compiler_Template_Php_Parser.php"

    const TP_VERT                           =  1;
    const TP_COLON                          =  2;
    const TP_TEMPLATEINIT                   =  3;
    const TP_RDEL                           =  4;
    const TP_COMMENT                        =  5;
    const TP_PHPSTARTTAG                    =  6;
    const TP_PHPENDTAG                      =  7;
    const TP_ASPSTARTTAG                    =  8;
    const TP_ASPENDTAG                      =  9;
    const TP_FAKEPHPSTARTTAG                = 10;
    const TP_XMLTAG                         = 11;
    const TP_TEXT                           = 12;
    const TP_STRIPON                        = 13;
    const TP_STRIPOFF                       = 14;
    const TP_LITERALSTART                   = 15;
    const TP_LITERALEND                     = 16;
    const TP_LITERAL                        = 17;
    const TP_LDEL                           = 18;
    const TP_DOLLAR                         = 19;
    const TP_ID                             = 20;
    const TP_EQUAL                          = 21;
    const TP_PTR                            = 22;
    const TP_LDELIF                         = 23;
    const TP_LDELFOR                        = 24;
    const TP_SEMICOLON                      = 25;
    const TP_IDINCDEC                       = 26;
    const TP_TO                             = 27;
    const TP_STEP                           = 28;
    const TP_LDELFOREACH                    = 29;
    const TP_SPACE                          = 30;
    const TP_AS                             = 31;
    const TP_APTR                           = 32;
    const TP_LDELSETFILTER                  = 33;
    const TP_LDELSLASH                      = 34;
    const TP_ATTR                           = 35;
    const TP_INTEGER                        = 36;
    const TP_COMMA                          = 37;
    const TP_OPENP                          = 38;
    const TP_CLOSEP                         = 39;
    const TP_MATH                           = 40;
    const TP_UNIMATH                        = 41;
    const TP_ANDSYM                         = 42;
    const TP_ISIN                           = 43;
    const TP_ISDIVBY                        = 44;
    const TP_ISNOTDIVBY                     = 45;
    const TP_ISEVEN                         = 46;
    const TP_ISNOTEVEN                      = 47;
    const TP_ISEVENBY                       = 48;
    const TP_ISNOTEVENBY                    = 49;
    const TP_ISODD                          = 50;
    const TP_ISNOTODD                       = 51;
    const TP_ISODDBY                        = 52;
    const TP_ISNOTODDBY                     = 53;
    const TP_INSTANCEOF                     = 54;
    const TP_NAMESPACE                      = 55;
    const TP_QMARK                          = 56;
    const TP_NOT                            = 57;
    const TP_TYPECAST                       = 58;
    const TP_HEX                            = 59;
    const TP_DOT                            = 60;
    const TP_SINGLEQUOTESTRING              = 61;
    const TP_DOUBLECOLON                    = 62;
    const TP_AT                             = 63;
    const TP_HATCH                          = 64;
    const TP_OPENB                          = 65;
    const TP_CLOSEB                         = 66;
    const TP_EQUALS                         = 67;
    const TP_NOTEQUALS                      = 68;
    const TP_GREATERTHAN                    = 69;
    const TP_LESSTHAN                       = 70;
    const TP_GREATEREQUAL                   = 71;
    const TP_LESSEQUAL                      = 72;
    const TP_IDENTITY                       = 73;
    const TP_NONEIDENTITY                   = 74;
    const TP_MOD                            = 75;
    const TP_LAND                           = 76;
    const TP_LOR                            = 77;
    const TP_LXOR                           = 78;
    const TP_QUOTE                          = 79;
    const TP_BACKTICK                       = 80;
    const TP_DOLLARID                       = 81;
    const YY_NO_ACTION = 577;
    const YY_ACCEPT_ACTION = 576;
    const YY_ERROR_ACTION = 575;

    const YY_SZ_ACTTAB = 2413;
static public $yy_action = array(
 /*     0 */   229,  214,    8,  294,  239,  204,    9,  265,  279,  285,
 /*    10 */   292,  291,  277,  276,  275,  274,  282,  281,  284,  198,
 /*    20 */    27,  229,   43,   13,  249,   14,  137,    4,  109,   27,
 /*    30 */   272,  209,  302,  126,   14,  202,  295,  259,  233,   50,
 /*    40 */    49,   48,   45,   25,   31,  304,  310,   30,   29,  311,
 /*    50 */   309,   19,   28,  229,  347,  340,  332,  336,  341,  296,
 /*    60 */    24,  145,  327,  198,  343,  348,  308,  305,  306,  307,
 /*    70 */   330,  331,  356,  357,  355,  354,  351,  352,  326,   44,
 /*    80 */    39,   26,   27,  297,   12,    8,   26,   14,  297,   37,
 /*    90 */   229,  193,   50,   49,   48,   45,   25,   31,  304,  310,
 /*   100 */    30,   29,  311,  309,   19,   28,  229,  105,  181,  137,
 /*   110 */     5,  576,   96,  270,  245,  288,  358,  209,  211,  308,
 /*   120 */   305,  306,  307,  330,  331,  356,  357,  355,  354,  351,
 /*   130 */   352,  240,  246,  209,  133,   27,  501,  260,  235,  218,
 /*   140 */    14,  501,   26,   47,  297,   50,   49,   48,   45,   25,
 /*   150 */    31,  304,  310,   30,   29,  311,  309,   19,   28,  229,
 /*   160 */   106,  176,  102,  187,   35,  142,  180,  110,  339,  358,
 /*   170 */   159,  358,  308,  305,  306,  307,  330,  331,  356,  357,
 /*   180 */   355,  354,  351,  352,  229,  206,  209,  238,  209,  229,
 /*   190 */    26,  229,  297,   37,  271,  245,  288,  263,   50,   49,
 /*   200 */    48,   45,   25,   31,  304,  310,   30,   29,  311,  309,
 /*   210 */    19,   28,  229,   27,    8,  183,  108,  195,   14,  201,
 /*   220 */    18,  251,  165,  358,  367,  308,  305,  306,  307,  330,
 /*   230 */   331,  356,  357,  355,  354,  351,  352,   47,  137,  229,
 /*   240 */   211,  177,   47,  209,   47,   26,   36,  297,  346,  358,
 /*   250 */   253,   50,   49,   48,   45,   25,   31,  304,  310,   30,
 /*   260 */    29,  311,  309,   19,   28,  229,   41,  169,   27,  185,
 /*   270 */   203,  295,    2,   14,   36,  358,  264,  358,  308,  305,
 /*   280 */   306,  307,  330,  331,  356,  357,  355,  354,  351,  352,
 /*   290 */   240,   42,  211,  322,  211,  194,  295,  164,  229,  135,
 /*   300 */   262,  335,   15,  159,   50,   49,   48,   45,   25,   31,
 /*   310 */   304,  310,   30,   29,  311,  309,   19,   28,  229,  242,
 /*   320 */   182,  290,   36,   36,  289,  287,   20,    8,  358,  323,
 /*   330 */   258,  308,  305,  306,  307,  330,  331,  356,  357,  355,
 /*   340 */   354,  351,  352,  120,  104,  211,    6,  122,   26,  200,
 /*   350 */   297,  137,  234,  237,  129,   38,  159,   50,   49,   48,
 /*   360 */    45,   25,   31,  304,  310,   30,   29,  311,  309,   19,
 /*   370 */    28,  229,  244,  298,  293,  209,  301,  189,   46,  303,
 /*   380 */   149,  124,  123,  149,  308,  305,  306,  307,  330,  331,
 /*   390 */   356,  357,  355,  354,  351,  352,  120,  205,   16,   26,
 /*   400 */   136,  254,   26,   14,  223,  260,  278,  260,  248,  130,
 /*   410 */    50,   49,   48,   45,   25,   31,  304,  310,   30,   29,
 /*   420 */   311,  309,   19,   28,  229,  175,  314,  303,   26,   26,
 /*   430 */   241,  232,  345,  149,  342,  100,  101,  308,  305,  306,
 /*   440 */   307,  330,  331,  356,  357,  355,  354,  351,  352,  329,
 /*   450 */   329,  166,  179,  229,   46,   17,  258,  302,   11,  358,
 /*   460 */   358,   10,  267,   50,   49,   48,   45,   25,   31,  304,
 /*   470 */   310,   30,   29,  311,  309,   19,   28,  134,  229,  246,
 /*   480 */   131,  283,  255,  269,  132,  174,   95,  318,   38,  115,
 /*   490 */   308,  305,  306,  307,  330,  331,  356,  357,  355,  354,
 /*   500 */   351,  352,  196,  329,  210,  168,  366,  337,  280,    6,
 /*   510 */    40,  199,    3,  119,  328,  360,  316,   50,   49,   48,
 /*   520 */    45,   25,   31,  304,  310,   30,   29,  311,  309,   19,
 /*   530 */    28,  229,  325,  286,  154,  317,  321,  239,  361,  322,
 /*   540 */   350,  170,   99,   98,  308,  305,  306,  307,  330,  331,
 /*   550 */   356,  357,  355,  354,  351,  352,  329,  329,  172,  188,
 /*   560 */   111,  236,  303,  332,  103,  227,  332,  332,  344,  159,
 /*   570 */    50,   49,   48,   45,   25,   31,  304,  310,   30,   29,
 /*   580 */   311,  309,   19,   28,  229,  268,  332,  207,  332,  332,
 /*   590 */   332,  332,  332,  332,  332,  332,  113,  308,  305,  306,
 /*   600 */   307,  330,  331,  356,  357,  355,  354,  351,  352,  120,
 /*   610 */   329,  332,  332,  332,  332,  332,  332,  332,  332,  332,
 /*   620 */   332,  332,  332,   50,   49,   48,   45,   25,   31,  304,
 /*   630 */   310,   30,   29,  311,  309,   19,   28,  229,  332,  332,
 /*   640 */   332,  332,  332,  332,  332,  332,  332,  332,  160,  161,
 /*   650 */   308,  305,  306,  307,  330,  331,  356,  357,  355,  354,
 /*   660 */   351,  352,  329,  329,  332,  332,  332,  332,  332,  332,
 /*   670 */   332,  332,  332,  332,  332,  332,   50,   49,   48,   45,
 /*   680 */    25,   31,  304,  310,   30,   29,  311,  309,   19,   28,
 /*   690 */   229,  332,  332,  208,  332,  332,  332,  332,  332,  332,
 /*   700 */   332,  112,  332,  308,  305,  306,  307,  330,  331,  356,
 /*   710 */   357,  355,  354,  351,  352,  329,  362,  332,  332,  332,
 /*   720 */   332,  332,  332,  332,  332,  332,  332,  332,  332,   50,
 /*   730 */    49,   48,   45,   25,   31,  304,  310,   30,   29,  311,
 /*   740 */   309,   19,   28,  229,  332,  332,  332,  332,  332,  332,
 /*   750 */   332,  332,  332,  332,  141,  332,  308,  305,  306,  307,
 /*   760 */   330,  331,  356,  357,  355,  354,  351,  352,  329,  332,
 /*   770 */   332,  332,  332,  332,  332,  332,  332,  332,  332,  332,
 /*   780 */   332,  332,   50,   49,   48,   45,   25,   31,  304,  310,
 /*   790 */    30,   29,  311,  309,   19,   28,  332,  332,  332,  332,
 /*   800 */   332,  332,  332,  332,  332,  332,  159,  332,  332,  308,
 /*   810 */   305,  306,  307,  330,  331,  356,  357,  355,  354,  351,
 /*   820 */   352,  332,  332,   50,   49,   48,   45,   25,   31,  304,
 /*   830 */   310,   30,   29,  311,  309,   19,   28,  332,  332,  332,
 /*   840 */   332,  332,  332,  332,  214,  332,  332,  332,  332,    9,
 /*   850 */   308,  305,  306,  307,  330,  331,  356,  357,  355,  354,
 /*   860 */   351,  352,  332,  332,  332,  332,  332,  332,  332,   43,
 /*   870 */   143,  213,  332,  332,    4,  109,  332,  300,  359,   26,
 /*   880 */   126,  297,  158,  332,  259,  233,  121,  252,   26,   32,
 /*   890 */   297,   27,   52,  250,  273,  332,   14,  319,  324,  312,
 /*   900 */    27,  365,  256,  332,  332,   14,  230,  151,   51,   53,
 /*   910 */   320,  243,  313,  332,  332,  104,    1,  266,  257,   26,
 /*   920 */   332,  297,  365,  332,  332,  332,  191,   43,  135,  228,
 /*   930 */    97,   27,    4,  109,  358,  300,   14,  332,  126,  332,
 /*   940 */   359,  332,  259,  233,  150,  252,  303,   23,  121,  332,
 /*   950 */    52,  332,  332,  332,  332,  332,  299,  332,  332,  319,
 /*   960 */   324,  312,  332,  365,  230,  332,   51,   53,  320,  243,
 /*   970 */   313,  197,  332,  104,    1,  332,  332,  332,  332,  332,
 /*   980 */   332,  332,  332,   22,   21,   43,  143,  228,   97,  332,
 /*   990 */     4,  109,  332,  300,  332,  332,  126,  209,  359,  332,
 /*  1000 */   259,  233,  152,  252,  332,   32,  121,  332,   52,  332,
 /*  1010 */   332,  332,  332,  332,  332,  332,  332,  319,  324,  312,
 /*  1020 */   332,  365,  230,  332,   51,   53,  320,  243,  313,  332,
 /*  1030 */   332,  104,    1,  162,  332,  332,  332,  332,  332,  332,
 /*  1040 */   332,  358,  332,   43,  128,   93,   97,  332,    4,  109,
 /*  1050 */   332,  300,  332,  303,  126,  332,  359,  332,  259,  233,
 /*  1060 */   157,  252,  332,   32,  121,  332,   52,  332,  332,  332,
 /*  1070 */   332,  332,  332,  332,  332,  319,  324,  312,  332,  365,
 /*  1080 */   230,  332,   51,   53,  320,  243,  313,  332,  332,  104,
 /*  1090 */     1,  192,  332,  332,  332,  332,  332,  332,  332,  358,
 /*  1100 */   332,   43,  127,  228,   97,  332,    4,  109,  332,  300,
 /*  1110 */   332,  303,  126,  332,  359,  332,  259,  233,  153,  252,
 /*  1120 */   332,   32,  121,  332,   52,  332,  332,  332,  332,  332,
 /*  1130 */   332,  332,  332,  319,  324,  312,  332,  365,  230,  332,
 /*  1140 */    51,   53,  320,  243,  313,  332,  173,  104,    1,  332,
 /*  1150 */   332,  332,  332,  332,  358,  332,  332,  332,  332,   43,
 /*  1160 */   144,  228,   97,  332,    4,  109,  303,  300,  332,  332,
 /*  1170 */   126,  332,  359,  332,  259,  233,  148,  252,  332,    7,
 /*  1180 */   121,  332,   52,  332,  332,  332,  332,  332,  332,  332,
 /*  1190 */   332,  319,  324,  312,  332,  365,  230,  332,   51,   53,
 /*  1200 */   320,  243,  313,  332,  332,  104,    1,  332,  332,  332,
 /*  1210 */   332,  332,  332,  332,  332,  332,  332,   43,  143,  216,
 /*  1220 */    97,  332,    4,  109,  332,  300,  332,  332,  126,  332,
 /*  1230 */   359,  332,  259,  233,  155,  252,  332,   32,  121,  332,
 /*  1240 */    52,  332,  332,  332,  332,  332,  332,  332,  332,  319,
 /*  1250 */   324,  312,  332,  365,  230,  332,   51,   53,  320,  243,
 /*  1260 */   313,  332,  332,  104,    1,  332,  332,  332,  332,  332,
 /*  1270 */   332,  332,  332,  332,  332,   43,  143,  215,   97,  332,
 /*  1280 */     4,  109,  332,  300,  332,  332,  126,  332,  359,  332,
 /*  1290 */   259,  233,  147,  225,  332,   32,  121,  332,   52,  332,
 /*  1300 */   332,  332,  332,  332,  332,  332,  332,  319,  324,  312,
 /*  1310 */   332,  365,  230,  332,   51,   53,  320,  243,  313,  332,
 /*  1320 */   332,  104,    1,  332,  332,  332,  332,  332,  332,  332,
 /*  1330 */   332,  332,  332,   43,  143,  212,   97,  332,    4,  109,
 /*  1340 */   332,  300,  332,  332,  126,  332,  359,  332,  259,  233,
 /*  1350 */   156,  252,  332,   32,  121,  332,   52,  332,  332,  332,
 /*  1360 */   332,  332,  332,  332,  332,  319,  324,  312,  332,  365,
 /*  1370 */   230,  332,   51,   53,  320,  243,  313,  332,  332,  104,
 /*  1380 */     1,  332,  332,  332,  332,  332,  332,  332,  332,  332,
 /*  1390 */   332,   43,  135,  226,   97,  332,    4,  109,  332,  300,
 /*  1400 */   332,  332,  126,  107,  171,  332,  259,  233,  332,  252,
 /*  1410 */   332,   23,  358,  332,   52,   22,   21,  332,  332,  332,
 /*  1420 */   332,  332,  332,  332,  332,  332,  332,  332,  222,  209,
 /*  1430 */    51,   53,  320,  243,  313,  332,  332,  104,  332,  332,
 /*  1440 */   332,  332,  332,  332,  332,  332,  332,  332,  332,   43,
 /*  1450 */   135,  228,   97,  332,    4,  109,  332,  300,  332,  332,
 /*  1460 */   126,  332,  338,  332,  259,  233,  332,  252,   33,   23,
 /*  1470 */   332,  332,   52,    4,  109,  332,  332,  332,  332,  126,
 /*  1480 */   332,  332,  332,  259,  233,  332,  230,  332,   51,   53,
 /*  1490 */   320,  243,  313,  480,  332,  104,  197,  190,  332,  332,
 /*  1500 */   332,  332,  332,  332,  332,  358,  332,  332,   22,   21,
 /*  1510 */    97,  332,  332,  332,  480,  332,  480,  480,  332,  480,
 /*  1520 */   480,  480,  209,  332,  480,  332,  480,    8,  480,  364,
 /*  1530 */    34,  349,  332,  332,  332,  332,  332,  359,  332,  332,
 /*  1540 */   332,  116,  332,  480,   87,  121,  332,  332,  332,  332,
 /*  1550 */   332,  137,  315,  353,  332,  480,  319,  324,  312,  359,
 /*  1560 */   365,  332,  332,  116,  332,  332,   87,  121,  332,  480,
 /*  1570 */   224,  334,  332,  332,  315,  353,  197,  186,  319,  324,
 /*  1580 */   312,  332,  365,  197,  178,  358,  332,  332,   22,   21,
 /*  1590 */   332,  332,  358,  333,  332,   22,   21,  359,  332,  332,
 /*  1600 */   332,  146,  209,  332,   79,  121,  332,  332,  332,  209,
 /*  1610 */   332,  332,  315,  353,  332,  359,  319,  324,  312,  146,
 /*  1620 */   365,  332,   79,  121,  332,  332,  332,  217,  332,  332,
 /*  1630 */   315,  353,  332,  332,  319,  324,  312,  332,  365,  359,
 /*  1640 */   332,  332,  332,  146,  332,  220,   79,  121,  332,  332,
 /*  1650 */   332,  332,  332,  332,  315,  353,  332,  359,  319,  324,
 /*  1660 */   312,  146,  365,  332,   67,  114,  248,  332,  332,  221,
 /*  1670 */   197,  167,  315,  353,  332,  332,  319,  324,  312,  358,
 /*  1680 */   365,  332,   22,   21,  359,  197,  163,  332,  146,  332,
 /*  1690 */   332,   56,  114,  139,  358,  332,  209,   22,   21,  315,
 /*  1700 */   353,  332,  359,  319,  324,  312,  146,  365,  332,   79,
 /*  1710 */   121,  209,  332,  332,  332,  332,  332,  315,  353,  332,
 /*  1720 */   332,  319,  324,  312,  332,  365,  332,  332,  332,  332,
 /*  1730 */   338,  332,  219,  332,  332,  332,   33,  332,  332,  332,
 /*  1740 */   332,    4,  109,  332,  332,  332,  359,  126,  332,  332,
 /*  1750 */    94,  259,  233,   61,  118,  332,  359,  332,  332,  332,
 /*  1760 */   146,  315,  353,   75,  121,  319,  324,  312,  332,  365,
 /*  1770 */   332,  315,  353,  332,  332,  319,  324,  312,  332,  365,
 /*  1780 */   332,  332,  332,  332,  332,  332,  359,  332,  332,  332,
 /*  1790 */   146,  332,  332,   66,  121,  332,  359,  363,   34,  349,
 /*  1800 */   146,  315,  353,   71,  121,  319,  324,  312,  332,  365,
 /*  1810 */   332,  315,  353,  332,  332,  319,  324,  312,  332,  365,
 /*  1820 */   332,  332,  332,  359,  332,  332,  332,  146,  332,  332,
 /*  1830 */    72,  121,  332,  359,  332,  332,  332,  146,  315,  353,
 /*  1840 */    89,  121,  319,  324,  312,  332,  365,  332,  315,  353,
 /*  1850 */   332,  359,  319,  324,  312,  138,  365,  332,   73,  121,
 /*  1860 */   332,  332,  332,  332,  332,  332,  315,  353,  332,  332,
 /*  1870 */   319,  324,  312,  359,  365,  332,  332,  146,  332,  332,
 /*  1880 */    90,  121,  332,  359,  332,  332,  332,   94,  315,  353,
 /*  1890 */    55,  118,  319,  324,  312,  332,  365,  332,  315,  353,
 /*  1900 */   332,  332,  247,  324,  312,  332,  365,  332,  332,  332,
 /*  1910 */   359,  332,  332,  332,  146,  332,  332,   65,  121,  332,
 /*  1920 */   359,  332,  332,  332,  146,  315,  353,   67,  121,  231,
 /*  1930 */   324,  312,  332,  365,  332,  315,  353,  332,  359,  319,
 /*  1940 */   324,  312,  146,  365,  332,   82,  121,  332,  332,  332,
 /*  1950 */   332,  332,  332,  315,  353,  332,  332,  319,  324,  312,
 /*  1960 */   359,  365,  332,  332,  146,  332,  332,   77,  121,  332,
 /*  1970 */   359,  332,  332,  332,  146,  315,  353,   84,  121,  319,
 /*  1980 */   324,  312,  332,  365,  332,  315,  353,  332,  332,  319,
 /*  1990 */   324,  312,  332,  365,  332,  332,  332,  359,  332,  332,
 /*  2000 */   332,  146,  332,  332,   62,  121,  332,  359,  332,  332,
 /*  2010 */   332,  146,  315,  353,   59,  121,  319,  324,  312,  332,
 /*  2020 */   365,  332,  315,  353,  332,  359,  319,  324,  312,  125,
 /*  2030 */   365,  332,   60,  121,  332,  332,  332,  332,  332,  332,
 /*  2040 */   315,  353,  332,  332,  319,  324,  312,  359,  365,  332,
 /*  2050 */   332,  146,  332,  332,   68,  121,  332,  359,  332,  332,
 /*  2060 */   332,  146,  315,  353,   91,  121,  319,  324,  312,  332,
 /*  2070 */   365,  332,  315,  353,  332,  332,  319,  324,  312,  332,
 /*  2080 */   365,  332,  332,  332,  359,  332,  332,  332,  146,  332,
 /*  2090 */   332,   64,  121,  332,  359,  332,  332,  332,  140,  315,
 /*  2100 */   353,   74,  121,  319,  324,  312,  332,  365,  332,  315,
 /*  2110 */   353,  332,  359,  319,  324,  312,  146,  365,  332,   58,
 /*  2120 */   121,  332,  332,  332,  332,  332,  332,  315,  353,  332,
 /*  2130 */   332,  319,  324,  312,  359,  365,  332,  332,  146,  332,
 /*  2140 */   332,   76,  121,  332,  359,  332,  332,  332,  146,  315,
 /*  2150 */   353,   80,  121,  319,  324,  312,  332,  365,  332,  315,
 /*  2160 */   353,  332,  332,  319,  324,  312,  332,  365,  332,  332,
 /*  2170 */   332,  359,  332,  332,  332,  146,  332,  332,   63,  121,
 /*  2180 */   332,  359,  332,  332,  332,  117,  315,  353,   70,  121,
 /*  2190 */   319,  324,  312,  332,  365,  332,  315,  353,  332,  359,
 /*  2200 */   319,  324,  312,  146,  365,  332,   69,  121,  332,  332,
 /*  2210 */   332,  332,  332,  332,  315,  353,  332,  332,  319,  324,
 /*  2220 */   312,  359,  365,  332,  332,  146,  332,  332,   88,  121,
 /*  2230 */   332,  359,  332,  332,  332,  146,  315,  353,   83,  121,
 /*  2240 */   319,  324,  312,  332,  365,  332,  315,  353,  332,  332,
 /*  2250 */   319,  324,  312,  332,  365,  332,  332,  332,  359,  332,
 /*  2260 */   332,  332,  146,  332,  332,   92,  121,  332,  359,  332,
 /*  2270 */   332,  332,  146,  315,  353,   54,  121,  319,  324,  312,
 /*  2280 */   332,  365,  332,  315,  353,  332,  359,  319,  324,  312,
 /*  2290 */   146,  365,  332,   81,  121,  332,  332,  332,  332,  332,
 /*  2300 */   332,  315,  353,  332,  332,  319,  324,  312,  359,  365,
 /*  2310 */   332,  332,  146,  332,  332,   85,  121,  332,  359,  332,
 /*  2320 */   332,  332,  146,  315,  353,   78,  121,  319,  324,  312,
 /*  2330 */   332,  365,  332,  315,  353,  332,  332,  319,  324,  312,
 /*  2340 */   332,  365,  332,  332,  332,  359,  332,  332,  332,  146,
 /*  2350 */   332,  229,   86,  121,  332,  359,  332,  332,  332,  146,
 /*  2360 */   315,  353,   57,  121,  319,  324,  312,  332,  365,  332,
 /*  2370 */   315,  353,  261,  332,  319,  324,  312,  332,  365,  332,
 /*  2380 */    27,  197,  184,  332,  332,   14,  332,  332,    8,  332,
 /*  2390 */   358,  332,  332,   22,   21,  332,  332,  332,  332,  332,
 /*  2400 */   332,  332,  332,  332,  332,  332,  332,  209,  332,  332,
 /*  2410 */   332,  332,  137,
    );
    static public $yy_lookahead = array(
 /*     0 */     1,   60,   38,    4,    2,   91,   65,    3,   30,    5,
 /*    10 */     6,    7,    8,    9,   10,   11,   12,   13,   14,   15,
 /*    20 */    30,    1,   18,   21,   60,   35,   62,   23,   24,   30,
 /*    30 */    66,  117,  118,   29,   35,  113,  114,   33,   34,   40,
 /*    40 */    41,   42,   43,   44,   45,   46,   47,   48,   49,   50,
 /*    50 */    51,   52,   53,    1,    6,    7,    8,    9,   10,  114,
 /*    60 */    18,   19,   20,   15,   16,   17,   67,   68,   69,   70,
 /*    70 */    71,   72,   73,   74,   75,   76,   77,   78,   36,   32,
 /*    80 */    28,   18,   30,   20,   21,   38,   18,   35,   20,   21,
 /*    90 */     1,   91,   40,   41,   42,   43,   44,   45,   46,   47,
 /*   100 */    48,   49,   50,   51,   52,   53,    1,   91,   92,   62,
 /*   110 */    38,   83,   84,   85,   86,   87,  100,  117,  117,   67,
 /*   120 */    68,   69,   70,   71,   72,   73,   74,   75,   76,   77,
 /*   130 */    78,   63,   86,  117,   62,   30,   60,   94,   95,   96,
 /*   140 */    35,   65,   18,   54,   20,   40,   41,   42,   43,   44,
 /*   150 */    45,   46,   47,   48,   49,   50,   51,   52,   53,    1,
 /*   160 */    91,   92,   91,   92,   18,   19,   20,  121,  122,  100,
 /*   170 */    22,  100,   67,   68,   69,   70,   71,   72,   73,   74,
 /*   180 */    75,   76,   77,   78,    1,   99,  117,   63,  117,    1,
 /*   190 */    18,    1,   20,   21,   85,   86,   87,   21,   40,   41,
 /*   200 */    42,   43,   44,   45,   46,   47,   48,   49,   50,   51,
 /*   210 */    52,   53,    1,   30,   38,   92,   99,   91,   35,   99,
 /*   220 */    32,   31,  110,  100,   66,   67,   68,   69,   70,   71,
 /*   230 */    72,   73,   74,   75,   76,   77,   78,   54,   62,    1,
 /*   240 */   117,   92,   54,  117,   54,   18,   37,   20,   39,  100,
 /*   250 */    39,   40,   41,   42,   43,   44,   45,   46,   47,   48,
 /*   260 */    49,   50,   51,   52,   53,    1,    2,   92,   30,   92,
 /*   270 */   113,  114,   37,   35,   37,  100,   39,  100,   67,   68,
 /*   280 */    69,   70,   71,   72,   73,   74,   75,   76,   77,   78,
 /*   290 */    63,   21,  117,  111,  117,  113,  114,  110,    1,   19,
 /*   300 */    20,   66,   21,   22,   40,   41,   42,   43,   44,   45,
 /*   310 */    46,   47,   48,   49,   50,   51,   52,   53,    1,   22,
 /*   320 */    92,    4,   37,   37,   39,   39,   18,   38,  100,   20,
 /*   330 */    60,   67,   68,   69,   70,   71,   72,   73,   74,   75,
 /*   340 */    76,   77,   78,   62,   64,  117,   38,   19,   18,   91,
 /*   350 */    20,   62,   19,   20,   26,   21,   22,   40,   41,   42,
 /*   360 */    43,   44,   45,   46,   47,   48,   49,   50,   51,   52,
 /*   370 */    53,    1,   63,  108,    4,  117,  108,  110,    2,  112,
 /*   380 */   115,   19,   19,  115,   67,   68,   69,   70,   71,   72,
 /*   390 */    73,   74,   75,   76,   77,   78,   62,   25,   30,   18,
 /*   400 */    38,   20,   18,   35,   20,   94,   95,   94,   95,   37,
 /*   410 */    40,   41,   42,   43,   44,   45,   46,   47,   48,   49,
 /*   420 */    50,   51,   52,   53,    1,  110,  108,  112,   18,   18,
 /*   430 */    20,   20,   87,  115,   89,   98,   98,   67,   68,   69,
 /*   440 */    70,   71,   72,   73,   74,   75,   76,   77,   78,  112,
 /*   450 */   112,   92,   92,    1,    2,   97,   60,  118,   56,  100,
 /*   460 */   100,    2,   39,   40,   41,   42,   43,   44,   45,   46,
 /*   470 */    47,   48,   49,   50,   51,   52,   53,   19,    1,   86,
 /*   480 */    19,   39,   20,   66,   19,   64,   20,   36,   21,   98,
 /*   490 */    67,   68,   69,   70,   71,   72,   73,   74,   75,   76,
 /*   500 */    77,   78,   25,  112,   20,   64,    4,    4,   20,   38,
 /*   510 */    27,   20,   38,   20,   20,  122,   20,   40,   41,   42,
 /*   520 */    43,   44,   45,   46,   47,   48,   49,   50,   51,   52,
 /*   530 */    53,    1,   20,    4,   20,   36,   20,    2,  100,  111,
 /*   540 */    80,  110,   98,   98,   67,   68,   69,   70,   71,   72,
 /*   550 */    73,   74,   75,   76,   77,   78,  112,  112,  110,  110,
 /*   560 */    88,   31,  112,  123,  110,   97,  123,  123,  115,   22,
 /*   570 */    40,   41,   42,   43,   44,   45,   46,   47,   48,   49,
 /*   580 */    50,   51,   52,   53,    1,   16,  123,    4,  123,  123,
 /*   590 */   123,  123,  123,  123,  123,  123,   98,   67,   68,   69,
 /*   600 */    70,   71,   72,   73,   74,   75,   76,   77,   78,   62,
 /*   610 */   112,  123,  123,  123,  123,  123,  123,  123,  123,  123,
 /*   620 */   123,  123,  123,   40,   41,   42,   43,   44,   45,   46,
 /*   630 */    47,   48,   49,   50,   51,   52,   53,    1,  123,  123,
 /*   640 */   123,  123,  123,  123,  123,  123,  123,  123,   98,   98,
 /*   650 */    67,   68,   69,   70,   71,   72,   73,   74,   75,   76,
 /*   660 */    77,   78,  112,  112,  123,  123,  123,  123,  123,  123,
 /*   670 */   123,  123,  123,  123,  123,  123,   40,   41,   42,   43,
 /*   680 */    44,   45,   46,   47,   48,   49,   50,   51,   52,   53,
 /*   690 */     1,  123,  123,    4,  123,  123,  123,  123,  123,  123,
 /*   700 */   123,   98,  123,   67,   68,   69,   70,   71,   72,   73,
 /*   710 */    74,   75,   76,   77,   78,  112,   80,  123,  123,  123,
 /*   720 */   123,  123,  123,  123,  123,  123,  123,  123,  123,   40,
 /*   730 */    41,   42,   43,   44,   45,   46,   47,   48,   49,   50,
 /*   740 */    51,   52,   53,    1,  123,  123,  123,  123,  123,  123,
 /*   750 */   123,  123,  123,  123,   98,  123,   67,   68,   69,   70,
 /*   760 */    71,   72,   73,   74,   75,   76,   77,   78,  112,  123,
 /*   770 */   123,  123,  123,  123,  123,  123,  123,  123,  123,  123,
 /*   780 */   123,  123,   40,   41,   42,   43,   44,   45,   46,   47,
 /*   790 */    48,   49,   50,   51,   52,   53,  123,  123,  123,  123,
 /*   800 */   123,  123,  123,  123,  123,  123,   22,  123,  123,   67,
 /*   810 */    68,   69,   70,   71,   72,   73,   74,   75,   76,   77,
 /*   820 */    78,  123,  123,   40,   41,   42,   43,   44,   45,   46,
 /*   830 */    47,   48,   49,   50,   51,   52,   53,  123,  123,  123,
 /*   840 */   123,  123,  123,  123,   60,  123,  123,  123,  123,   65,
 /*   850 */    67,   68,   69,   70,   71,   72,   73,   74,   75,   76,
 /*   860 */    77,   78,  123,  123,  123,  123,  123,  123,  123,   18,
 /*   870 */    19,   20,  123,  123,   23,   24,  123,   26,   86,   18,
 /*   880 */    29,   20,   90,  123,   33,   34,   94,   36,   18,   38,
 /*   890 */    20,   30,   41,   32,  102,  123,   35,  105,  106,  107,
 /*   900 */    30,  109,   32,  123,  123,   35,   55,   94,   57,   58,
 /*   910 */    59,   60,   61,  123,  123,   64,   65,   66,  105,   18,
 /*   920 */   123,   20,  109,  123,  123,  123,   92,   18,   19,   20,
 /*   930 */    79,   30,   23,   24,  100,   26,   35,  123,   29,  123,
 /*   940 */    86,  123,   33,   34,   90,   36,  112,   38,   94,  123,
 /*   950 */    41,  123,  123,  123,  123,  123,  102,  123,  123,  105,
 /*   960 */   106,  107,  123,  109,   55,  123,   57,   58,   59,   60,
 /*   970 */    61,   91,  123,   64,   65,  123,  123,  123,  123,  123,
 /*   980 */   123,  123,  123,  103,  104,   18,   19,   20,   79,  123,
 /*   990 */    23,   24,  123,   26,  123,  123,   29,  117,   86,  123,
 /*  1000 */    33,   34,   90,   36,  123,   38,   94,  123,   41,  123,
 /*  1010 */   123,  123,  123,  123,  123,  123,  123,  105,  106,  107,
 /*  1020 */   123,  109,   55,  123,   57,   58,   59,   60,   61,  123,
 /*  1030 */   123,   64,   65,   92,  123,  123,  123,  123,  123,  123,
 /*  1040 */   123,  100,  123,   18,   19,   20,   79,  123,   23,   24,
 /*  1050 */   123,   26,  123,  112,   29,  123,   86,  123,   33,   34,
 /*  1060 */    90,   36,  123,   38,   94,  123,   41,  123,  123,  123,
 /*  1070 */   123,  123,  123,  123,  123,  105,  106,  107,  123,  109,
 /*  1080 */    55,  123,   57,   58,   59,   60,   61,  123,  123,   64,
 /*  1090 */    65,   92,  123,  123,  123,  123,  123,  123,  123,  100,
 /*  1100 */   123,   18,   19,   20,   79,  123,   23,   24,  123,   26,
 /*  1110 */   123,  112,   29,  123,   86,  123,   33,   34,   90,   36,
 /*  1120 */   123,   38,   94,  123,   41,  123,  123,  123,  123,  123,
 /*  1130 */   123,  123,  123,  105,  106,  107,  123,  109,   55,  123,
 /*  1140 */    57,   58,   59,   60,   61,  123,   92,   64,   65,  123,
 /*  1150 */   123,  123,  123,  123,  100,  123,  123,  123,  123,   18,
 /*  1160 */    19,   20,   79,  123,   23,   24,  112,   26,  123,  123,
 /*  1170 */    29,  123,   86,  123,   33,   34,   90,   36,  123,   38,
 /*  1180 */    94,  123,   41,  123,  123,  123,  123,  123,  123,  123,
 /*  1190 */   123,  105,  106,  107,  123,  109,   55,  123,   57,   58,
 /*  1200 */    59,   60,   61,  123,  123,   64,   65,  123,  123,  123,
 /*  1210 */   123,  123,  123,  123,  123,  123,  123,   18,   19,   20,
 /*  1220 */    79,  123,   23,   24,  123,   26,  123,  123,   29,  123,
 /*  1230 */    86,  123,   33,   34,   90,   36,  123,   38,   94,  123,
 /*  1240 */    41,  123,  123,  123,  123,  123,  123,  123,  123,  105,
 /*  1250 */   106,  107,  123,  109,   55,  123,   57,   58,   59,   60,
 /*  1260 */    61,  123,  123,   64,   65,  123,  123,  123,  123,  123,
 /*  1270 */   123,  123,  123,  123,  123,   18,   19,   20,   79,  123,
 /*  1280 */    23,   24,  123,   26,  123,  123,   29,  123,   86,  123,
 /*  1290 */    33,   34,   90,   36,  123,   38,   94,  123,   41,  123,
 /*  1300 */   123,  123,  123,  123,  123,  123,  123,  105,  106,  107,
 /*  1310 */   123,  109,   55,  123,   57,   58,   59,   60,   61,  123,
 /*  1320 */   123,   64,   65,  123,  123,  123,  123,  123,  123,  123,
 /*  1330 */   123,  123,  123,   18,   19,   20,   79,  123,   23,   24,
 /*  1340 */   123,   26,  123,  123,   29,  123,   86,  123,   33,   34,
 /*  1350 */    90,   36,  123,   38,   94,  123,   41,  123,  123,  123,
 /*  1360 */   123,  123,  123,  123,  123,  105,  106,  107,  123,  109,
 /*  1370 */    55,  123,   57,   58,   59,   60,   61,  123,  123,   64,
 /*  1380 */    65,  123,  123,  123,  123,  123,  123,  123,  123,  123,
 /*  1390 */   123,   18,   19,   20,   79,  123,   23,   24,  123,   26,
 /*  1400 */   123,  123,   29,   91,   92,  123,   33,   34,  123,   36,
 /*  1410 */   123,   38,  100,  123,   41,  103,  104,  123,  123,  123,
 /*  1420 */   123,  123,  123,  123,  123,  123,  123,  123,   55,  117,
 /*  1430 */    57,   58,   59,   60,   61,  123,  123,   64,  123,  123,
 /*  1440 */   123,  123,  123,  123,  123,  123,  123,  123,  123,   18,
 /*  1450 */    19,   20,   79,  123,   23,   24,  123,   26,  123,  123,
 /*  1460 */    29,  123,   12,  123,   33,   34,  123,   36,   18,   38,
 /*  1470 */   123,  123,   41,   23,   24,  123,  123,  123,  123,   29,
 /*  1480 */   123,  123,  123,   33,   34,  123,   55,  123,   57,   58,
 /*  1490 */    59,   60,   61,    4,  123,   64,   91,   92,  123,  123,
 /*  1500 */   123,  123,  123,  123,  123,  100,  123,  123,  103,  104,
 /*  1510 */    79,  123,  123,  123,   25,  123,   27,   28,  123,   30,
 /*  1520 */    31,   32,  117,  123,   35,  123,   37,   38,   39,   79,
 /*  1530 */    80,   81,  123,  123,  123,  123,  123,   86,  123,  123,
 /*  1540 */   123,   90,  123,   54,   93,   94,  123,  123,  123,  123,
 /*  1550 */   123,   62,  101,  102,  123,   66,  105,  106,  107,   86,
 /*  1560 */   109,  123,  123,   90,  123,  123,   93,   94,  123,   80,
 /*  1570 */   119,  120,  123,  123,  101,  102,   91,   92,  105,  106,
 /*  1580 */   107,  123,  109,   91,   92,  100,  123,  123,  103,  104,
 /*  1590 */   123,  123,  100,  120,  123,  103,  104,   86,  123,  123,
 /*  1600 */   123,   90,  117,  123,   93,   94,  123,  123,  123,  117,
 /*  1610 */   123,  123,  101,  102,  123,   86,  105,  106,  107,   90,
 /*  1620 */   109,  123,   93,   94,  123,  123,  123,  116,  123,  123,
 /*  1630 */   101,  102,  123,  123,  105,  106,  107,  123,  109,   86,
 /*  1640 */   123,  123,  123,   90,  123,  116,   93,   94,  123,  123,
 /*  1650 */   123,  123,  123,  123,  101,  102,  123,   86,  105,  106,
 /*  1660 */   107,   90,  109,  123,   93,   94,   95,  123,  123,  116,
 /*  1670 */    91,   92,  101,  102,  123,  123,  105,  106,  107,  100,
 /*  1680 */   109,  123,  103,  104,   86,   91,   92,  123,   90,  123,
 /*  1690 */   123,   93,   94,   95,  100,  123,  117,  103,  104,  101,
 /*  1700 */   102,  123,   86,  105,  106,  107,   90,  109,  123,   93,
 /*  1710 */    94,  117,  123,  123,  123,  123,  123,  101,  102,  123,
 /*  1720 */   123,  105,  106,  107,  123,  109,  123,  123,  123,  123,
 /*  1730 */    12,  123,  116,  123,  123,  123,   18,  123,  123,  123,
 /*  1740 */   123,   23,   24,  123,  123,  123,   86,   29,  123,  123,
 /*  1750 */    90,   33,   34,   93,   94,  123,   86,  123,  123,  123,
 /*  1760 */    90,  101,  102,   93,   94,  105,  106,  107,  123,  109,
 /*  1770 */   123,  101,  102,  123,  123,  105,  106,  107,  123,  109,
 /*  1780 */   123,  123,  123,  123,  123,  123,   86,  123,  123,  123,
 /*  1790 */    90,  123,  123,   93,   94,  123,   86,   79,   80,   81,
 /*  1800 */    90,  101,  102,   93,   94,  105,  106,  107,  123,  109,
 /*  1810 */   123,  101,  102,  123,  123,  105,  106,  107,  123,  109,
 /*  1820 */   123,  123,  123,   86,  123,  123,  123,   90,  123,  123,
 /*  1830 */    93,   94,  123,   86,  123,  123,  123,   90,  101,  102,
 /*  1840 */    93,   94,  105,  106,  107,  123,  109,  123,  101,  102,
 /*  1850 */   123,   86,  105,  106,  107,   90,  109,  123,   93,   94,
 /*  1860 */   123,  123,  123,  123,  123,  123,  101,  102,  123,  123,
 /*  1870 */   105,  106,  107,   86,  109,  123,  123,   90,  123,  123,
 /*  1880 */    93,   94,  123,   86,  123,  123,  123,   90,  101,  102,
 /*  1890 */    93,   94,  105,  106,  107,  123,  109,  123,  101,  102,
 /*  1900 */   123,  123,  105,  106,  107,  123,  109,  123,  123,  123,
 /*  1910 */    86,  123,  123,  123,   90,  123,  123,   93,   94,  123,
 /*  1920 */    86,  123,  123,  123,   90,  101,  102,   93,   94,  105,
 /*  1930 */   106,  107,  123,  109,  123,  101,  102,  123,   86,  105,
 /*  1940 */   106,  107,   90,  109,  123,   93,   94,  123,  123,  123,
 /*  1950 */   123,  123,  123,  101,  102,  123,  123,  105,  106,  107,
 /*  1960 */    86,  109,  123,  123,   90,  123,  123,   93,   94,  123,
 /*  1970 */    86,  123,  123,  123,   90,  101,  102,   93,   94,  105,
 /*  1980 */   106,  107,  123,  109,  123,  101,  102,  123,  123,  105,
 /*  1990 */   106,  107,  123,  109,  123,  123,  123,   86,  123,  123,
 /*  2000 */   123,   90,  123,  123,   93,   94,  123,   86,  123,  123,
 /*  2010 */   123,   90,  101,  102,   93,   94,  105,  106,  107,  123,
 /*  2020 */   109,  123,  101,  102,  123,   86,  105,  106,  107,   90,
 /*  2030 */   109,  123,   93,   94,  123,  123,  123,  123,  123,  123,
 /*  2040 */   101,  102,  123,  123,  105,  106,  107,   86,  109,  123,
 /*  2050 */   123,   90,  123,  123,   93,   94,  123,   86,  123,  123,
 /*  2060 */   123,   90,  101,  102,   93,   94,  105,  106,  107,  123,
 /*  2070 */   109,  123,  101,  102,  123,  123,  105,  106,  107,  123,
 /*  2080 */   109,  123,  123,  123,   86,  123,  123,  123,   90,  123,
 /*  2090 */   123,   93,   94,  123,   86,  123,  123,  123,   90,  101,
 /*  2100 */   102,   93,   94,  105,  106,  107,  123,  109,  123,  101,
 /*  2110 */   102,  123,   86,  105,  106,  107,   90,  109,  123,   93,
 /*  2120 */    94,  123,  123,  123,  123,  123,  123,  101,  102,  123,
 /*  2130 */   123,  105,  106,  107,   86,  109,  123,  123,   90,  123,
 /*  2140 */   123,   93,   94,  123,   86,  123,  123,  123,   90,  101,
 /*  2150 */   102,   93,   94,  105,  106,  107,  123,  109,  123,  101,
 /*  2160 */   102,  123,  123,  105,  106,  107,  123,  109,  123,  123,
 /*  2170 */   123,   86,  123,  123,  123,   90,  123,  123,   93,   94,
 /*  2180 */   123,   86,  123,  123,  123,   90,  101,  102,   93,   94,
 /*  2190 */   105,  106,  107,  123,  109,  123,  101,  102,  123,   86,
 /*  2200 */   105,  106,  107,   90,  109,  123,   93,   94,  123,  123,
 /*  2210 */   123,  123,  123,  123,  101,  102,  123,  123,  105,  106,
 /*  2220 */   107,   86,  109,  123,  123,   90,  123,  123,   93,   94,
 /*  2230 */   123,   86,  123,  123,  123,   90,  101,  102,   93,   94,
 /*  2240 */   105,  106,  107,  123,  109,  123,  101,  102,  123,  123,
 /*  2250 */   105,  106,  107,  123,  109,  123,  123,  123,   86,  123,
 /*  2260 */   123,  123,   90,  123,  123,   93,   94,  123,   86,  123,
 /*  2270 */   123,  123,   90,  101,  102,   93,   94,  105,  106,  107,
 /*  2280 */   123,  109,  123,  101,  102,  123,   86,  105,  106,  107,
 /*  2290 */    90,  109,  123,   93,   94,  123,  123,  123,  123,  123,
 /*  2300 */   123,  101,  102,  123,  123,  105,  106,  107,   86,  109,
 /*  2310 */   123,  123,   90,  123,  123,   93,   94,  123,   86,  123,
 /*  2320 */   123,  123,   90,  101,  102,   93,   94,  105,  106,  107,
 /*  2330 */   123,  109,  123,  101,  102,  123,  123,  105,  106,  107,
 /*  2340 */   123,  109,  123,  123,  123,   86,  123,  123,  123,   90,
 /*  2350 */   123,    1,   93,   94,  123,   86,  123,  123,  123,   90,
 /*  2360 */   101,  102,   93,   94,  105,  106,  107,  123,  109,  123,
 /*  2370 */   101,  102,   22,  123,  105,  106,  107,  123,  109,  123,
 /*  2380 */    30,   91,   92,  123,  123,   35,  123,  123,   38,  123,
 /*  2390 */   100,  123,  123,  103,  104,  123,  123,  123,  123,  123,
 /*  2400 */   123,  123,  123,  123,  123,  123,  123,  117,  123,  123,
 /*  2410 */   123,  123,   62,
);
    const YY_SHIFT_USE_DFLT = -60;
    const YY_SHIFT_MAX = 263;
    static public $yy_shift_ofst = array(
 /*     0 */     4, 1199, 1199,  967, 1141,  967,  967, 1141,  967,  851,
 /*    10 */  1315, 1083,  967,  967,  967,  967, 1257,  967,  967,  967,
 /*    20 */   967,  967,  967,  967,  967,  967,  967, 1257,  967,  967,
 /*    30 */   967,  967,  967, 1025,  967,  967,  967,  967,  967,  967,
 /*    40 */   967,  967,  967, 1025,  967,  909,  909, 1373, 1431, 1431,
 /*    50 */  1431, 1431, 1431, 1431,   52,   -1,  105,  105,  105,  105,
 /*    60 */   105,  105,  689,  477,  158,  636,  317,  211,  264,  583,
 /*    70 */   530,  370,  423,  742,  742,  742,  742,  742,  742,  742,
 /*    80 */   742,  742,  742,  742,  742,  742,  742,  742,  742,  742,
 /*    90 */   742,  783,  783, 2350,  183,  238,    4, 1450,  870,  861,
 /*   100 */   901,  901,  238,  784,  280,  238,  238,  238,  452,  362,
 /*   110 */  1718,   48,   68,  172,  334,  227,  188,  190,  281,  297,
 /*   120 */   333,  547,  330,  330,  330,   89,  368,  381,  384,  -10,
 /*   130 */   362,  330,  330,  333,  330,  330,  362,  333,   89,  -10,
 /*   140 */    89,  330,  411,  410,  410,  330,   89,   20,   20,  148,
 /*   150 */    20,  148,   20,   20,   20,   20,   20,   20,  -60,  146,
 /*   160 */    63,  124,  -10,  -10,  -59,  -59,  -10,  -10,   76,  -10,
 /*   170 */   -59,  -10,  -59,  -10,   76,  -59,  -10,  -10,  -10,  -10,
 /*   180 */   308,  -10,  -10,  -10,  -10,  -10,  -10,  -10,  -59,  -59,
 /*   190 */   -10,  -10,  -10,   20,  148,   20,  -22,   20,  569,  474,
 /*   200 */    20,  376,  148,  148,   20,  -22,  376,  -60,  -60,  -60,
 /*   210 */   -60,  -60, 1489,  -36,   42,  176,   47,  237,  372,  285,
 /*   220 */   286,  209,   72,    2,  235,  270,  289,  328,  289,  309,
 /*   230 */    72,  460,  474,  493,  491,  483,  363,  471,  494,  496,
 /*   240 */   516,  535,  514,  499,  512,  529,  503,  502,  442,  462,
 /*   250 */   461,  458,  396,  402,  459,  417,  465,  441,  451,  484,
 /*   260 */   467,  466,  421,  488,
);
    const YY_REDUCE_USE_DFLT = -87;
    const YY_REDUCE_MAX = 211;
    static public $yy_reduce_ofst = array(
 /*     0 */    28, 1451, 1473, 1553, 1598, 1511, 1616, 1571, 1529, 1998,
 /*    10 */  1971, 1961, 1921, 1939, 2008, 2026, 2095, 2085, 2058, 2048,
 /*    20 */  1911, 1884, 1747, 1737, 1710, 1670, 1700, 1765, 1787, 1874,
 /*    30 */  1852, 2135, 1834, 1797, 1824, 2113, 2232, 2259, 2222, 2269,
 /*    40 */  2182, 2172, 2145, 1660, 2200,  854,  792, 1028, 1086,  912,
 /*    50 */  1202,  970, 1260, 1144, 2290, 1312, 1492, 1485, 1405, 1579,
 /*    60 */  1594, 1312,  880,  880,  880,  880,  880,  880,  880,  880,
 /*    70 */   880,  880,  880,  880,  880,  880,  880,  880,  880,  880,
 /*    80 */   880,  880,  880,  880,  880,  880,  880,  880,  880,  880,
 /*    90 */   880,  880,  880,   71,   69,   16,  109,   46, 1054,  999,
 /*   100 */   941,  834,  123,  182,  813,  228,  177,  175,  -86,   43,
 /*   110 */   393,  345,  267,  267,  -78,  267,  126,  126,  -78,  258,
 /*   120 */   265,  -78,  550,  445,  498,  126,  149,  391,  391,  359,
 /*   130 */   311,  338,  337,  268,  444,  391,  313,  318,  126,  360,
 /*   140 */   126,  315,  656,  391,  603,  551,  126,  126,  126,  157,
 /*   150 */   126,  -78,  126,  126,    0,  126,  126,  126,  126,  453,
 /*   160 */   450,  450,  438,  438,  428,  428,  438,  438,  448,  438,
 /*   170 */   428,  438,  428,  438,  431,  428,  438,  438,  438,  438,
 /*   180 */   449,  438,  438,  438,  438,  438,  438,  438,  428,  428,
 /*   190 */   438,  438,  438,    1,  -55,    1,  468,    1,  472,  454,
 /*   200 */     1,  339,  -55,  -55,    1,  358,  339,  187,  112,   86,
 /*   210 */   117,  120,
);
    static public $yyExpectedTokens = array(
        /* 0 */ array(3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 23, 24, 29, 33, 34, ),
        /* 1 */ array(18, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 2 */ array(18, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 3 */ array(18, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 4 */ array(18, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 5 */ array(18, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 6 */ array(18, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 7 */ array(18, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 8 */ array(18, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 9 */ array(18, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 66, 79, ),
        /* 10 */ array(18, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 11 */ array(18, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 12 */ array(18, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 13 */ array(18, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 14 */ array(18, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 15 */ array(18, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 16 */ array(18, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 17 */ array(18, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 18 */ array(18, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 19 */ array(18, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 20 */ array(18, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 21 */ array(18, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 22 */ array(18, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 23 */ array(18, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 24 */ array(18, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 25 */ array(18, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 26 */ array(18, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 27 */ array(18, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 28 */ array(18, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 29 */ array(18, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 30 */ array(18, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 31 */ array(18, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 32 */ array(18, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 33 */ array(18, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 34 */ array(18, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 35 */ array(18, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 36 */ array(18, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 37 */ array(18, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 38 */ array(18, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 39 */ array(18, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 40 */ array(18, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 41 */ array(18, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 42 */ array(18, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 43 */ array(18, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 44 */ array(18, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 45 */ array(18, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 46 */ array(18, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 47 */ array(18, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 79, ),
        /* 48 */ array(18, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 79, ),
        /* 49 */ array(18, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 79, ),
        /* 50 */ array(18, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 79, ),
        /* 51 */ array(18, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 79, ),
        /* 52 */ array(18, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 79, ),
        /* 53 */ array(18, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 79, ),
        /* 54 */ array(1, 28, 30, 35, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 55 */ array(1, 4, 30, 35, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 56 */ array(1, 30, 35, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 57 */ array(1, 30, 35, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 58 */ array(1, 30, 35, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 59 */ array(1, 30, 35, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 60 */ array(1, 30, 35, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 61 */ array(1, 30, 35, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 62 */ array(1, 4, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 63 */ array(1, 25, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 64 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 65 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, ),
        /* 66 */ array(1, 4, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 67 */ array(1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 68 */ array(1, 2, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 69 */ array(1, 4, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 70 */ array(1, 31, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 71 */ array(1, 4, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 72 */ array(1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 73 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 74 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 75 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 76 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 77 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 78 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 79 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 80 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 81 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 82 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 83 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 84 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 85 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 86 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 87 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 88 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 89 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 90 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 91 */ array(40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 92 */ array(40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 93 */ array(1, 22, 30, 35, 38, 62, ),
        /* 94 */ array(1, 30, 35, 54, ),
        /* 95 */ array(1, 30, 35, ),
        /* 96 */ array(3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 23, 24, 29, 33, 34, ),
        /* 97 */ array(12, 18, 23, 24, 29, 33, 34, 79, 80, 81, ),
        /* 98 */ array(18, 20, 30, 32, 35, ),
        /* 99 */ array(18, 20, 30, 32, 35, ),
        /* 100 */ array(18, 20, 30, 35, ),
        /* 101 */ array(18, 20, 30, 35, ),
        /* 102 */ array(1, 30, 35, ),
        /* 103 */ array(22, 60, 65, ),
        /* 104 */ array(19, 20, 64, ),
        /* 105 */ array(1, 30, 35, ),
        /* 106 */ array(1, 30, 35, ),
        /* 107 */ array(1, 30, 35, ),
        /* 108 */ array(1, 2, ),
        /* 109 */ array(19, 38, ),
        /* 110 */ array(12, 18, 23, 24, 29, 33, 34, 79, 80, 81, ),
        /* 111 */ array(6, 7, 8, 9, 10, 15, 16, 17, ),
        /* 112 */ array(18, 20, 21, 63, ),
        /* 113 */ array(18, 20, 21, ),
        /* 114 */ array(21, 22, 62, ),
        /* 115 */ array(18, 20, 63, ),
        /* 116 */ array(1, 32, 54, ),
        /* 117 */ array(1, 31, 54, ),
        /* 118 */ array(21, 22, 62, ),
        /* 119 */ array(1, 22, ),
        /* 120 */ array(19, 20, ),
        /* 121 */ array(22, 62, ),
        /* 122 */ array(18, 20, ),
        /* 123 */ array(18, 20, ),
        /* 124 */ array(18, 20, ),
        /* 125 */ array(1, 54, ),
        /* 126 */ array(30, 35, ),
        /* 127 */ array(18, 20, ),
        /* 128 */ array(18, 20, ),
        /* 129 */ array(30, 35, ),
        /* 130 */ array(19, 38, ),
        /* 131 */ array(18, 20, ),
        /* 132 */ array(18, 20, ),
        /* 133 */ array(19, 20, ),
        /* 134 */ array(18, 20, ),
        /* 135 */ array(18, 20, ),
        /* 136 */ array(19, 38, ),
        /* 137 */ array(19, 20, ),
        /* 138 */ array(1, 54, ),
        /* 139 */ array(30, 35, ),
        /* 140 */ array(1, 54, ),
        /* 141 */ array(18, 20, ),
        /* 142 */ array(18, 20, ),
        /* 143 */ array(18, 20, ),
        /* 144 */ array(18, 20, ),
        /* 145 */ array(18, 20, ),
        /* 146 */ array(1, 54, ),
        /* 147 */ array(1, ),
        /* 148 */ array(1, ),
        /* 149 */ array(22, ),
        /* 150 */ array(1, ),
        /* 151 */ array(22, ),
        /* 152 */ array(1, ),
        /* 153 */ array(1, ),
        /* 154 */ array(1, ),
        /* 155 */ array(1, ),
        /* 156 */ array(1, ),
        /* 157 */ array(1, ),
        /* 158 */ array(),
        /* 159 */ array(18, 19, 20, ),
        /* 160 */ array(18, 20, 21, ),
        /* 161 */ array(18, 20, 63, ),
        /* 162 */ array(30, 35, ),
        /* 163 */ array(30, 35, ),
        /* 164 */ array(60, 65, ),
        /* 165 */ array(60, 65, ),
        /* 166 */ array(30, 35, ),
        /* 167 */ array(30, 35, ),
        /* 168 */ array(60, 65, ),
        /* 169 */ array(30, 35, ),
        /* 170 */ array(60, 65, ),
        /* 171 */ array(30, 35, ),
        /* 172 */ array(60, 65, ),
        /* 173 */ array(30, 35, ),
        /* 174 */ array(60, 65, ),
        /* 175 */ array(60, 65, ),
        /* 176 */ array(30, 35, ),
        /* 177 */ array(30, 35, ),
        /* 178 */ array(30, 35, ),
        /* 179 */ array(30, 35, ),
        /* 180 */ array(18, 38, ),
        /* 181 */ array(30, 35, ),
        /* 182 */ array(30, 35, ),
        /* 183 */ array(30, 35, ),
        /* 184 */ array(30, 35, ),
        /* 185 */ array(30, 35, ),
        /* 186 */ array(30, 35, ),
        /* 187 */ array(30, 35, ),
        /* 188 */ array(60, 65, ),
        /* 189 */ array(60, 65, ),
        /* 190 */ array(30, 35, ),
        /* 191 */ array(30, 35, ),
        /* 192 */ array(30, 35, ),
        /* 193 */ array(1, ),
        /* 194 */ array(22, ),
        /* 195 */ array(1, ),
        /* 196 */ array(30, ),
        /* 197 */ array(1, ),
        /* 198 */ array(16, ),
        /* 199 */ array(38, ),
        /* 200 */ array(1, ),
        /* 201 */ array(2, ),
        /* 202 */ array(22, ),
        /* 203 */ array(22, ),
        /* 204 */ array(1, ),
        /* 205 */ array(30, ),
        /* 206 */ array(2, ),
        /* 207 */ array(),
        /* 208 */ array(),
        /* 209 */ array(),
        /* 210 */ array(),
        /* 211 */ array(),
        /* 212 */ array(4, 25, 27, 28, 30, 31, 32, 35, 37, 38, 39, 54, 62, 66, 80, ),
        /* 213 */ array(38, 60, 62, 66, ),
        /* 214 */ array(18, 19, 20, 36, ),
        /* 215 */ array(21, 38, 62, ),
        /* 216 */ array(32, 38, 62, ),
        /* 217 */ array(37, 39, ),
        /* 218 */ array(25, 37, ),
        /* 219 */ array(37, 39, ),
        /* 220 */ array(37, 39, ),
        /* 221 */ array(37, 39, ),
        /* 222 */ array(38, 62, ),
        /* 223 */ array(2, 21, ),
        /* 224 */ array(37, 66, ),
        /* 225 */ array(21, 60, ),
        /* 226 */ array(38, 62, ),
        /* 227 */ array(19, 26, ),
        /* 228 */ array(38, 62, ),
        /* 229 */ array(20, 63, ),
        /* 230 */ array(38, 62, ),
        /* 231 */ array(80, ),
        /* 232 */ array(38, ),
        /* 233 */ array(20, ),
        /* 234 */ array(20, ),
        /* 235 */ array(27, ),
        /* 236 */ array(19, ),
        /* 237 */ array(38, ),
        /* 238 */ array(20, ),
        /* 239 */ array(20, ),
        /* 240 */ array(20, ),
        /* 241 */ array(2, ),
        /* 242 */ array(20, ),
        /* 243 */ array(36, ),
        /* 244 */ array(20, ),
        /* 245 */ array(4, ),
        /* 246 */ array(4, ),
        /* 247 */ array(4, ),
        /* 248 */ array(39, ),
        /* 249 */ array(20, ),
        /* 250 */ array(19, ),
        /* 251 */ array(19, ),
        /* 252 */ array(60, ),
        /* 253 */ array(56, ),
        /* 254 */ array(2, ),
        /* 255 */ array(66, ),
        /* 256 */ array(19, ),
        /* 257 */ array(64, ),
        /* 258 */ array(36, ),
        /* 259 */ array(20, ),
        /* 260 */ array(21, ),
        /* 261 */ array(20, ),
        /* 262 */ array(64, ),
        /* 263 */ array(20, ),
        /* 264 */ array(),
        /* 265 */ array(),
        /* 266 */ array(),
        /* 267 */ array(),
        /* 268 */ array(),
        /* 269 */ array(),
        /* 270 */ array(),
        /* 271 */ array(),
        /* 272 */ array(),
        /* 273 */ array(),
        /* 274 */ array(),
        /* 275 */ array(),
        /* 276 */ array(),
        /* 277 */ array(),
        /* 278 */ array(),
        /* 279 */ array(),
        /* 280 */ array(),
        /* 281 */ array(),
        /* 282 */ array(),
        /* 283 */ array(),
        /* 284 */ array(),
        /* 285 */ array(),
        /* 286 */ array(),
        /* 287 */ array(),
        /* 288 */ array(),
        /* 289 */ array(),
        /* 290 */ array(),
        /* 291 */ array(),
        /* 292 */ array(),
        /* 293 */ array(),
        /* 294 */ array(),
        /* 295 */ array(),
        /* 296 */ array(),
        /* 297 */ array(),
        /* 298 */ array(),
        /* 299 */ array(),
        /* 300 */ array(),
        /* 301 */ array(),
        /* 302 */ array(),
        /* 303 */ array(),
        /* 304 */ array(),
        /* 305 */ array(),
        /* 306 */ array(),
        /* 307 */ array(),
        /* 308 */ array(),
        /* 309 */ array(),
        /* 310 */ array(),
        /* 311 */ array(),
        /* 312 */ array(),
        /* 313 */ array(),
        /* 314 */ array(),
        /* 315 */ array(),
        /* 316 */ array(),
        /* 317 */ array(),
        /* 318 */ array(),
        /* 319 */ array(),
        /* 320 */ array(),
        /* 321 */ array(),
        /* 322 */ array(),
        /* 323 */ array(),
        /* 324 */ array(),
        /* 325 */ array(),
        /* 326 */ array(),
        /* 327 */ array(),
        /* 328 */ array(),
        /* 329 */ array(),
        /* 330 */ array(),
        /* 331 */ array(),
        /* 332 */ array(),
        /* 333 */ array(),
        /* 334 */ array(),
        /* 335 */ array(),
        /* 336 */ array(),
        /* 337 */ array(),
        /* 338 */ array(),
        /* 339 */ array(),
        /* 340 */ array(),
        /* 341 */ array(),
        /* 342 */ array(),
        /* 343 */ array(),
        /* 344 */ array(),
        /* 345 */ array(),
        /* 346 */ array(),
        /* 347 */ array(),
        /* 348 */ array(),
        /* 349 */ array(),
        /* 350 */ array(),
        /* 351 */ array(),
        /* 352 */ array(),
        /* 353 */ array(),
        /* 354 */ array(),
        /* 355 */ array(),
        /* 356 */ array(),
        /* 357 */ array(),
        /* 358 */ array(),
        /* 359 */ array(),
        /* 360 */ array(),
        /* 361 */ array(),
        /* 362 */ array(),
        /* 363 */ array(),
        /* 364 */ array(),
        /* 365 */ array(),
        /* 366 */ array(),
        /* 367 */ array(),
);
    static public $yy_default = array(
 /*     0 */   371,  558,  575,  529,  575,  529,  529,  575,  529,  575,
 /*    10 */   575,  575,  575,  575,  575,  575,  575,  575,  575,  575,
 /*    20 */   575,  575,  575,  575,  575,  575,  575,  575,  575,  575,
 /*    30 */   575,  575,  575,  575,  575,  575,  575,  575,  575,  575,
 /*    40 */   575,  575,  575,  575,  575,  575,  575,  575,  575,  575,
 /*    50 */   575,  575,  575,  575,  431,  575,  410,  431,  431,  431,
 /*    60 */   402,  431,  575,  575,  575,  575,  575,  575,  575,  575,
 /*    70 */   436,  575,  575,  436,  433,  456,  464,  461,  527,  528,
 /*    80 */   559,  560,  460,  438,  455,  442,  441,  561,  457,  452,
 /*    90 */   465,  469,  470,  406,  396,  431,  368,  575,  431,  431,
 /*   100 */   431,  431,  431,  541,  575,  431,  431,  431,  423,  575,
 /*   110 */   575,  575,  501,  501,  492,  501,  444,  437,  492,  425,
 /*   120 */   575,  492,  575,  575,  575,  401,  431,  575,  575,  431,
 /*   130 */   575,  575,  575,  575,  575,  575,  575,  575,  437,  412,
 /*   140 */   434,  501,  575,  575,  575,  575,  444,  447,  449,  538,
 /*   150 */   454,  492,  448,  468,  427,  474,  472,  473,  536,  575,
 /*   160 */   575,  502,  422,  403,  520,  521,  415,  414,  497,  399,
 /*   170 */   496,  400,  498,  421,  495,  519,  398,  418,  411,  413,
 /*   180 */   501,  407,  409,  408,  416,  397,  417,  405,  518,  499,
 /*   190 */   404,  420,  419,  428,  542,  491,  574,  451,  388,  501,
 /*   200 */   426,  530,  515,  539,  424,  574,  531,  501,  501,  535,
 /*   210 */   535,  535,  446,  480,  575,  435,  480,  575,  575,  575,
 /*   220 */   575,  575,  467,  513,  575,  476,  466,  575,  480,  575,
 /*   230 */   488,  471,  513,  575,  575,  439,  575,  540,  575,  575,
 /*   240 */   575,  513,  575,  575,  575,  575,  575,  471,  575,  575,
 /*   250 */   575,  575,  476,  482,  513,  575,  575,  575,  478,  575,
 /*   260 */   575,  575,  575,  575,  524,  372,  510,  482,  385,  508,
 /*   270 */   369,  370,  507,  537,  381,  380,  379,  378,  440,  573,
 /*   280 */   432,  383,  382,  443,  384,  374,  373,  523,  375,  525,
 /*   290 */   514,  377,  376,  506,  570,  516,  517,  513,  489,  453,
 /*   300 */   485,  487,  534,  512,  458,  544,  545,  546,  543,  463,
 /*   310 */   459,  462,  484,  483,  486,  445,  446,  479,  477,  471,
 /*   320 */   475,  493,  500,  533,  481,  532,  505,  504,  503,  511,
 /*   330 */   547,  548,  394,  557,  556,  555,  395,  571,  572,  565,
 /*   340 */   393,  392,  387,  386,  522,  389,  526,  391,  390,  568,
 /*   350 */   566,  553,  554,  450,  552,  551,  549,  550,  430,  490,
 /*   360 */   564,  429,  567,  563,  562,  494,  569,  509,
);
    const YYNOCODE = 124;
    const YYSTACKDEPTH = 500;
    const YYNSTATE = 368;
    const YYNRULE = 207;
    const YYERRORSYMBOL = 82;
    const YYERRSYMDT = 'yy0';
    const YYFALLBACK = 0;
    public static $yyFallback = array(
    );
    public static function Trace($TraceFILE, $zTracePrompt)
    {
        if (!$TraceFILE) {
            $zTracePrompt = 0;
        } elseif (!$zTracePrompt) {
            $TraceFILE = 0;
        }
        self::$yyTraceFILE = $TraceFILE;
        self::$yyTracePrompt = $zTracePrompt;
    }

    public static function PrintTrace()
    {
        self::$yyTraceFILE = fopen('php://output', 'w');
        self::$yyTracePrompt = '<br>';
    }

    public static $yyTraceFILE;
    public static $yyTracePrompt;
    public $yyidx;                    /* Index of top element in stack */
    public $yyerrcnt;                 /* Shifts left before out of the error */
    public $yystack = array();  /* The parser's stack */

    public $yyTokenName = array(
  '$',             'VERT',          'COLON',         'TEMPLATEINIT',
  'RDEL',          'COMMENT',       'PHPSTARTTAG',   'PHPENDTAG',   
  'ASPSTARTTAG',   'ASPENDTAG',     'FAKEPHPSTARTTAG',  'XMLTAG',      
  'TEXT',          'STRIPON',       'STRIPOFF',      'LITERALSTART',
  'LITERALEND',    'LITERAL',       'LDEL',          'DOLLAR',      
  'ID',            'EQUAL',         'PTR',           'LDELIF',      
  'LDELFOR',       'SEMICOLON',     'IDINCDEC',      'TO',          
  'STEP',          'LDELFOREACH',   'SPACE',         'AS',          
  'APTR',          'LDELSETFILTER',  'LDELSLASH',     'ATTR',        
  'INTEGER',       'COMMA',         'OPENP',         'CLOSEP',      
  'MATH',          'UNIMATH',       'ANDSYM',        'ISIN',        
  'ISDIVBY',       'ISNOTDIVBY',    'ISEVEN',        'ISNOTEVEN',   
  'ISEVENBY',      'ISNOTEVENBY',   'ISODD',         'ISNOTODD',    
  'ISODDBY',       'ISNOTODDBY',    'INSTANCEOF',    'NAMESPACE',   
  'QMARK',         'NOT',           'TYPECAST',      'HEX',         
  'DOT',           'SINGLEQUOTESTRING',  'DOUBLECOLON',   'AT',          
  'HATCH',         'OPENB',         'CLOSEB',        'EQUALS',      
  'NOTEQUALS',     'GREATERTHAN',   'LESSTHAN',      'GREATEREQUAL',
  'LESSEQUAL',     'IDENTITY',      'NONEIDENTITY',  'MOD',         
  'LAND',          'LOR',           'LXOR',          'QUOTE',       
  'BACKTICK',      'DOLLARID',      'error',         'start',       
  'template',      'template_element',  'smartytag',     'literal',     
  'literal_elements',  'literal_element',  'value',         'modifierlist',
  'attributes',    'expr',          'varindexed',    'statement',   
  'statements',    'optspace',      'varvar',        'modparameters',
  'attribute',     'ternary',       'array',         'ifcond',      
  'lop',           'variable',      'function',      'doublequoted_with_quotes',
  'static_class_access',  'object',        'arrayindex',    'indexdef',    
  'varvarele',     'objectchain',   'objectelement',  'method',      
  'params',        'modifier',      'modparameter',  'arrayelements',
  'arrayelement',  'doublequoted',  'doublequotedcontent',
    );

    public static $yyRuleName = array(
 /*   0 */ "start ::= template",
 /*   1 */ "template ::= template_element",
 /*   2 */ "template ::= template template_element",
 /*   3 */ "template ::=",
 /*   4 */ "template_element ::= TEMPLATEINIT",
 /*   5 */ "template_element ::= smartytag RDEL",
 /*   6 */ "template_element ::= COMMENT",
 /*   7 */ "template_element ::= literal",
 /*   8 */ "template_element ::= PHPSTARTTAG",
 /*   9 */ "template_element ::= PHPENDTAG",
 /*  10 */ "template_element ::= ASPSTARTTAG",
 /*  11 */ "template_element ::= ASPENDTAG",
 /*  12 */ "template_element ::= FAKEPHPSTARTTAG",
 /*  13 */ "template_element ::= XMLTAG",
 /*  14 */ "template_element ::= TEXT",
 /*  15 */ "template_element ::= STRIPON",
 /*  16 */ "template_element ::= STRIPOFF",
 /*  17 */ "literal ::= LITERALSTART LITERALEND",
 /*  18 */ "literal ::= LITERALSTART literal_elements LITERALEND",
 /*  19 */ "literal_elements ::= literal_elements literal_element",
 /*  20 */ "literal_elements ::=",
 /*  21 */ "literal_element ::= literal",
 /*  22 */ "literal_element ::= LITERAL",
 /*  23 */ "literal_element ::= PHPSTARTTAG",
 /*  24 */ "literal_element ::= FAKEPHPSTARTTAG",
 /*  25 */ "literal_element ::= PHPENDTAG",
 /*  26 */ "literal_element ::= ASPSTARTTAG",
 /*  27 */ "literal_element ::= ASPENDTAG",
 /*  28 */ "smartytag ::= LDEL value",
 /*  29 */ "smartytag ::= LDEL value modifierlist attributes",
 /*  30 */ "smartytag ::= LDEL value attributes",
 /*  31 */ "smartytag ::= LDEL expr modifierlist attributes",
 /*  32 */ "smartytag ::= LDEL expr attributes",
 /*  33 */ "smartytag ::= LDEL DOLLAR ID EQUAL value",
 /*  34 */ "smartytag ::= LDEL DOLLAR ID EQUAL expr",
 /*  35 */ "smartytag ::= LDEL DOLLAR ID EQUAL expr attributes",
 /*  36 */ "smartytag ::= LDEL varindexed EQUAL expr attributes",
 /*  37 */ "smartytag ::= LDEL ID attributes",
 /*  38 */ "smartytag ::= LDEL ID",
 /*  39 */ "smartytag ::= LDEL ID PTR ID attributes",
 /*  40 */ "smartytag ::= LDEL ID modifierlist attributes",
 /*  41 */ "smartytag ::= LDEL ID PTR ID modifierlist attributes",
 /*  42 */ "smartytag ::= LDELIF expr",
 /*  43 */ "smartytag ::= LDELIF expr attributes",
 /*  44 */ "smartytag ::= LDELIF statement",
 /*  45 */ "smartytag ::= LDELIF statement attributes",
 /*  46 */ "smartytag ::= LDELFOR statements SEMICOLON optspace expr SEMICOLON optspace DOLLAR varvar EQUAL expr attributes",
 /*  47 */ "smartytag ::= LDELFOR statements SEMICOLON optspace expr SEMICOLON optspace IDINCDEC attributes",
 /*  48 */ "smartytag ::= LDELFOR statement TO expr attributes",
 /*  49 */ "smartytag ::= LDELFOR statement TO expr STEP expr attributes",
 /*  50 */ "smartytag ::= LDELFOREACH attributes",
 /*  51 */ "smartytag ::= LDELFOREACH SPACE value AS DOLLAR varvar attributes",
 /*  52 */ "smartytag ::= LDELFOREACH SPACE value AS DOLLAR varvar APTR DOLLAR varvar attributes",
 /*  53 */ "smartytag ::= LDELFOREACH SPACE expr AS DOLLAR varvar attributes",
 /*  54 */ "smartytag ::= LDELFOREACH SPACE expr AS DOLLAR varvar APTR DOLLAR varvar attributes",
 /*  55 */ "smartytag ::= LDELSETFILTER ID modparameters",
 /*  56 */ "smartytag ::= LDELSETFILTER ID modparameters modifierlist",
 /*  57 */ "smartytag ::= LDELSLASH ID",
 /*  58 */ "smartytag ::= LDELSLASH ID modifierlist",
 /*  59 */ "smartytag ::= LDELSLASH ID PTR ID",
 /*  60 */ "smartytag ::= LDELSLASH ID PTR ID modifierlist",
 /*  61 */ "attributes ::= attributes attribute",
 /*  62 */ "attributes ::= attribute",
 /*  63 */ "attributes ::=",
 /*  64 */ "attribute ::= SPACE ID EQUAL ID",
 /*  65 */ "attribute ::= ATTR expr",
 /*  66 */ "attribute ::= ATTR value",
 /*  67 */ "attribute ::= SPACE ID",
 /*  68 */ "attribute ::= SPACE expr",
 /*  69 */ "attribute ::= SPACE value",
 /*  70 */ "attribute ::= SPACE INTEGER EQUAL expr",
 /*  71 */ "statements ::= statement",
 /*  72 */ "statements ::= statements COMMA statement",
 /*  73 */ "statement ::= DOLLAR varvar EQUAL expr",
 /*  74 */ "statement ::= varindexed EQUAL expr",
 /*  75 */ "statement ::= OPENP statement CLOSEP",
 /*  76 */ "expr ::= value",
 /*  77 */ "expr ::= ternary",
 /*  78 */ "expr ::= DOLLAR ID COLON ID",
 /*  79 */ "expr ::= expr MATH value",
 /*  80 */ "expr ::= expr UNIMATH value",
 /*  81 */ "expr ::= expr ANDSYM value",
 /*  82 */ "expr ::= array",
 /*  83 */ "expr ::= expr modifierlist",
 /*  84 */ "expr ::= expr ifcond expr",
 /*  85 */ "expr ::= expr ISIN array",
 /*  86 */ "expr ::= expr ISIN value",
 /*  87 */ "expr ::= expr lop expr",
 /*  88 */ "expr ::= expr ISDIVBY expr",
 /*  89 */ "expr ::= expr ISNOTDIVBY expr",
 /*  90 */ "expr ::= expr ISEVEN",
 /*  91 */ "expr ::= expr ISNOTEVEN",
 /*  92 */ "expr ::= expr ISEVENBY expr",
 /*  93 */ "expr ::= expr ISNOTEVENBY expr",
 /*  94 */ "expr ::= expr ISODD",
 /*  95 */ "expr ::= expr ISNOTODD",
 /*  96 */ "expr ::= expr ISODDBY expr",
 /*  97 */ "expr ::= expr ISNOTODDBY expr",
 /*  98 */ "expr ::= value INSTANCEOF ID",
 /*  99 */ "expr ::= value INSTANCEOF NAMESPACE",
 /* 100 */ "expr ::= value INSTANCEOF value",
 /* 101 */ "ternary ::= OPENP expr CLOSEP QMARK DOLLAR ID COLON expr",
 /* 102 */ "ternary ::= OPENP expr CLOSEP QMARK expr COLON expr",
 /* 103 */ "value ::= variable",
 /* 104 */ "value ::= UNIMATH value",
 /* 105 */ "value ::= NOT value",
 /* 106 */ "value ::= TYPECAST value",
 /* 107 */ "value ::= HEX",
 /* 108 */ "value ::= INTEGER",
 /* 109 */ "value ::= INTEGER DOT INTEGER",
 /* 110 */ "value ::= INTEGER DOT",
 /* 111 */ "value ::= DOT INTEGER",
 /* 112 */ "value ::= ID",
 /* 113 */ "value ::= function",
 /* 114 */ "value ::= OPENP expr CLOSEP",
 /* 115 */ "value ::= SINGLEQUOTESTRING",
 /* 116 */ "value ::= doublequoted_with_quotes",
 /* 117 */ "value ::= IDINCDEC",
 /* 118 */ "value ::= ID DOUBLECOLON static_class_access",
 /* 119 */ "value ::= NAMESPACE DOUBLECOLON static_class_access",
 /* 120 */ "value ::= NAMESPACE",
 /* 121 */ "value ::= varindexed DOUBLECOLON static_class_access",
 /* 122 */ "value ::= smartytag",
 /* 123 */ "value ::= value modifierlist",
 /* 124 */ "variable ::= varindexed",
 /* 125 */ "variable ::= DOLLAR varvar AT ID",
 /* 126 */ "variable ::= object",
 /* 127 */ "variable ::= HATCH ID HATCH",
 /* 128 */ "variable ::= HATCH ID HATCH arrayindex",
 /* 129 */ "variable ::= HATCH variable HATCH",
 /* 130 */ "variable ::= HATCH variable HATCH arrayindex",
 /* 131 */ "varindexed ::= DOLLAR varvar arrayindex",
 /* 132 */ "arrayindex ::= arrayindex indexdef",
 /* 133 */ "arrayindex ::=",
 /* 134 */ "indexdef ::= DOT DOLLAR varvar",
 /* 135 */ "indexdef ::= DOT DOLLAR varvar AT ID",
 /* 136 */ "indexdef ::= DOT ID",
 /* 137 */ "indexdef ::= DOT INTEGER",
 /* 138 */ "indexdef ::= DOT LDEL expr RDEL",
 /* 139 */ "indexdef ::= OPENB ID CLOSEB",
 /* 140 */ "indexdef ::= OPENB ID DOT ID CLOSEB",
 /* 141 */ "indexdef ::= OPENB expr CLOSEB",
 /* 142 */ "indexdef ::= OPENB CLOSEB",
 /* 143 */ "varvar ::= varvarele",
 /* 144 */ "varvar ::= varvar varvarele",
 /* 145 */ "varvarele ::= ID",
 /* 146 */ "varvarele ::= LDEL expr RDEL",
 /* 147 */ "object ::= varindexed objectchain",
 /* 148 */ "objectchain ::= objectelement",
 /* 149 */ "objectchain ::= objectchain objectelement",
 /* 150 */ "objectelement ::= PTR ID arrayindex",
 /* 151 */ "objectelement ::= PTR DOLLAR varvar arrayindex",
 /* 152 */ "objectelement ::= PTR LDEL expr RDEL arrayindex",
 /* 153 */ "objectelement ::= PTR ID LDEL expr RDEL arrayindex",
 /* 154 */ "objectelement ::= PTR method",
 /* 155 */ "function ::= ID OPENP params CLOSEP",
 /* 156 */ "function ::= NAMESPACE OPENP params CLOSEP",
 /* 157 */ "method ::= ID OPENP params CLOSEP",
 /* 158 */ "method ::= DOLLAR ID OPENP params CLOSEP",
 /* 159 */ "params ::= params COMMA expr",
 /* 160 */ "params ::= expr",
 /* 161 */ "params ::=",
 /* 162 */ "modifierlist ::= modifierlist modifier modparameters",
 /* 163 */ "modifierlist ::= modifier modparameters",
 /* 164 */ "modifier ::= VERT AT ID",
 /* 165 */ "modifier ::= VERT ID",
 /* 166 */ "modparameters ::= modparameters modparameter",
 /* 167 */ "modparameters ::=",
 /* 168 */ "modparameter ::= COLON value",
 /* 169 */ "modparameter ::= COLON array",
 /* 170 */ "static_class_access ::= method",
 /* 171 */ "static_class_access ::= method objectchain",
 /* 172 */ "static_class_access ::= ID",
 /* 173 */ "static_class_access ::= DOLLAR ID arrayindex",
 /* 174 */ "static_class_access ::= DOLLAR ID arrayindex objectchain",
 /* 175 */ "ifcond ::= EQUALS",
 /* 176 */ "ifcond ::= NOTEQUALS",
 /* 177 */ "ifcond ::= GREATERTHAN",
 /* 178 */ "ifcond ::= LESSTHAN",
 /* 179 */ "ifcond ::= GREATEREQUAL",
 /* 180 */ "ifcond ::= LESSEQUAL",
 /* 181 */ "ifcond ::= IDENTITY",
 /* 182 */ "ifcond ::= NONEIDENTITY",
 /* 183 */ "ifcond ::= MOD",
 /* 184 */ "lop ::= LAND",
 /* 185 */ "lop ::= LOR",
 /* 186 */ "lop ::= LXOR",
 /* 187 */ "array ::= OPENB arrayelements CLOSEB",
 /* 188 */ "arrayelements ::= arrayelement",
 /* 189 */ "arrayelements ::= arrayelements COMMA arrayelement",
 /* 190 */ "arrayelements ::=",
 /* 191 */ "arrayelement ::= value APTR expr",
 /* 192 */ "arrayelement ::= ID APTR expr",
 /* 193 */ "arrayelement ::= expr",
 /* 194 */ "doublequoted_with_quotes ::= QUOTE QUOTE",
 /* 195 */ "doublequoted_with_quotes ::= QUOTE doublequoted QUOTE",
 /* 196 */ "doublequoted ::= doublequoted doublequotedcontent",
 /* 197 */ "doublequoted ::= doublequotedcontent",
 /* 198 */ "doublequotedcontent ::= BACKTICK variable BACKTICK",
 /* 199 */ "doublequotedcontent ::= BACKTICK expr BACKTICK",
 /* 200 */ "doublequotedcontent ::= DOLLARID",
 /* 201 */ "doublequotedcontent ::= LDEL variable RDEL",
 /* 202 */ "doublequotedcontent ::= LDEL expr RDEL",
 /* 203 */ "doublequotedcontent ::= smartytag RDEL",
 /* 204 */ "doublequotedcontent ::= TEXT",
 /* 205 */ "optspace ::= SPACE",
 /* 206 */ "optspace ::=",
    );

    public function tokenName($tokenType)
    {
        if ($tokenType === 0) {
            return 'End of Input';
        }
        if ($tokenType > 0 && $tokenType < count($this->yyTokenName)) {
            return $this->yyTokenName[$tokenType];
        } else {
            return "Unknown";
        }
    }

    public static function yy_destructor($yymajor, $yypminor)
    {
        switch ($yymajor) {
            default:  break;   /* If no destructor action specified: do nothing */
        }
    }

    public function yy_pop_parser_stack()
    {
        if (!count($this->yystack)) {
            return;
        }
        $yytos = array_pop($this->yystack);
        if (self::$yyTraceFILE && $this->yyidx >= 0) {
            fwrite(self::$yyTraceFILE,
                self::$yyTracePrompt . 'Popping ' . $this->yyTokenName[$yytos->major] .
                    "\n");
        }
        $yymajor = $yytos->major;
        self::yy_destructor($yymajor, $yytos->minor);
        $this->yyidx--;

        return $yymajor;
    }

    public function __destruct()
    {
        while ($this->yystack !== Array()) {
            $this->yy_pop_parser_stack();
        }
        if (is_resource(self::$yyTraceFILE)) {
            fclose(self::$yyTraceFILE);
        }
    }

    public function yy_get_expected_tokens($token)
    {
        $state = $this->yystack[$this->yyidx]->stateno;
        $expected = self::$yyExpectedTokens[$state];
        if (in_array($token, self::$yyExpectedTokens[$state], true)) {
            return $expected;
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return array_unique($expected);
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[$yyruleno]['rhs'];
                    $nextstate = $this->yy_find_reduce_action(
                        $this->yystack[$this->yyidx]->stateno,
                        self::$yyRuleInfo[$yyruleno]['lhs']);
                    if (isset(self::$yyExpectedTokens[$nextstate])) {
                $expected = array_merge($expected, self::$yyExpectedTokens[$nextstate]);
                            if (in_array($token,
                                  self::$yyExpectedTokens[$nextstate], true)) {
                            $this->yyidx = $yyidx;
                            $this->yystack = $stack;

                            return array_unique($expected);
                        }
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[$yyruleno]['lhs'];
                        $this->yystack[$this->yyidx] = $x;
                        continue 2;
                    } elseif ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return array_unique($expected);
                    } elseif ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return $expected;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
    $this->yyidx = $yyidx;
    $this->yystack = $stack;

        return array_unique($expected);
    }

    public function yy_is_expected_token($token)
    {
        if ($token === 0) {
            return true; // 0 is not part of this
        }
        $state = $this->yystack[$this->yyidx]->stateno;
        if (in_array($token, self::$yyExpectedTokens[$state], true)) {
            return true;
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return true;
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[$yyruleno]['rhs'];
                    $nextstate = $this->yy_find_reduce_action(
                        $this->yystack[$this->yyidx]->stateno,
                        self::$yyRuleInfo[$yyruleno]['lhs']);
                    if (isset(self::$yyExpectedTokens[$nextstate]) &&
                          in_array($token, self::$yyExpectedTokens[$nextstate], true)) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;

                        return true;
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[$yyruleno]['lhs'];
                        $this->yystack[$this->yyidx] = $x;
                        continue 2;
                    } elseif ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        if (!$token) {
                            // end of input: this is valid
                            return true;
                        }
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return false;
                    } elseif ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return true;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
        $this->yyidx = $yyidx;
        $this->yystack = $stack;

        return true;
    }

   public function yy_find_shift_action($iLookAhead)
    {
        $stateno = $this->yystack[$this->yyidx]->stateno;

        /* if ($this->yyidx < 0) return self::YY_NO_ACTION;  */
        if (!isset(self::$yy_shift_ofst[$stateno])) {
            // no shift actions
            return self::$yy_default[$stateno];
        }
        $i = self::$yy_shift_ofst[$stateno];
        if ($i === self::YY_SHIFT_USE_DFLT) {
            return self::$yy_default[$stateno];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
              self::$yy_lookahead[$i] != $iLookAhead) {
            if (count(self::$yyFallback) && $iLookAhead < count(self::$yyFallback)
                   && ($iFallback = self::$yyFallback[$iLookAhead]) != 0) {
                if (self::$yyTraceFILE) {
                    fwrite(self::$yyTraceFILE, self::$yyTracePrompt . "FALLBACK " .
                        $this->yyTokenName[$iLookAhead] . " => " .
                        $this->yyTokenName[$iFallback] . "\n");
                }

                return $this->yy_find_shift_action($iFallback);
            }

            return self::$yy_default[$stateno];
        } else {
            return self::$yy_action[$i];
        }
    }

    public function yy_find_reduce_action($stateno, $iLookAhead)
    {
        /* $stateno = $this->yystack[$this->yyidx]->stateno; */

        if (!isset(self::$yy_reduce_ofst[$stateno])) {
            return self::$yy_default[$stateno];
        }
        $i = self::$yy_reduce_ofst[$stateno];
        if ($i == self::YY_REDUCE_USE_DFLT) {
            return self::$yy_default[$stateno];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
              self::$yy_lookahead[$i] != $iLookAhead) {
            return self::$yy_default[$stateno];
        } else {
            return self::$yy_action[$i];
        }
    }

    public function yy_shift($yyNewState, $yyMajor, $yypMinor)
    {
        $this->yyidx++;
        if ($this->yyidx >= self::YYSTACKDEPTH) {
            $this->yyidx--;
            if (self::$yyTraceFILE) {
                fprintf(self::$yyTraceFILE, "%sStack Overflow!\n", self::$yyTracePrompt);
            }
            while ($this->yyidx >= 0) {
                $this->yy_pop_parser_stack();
            }
#line 84 "Smarty_Compiler_Template_Php_Parser.y"

    $this->internalError = true;
    $this->compiler->error("Stack overflow in template parser");
#line 1703 "Smarty_Compiler_Template_Php_Parser.php"

            return;
        }
        $yytos = new TP_yyStackEntry;
        $yytos->stateno = $yyNewState;
        $yytos->major = $yyMajor;
        $yytos->minor = $yypMinor;
        array_push($this->yystack, $yytos);
        if (self::$yyTraceFILE && $this->yyidx > 0) {
            fprintf(self::$yyTraceFILE, "%sShift %d\n", self::$yyTracePrompt,
                $yyNewState);
            fprintf(self::$yyTraceFILE, "%sStack:", self::$yyTracePrompt);
            for ($i = 1; $i <= $this->yyidx; $i++) {
                fprintf(self::$yyTraceFILE, " %s",
                    $this->yyTokenName[$this->yystack[$i]->major]);
            }
            fwrite(self::$yyTraceFILE,"\n");
        }
    }

    public static $yyRuleInfo = array(
  array( 'lhs' => 83, 'rhs' => 1 ),
  array( 'lhs' => 84, 'rhs' => 1 ),
  array( 'lhs' => 84, 'rhs' => 2 ),
  array( 'lhs' => 84, 'rhs' => 0 ),
  array( 'lhs' => 85, 'rhs' => 1 ),
  array( 'lhs' => 85, 'rhs' => 2 ),
  array( 'lhs' => 85, 'rhs' => 1 ),
  array( 'lhs' => 85, 'rhs' => 1 ),
  array( 'lhs' => 85, 'rhs' => 1 ),
  array( 'lhs' => 85, 'rhs' => 1 ),
  array( 'lhs' => 85, 'rhs' => 1 ),
  array( 'lhs' => 85, 'rhs' => 1 ),
  array( 'lhs' => 85, 'rhs' => 1 ),
  array( 'lhs' => 85, 'rhs' => 1 ),
  array( 'lhs' => 85, 'rhs' => 1 ),
  array( 'lhs' => 85, 'rhs' => 1 ),
  array( 'lhs' => 85, 'rhs' => 1 ),
  array( 'lhs' => 87, 'rhs' => 2 ),
  array( 'lhs' => 87, 'rhs' => 3 ),
  array( 'lhs' => 88, 'rhs' => 2 ),
  array( 'lhs' => 88, 'rhs' => 0 ),
  array( 'lhs' => 89, 'rhs' => 1 ),
  array( 'lhs' => 89, 'rhs' => 1 ),
  array( 'lhs' => 89, 'rhs' => 1 ),
  array( 'lhs' => 89, 'rhs' => 1 ),
  array( 'lhs' => 89, 'rhs' => 1 ),
  array( 'lhs' => 89, 'rhs' => 1 ),
  array( 'lhs' => 89, 'rhs' => 1 ),
  array( 'lhs' => 86, 'rhs' => 2 ),
  array( 'lhs' => 86, 'rhs' => 4 ),
  array( 'lhs' => 86, 'rhs' => 3 ),
  array( 'lhs' => 86, 'rhs' => 4 ),
  array( 'lhs' => 86, 'rhs' => 3 ),
  array( 'lhs' => 86, 'rhs' => 5 ),
  array( 'lhs' => 86, 'rhs' => 5 ),
  array( 'lhs' => 86, 'rhs' => 6 ),
  array( 'lhs' => 86, 'rhs' => 5 ),
  array( 'lhs' => 86, 'rhs' => 3 ),
  array( 'lhs' => 86, 'rhs' => 2 ),
  array( 'lhs' => 86, 'rhs' => 5 ),
  array( 'lhs' => 86, 'rhs' => 4 ),
  array( 'lhs' => 86, 'rhs' => 6 ),
  array( 'lhs' => 86, 'rhs' => 2 ),
  array( 'lhs' => 86, 'rhs' => 3 ),
  array( 'lhs' => 86, 'rhs' => 2 ),
  array( 'lhs' => 86, 'rhs' => 3 ),
  array( 'lhs' => 86, 'rhs' => 12 ),
  array( 'lhs' => 86, 'rhs' => 9 ),
  array( 'lhs' => 86, 'rhs' => 5 ),
  array( 'lhs' => 86, 'rhs' => 7 ),
  array( 'lhs' => 86, 'rhs' => 2 ),
  array( 'lhs' => 86, 'rhs' => 7 ),
  array( 'lhs' => 86, 'rhs' => 10 ),
  array( 'lhs' => 86, 'rhs' => 7 ),
  array( 'lhs' => 86, 'rhs' => 10 ),
  array( 'lhs' => 86, 'rhs' => 3 ),
  array( 'lhs' => 86, 'rhs' => 4 ),
  array( 'lhs' => 86, 'rhs' => 2 ),
  array( 'lhs' => 86, 'rhs' => 3 ),
  array( 'lhs' => 86, 'rhs' => 4 ),
  array( 'lhs' => 86, 'rhs' => 5 ),
  array( 'lhs' => 92, 'rhs' => 2 ),
  array( 'lhs' => 92, 'rhs' => 1 ),
  array( 'lhs' => 92, 'rhs' => 0 ),
  array( 'lhs' => 100, 'rhs' => 4 ),
  array( 'lhs' => 100, 'rhs' => 2 ),
  array( 'lhs' => 100, 'rhs' => 2 ),
  array( 'lhs' => 100, 'rhs' => 2 ),
  array( 'lhs' => 100, 'rhs' => 2 ),
  array( 'lhs' => 100, 'rhs' => 2 ),
  array( 'lhs' => 100, 'rhs' => 4 ),
  array( 'lhs' => 96, 'rhs' => 1 ),
  array( 'lhs' => 96, 'rhs' => 3 ),
  array( 'lhs' => 95, 'rhs' => 4 ),
  array( 'lhs' => 95, 'rhs' => 3 ),
  array( 'lhs' => 95, 'rhs' => 3 ),
  array( 'lhs' => 93, 'rhs' => 1 ),
  array( 'lhs' => 93, 'rhs' => 1 ),
  array( 'lhs' => 93, 'rhs' => 4 ),
  array( 'lhs' => 93, 'rhs' => 3 ),
  array( 'lhs' => 93, 'rhs' => 3 ),
  array( 'lhs' => 93, 'rhs' => 3 ),
  array( 'lhs' => 93, 'rhs' => 1 ),
  array( 'lhs' => 93, 'rhs' => 2 ),
  array( 'lhs' => 93, 'rhs' => 3 ),
  array( 'lhs' => 93, 'rhs' => 3 ),
  array( 'lhs' => 93, 'rhs' => 3 ),
  array( 'lhs' => 93, 'rhs' => 3 ),
  array( 'lhs' => 93, 'rhs' => 3 ),
  array( 'lhs' => 93, 'rhs' => 3 ),
  array( 'lhs' => 93, 'rhs' => 2 ),
  array( 'lhs' => 93, 'rhs' => 2 ),
  array( 'lhs' => 93, 'rhs' => 3 ),
  array( 'lhs' => 93, 'rhs' => 3 ),
  array( 'lhs' => 93, 'rhs' => 2 ),
  array( 'lhs' => 93, 'rhs' => 2 ),
  array( 'lhs' => 93, 'rhs' => 3 ),
  array( 'lhs' => 93, 'rhs' => 3 ),
  array( 'lhs' => 93, 'rhs' => 3 ),
  array( 'lhs' => 93, 'rhs' => 3 ),
  array( 'lhs' => 93, 'rhs' => 3 ),
  array( 'lhs' => 101, 'rhs' => 8 ),
  array( 'lhs' => 101, 'rhs' => 7 ),
  array( 'lhs' => 90, 'rhs' => 1 ),
  array( 'lhs' => 90, 'rhs' => 2 ),
  array( 'lhs' => 90, 'rhs' => 2 ),
  array( 'lhs' => 90, 'rhs' => 2 ),
  array( 'lhs' => 90, 'rhs' => 1 ),
  array( 'lhs' => 90, 'rhs' => 1 ),
  array( 'lhs' => 90, 'rhs' => 3 ),
  array( 'lhs' => 90, 'rhs' => 2 ),
  array( 'lhs' => 90, 'rhs' => 2 ),
  array( 'lhs' => 90, 'rhs' => 1 ),
  array( 'lhs' => 90, 'rhs' => 1 ),
  array( 'lhs' => 90, 'rhs' => 3 ),
  array( 'lhs' => 90, 'rhs' => 1 ),
  array( 'lhs' => 90, 'rhs' => 1 ),
  array( 'lhs' => 90, 'rhs' => 1 ),
  array( 'lhs' => 90, 'rhs' => 3 ),
  array( 'lhs' => 90, 'rhs' => 3 ),
  array( 'lhs' => 90, 'rhs' => 1 ),
  array( 'lhs' => 90, 'rhs' => 3 ),
  array( 'lhs' => 90, 'rhs' => 1 ),
  array( 'lhs' => 90, 'rhs' => 2 ),
  array( 'lhs' => 105, 'rhs' => 1 ),
  array( 'lhs' => 105, 'rhs' => 4 ),
  array( 'lhs' => 105, 'rhs' => 1 ),
  array( 'lhs' => 105, 'rhs' => 3 ),
  array( 'lhs' => 105, 'rhs' => 4 ),
  array( 'lhs' => 105, 'rhs' => 3 ),
  array( 'lhs' => 105, 'rhs' => 4 ),
  array( 'lhs' => 94, 'rhs' => 3 ),
  array( 'lhs' => 110, 'rhs' => 2 ),
  array( 'lhs' => 110, 'rhs' => 0 ),
  array( 'lhs' => 111, 'rhs' => 3 ),
  array( 'lhs' => 111, 'rhs' => 5 ),
  array( 'lhs' => 111, 'rhs' => 2 ),
  array( 'lhs' => 111, 'rhs' => 2 ),
  array( 'lhs' => 111, 'rhs' => 4 ),
  array( 'lhs' => 111, 'rhs' => 3 ),
  array( 'lhs' => 111, 'rhs' => 5 ),
  array( 'lhs' => 111, 'rhs' => 3 ),
  array( 'lhs' => 111, 'rhs' => 2 ),
  array( 'lhs' => 98, 'rhs' => 1 ),
  array( 'lhs' => 98, 'rhs' => 2 ),
  array( 'lhs' => 112, 'rhs' => 1 ),
  array( 'lhs' => 112, 'rhs' => 3 ),
  array( 'lhs' => 109, 'rhs' => 2 ),
  array( 'lhs' => 113, 'rhs' => 1 ),
  array( 'lhs' => 113, 'rhs' => 2 ),
  array( 'lhs' => 114, 'rhs' => 3 ),
  array( 'lhs' => 114, 'rhs' => 4 ),
  array( 'lhs' => 114, 'rhs' => 5 ),
  array( 'lhs' => 114, 'rhs' => 6 ),
  array( 'lhs' => 114, 'rhs' => 2 ),
  array( 'lhs' => 106, 'rhs' => 4 ),
  array( 'lhs' => 106, 'rhs' => 4 ),
  array( 'lhs' => 115, 'rhs' => 4 ),
  array( 'lhs' => 115, 'rhs' => 5 ),
  array( 'lhs' => 116, 'rhs' => 3 ),
  array( 'lhs' => 116, 'rhs' => 1 ),
  array( 'lhs' => 116, 'rhs' => 0 ),
  array( 'lhs' => 91, 'rhs' => 3 ),
  array( 'lhs' => 91, 'rhs' => 2 ),
  array( 'lhs' => 117, 'rhs' => 3 ),
  array( 'lhs' => 117, 'rhs' => 2 ),
  array( 'lhs' => 99, 'rhs' => 2 ),
  array( 'lhs' => 99, 'rhs' => 0 ),
  array( 'lhs' => 118, 'rhs' => 2 ),
  array( 'lhs' => 118, 'rhs' => 2 ),
  array( 'lhs' => 108, 'rhs' => 1 ),
  array( 'lhs' => 108, 'rhs' => 2 ),
  array( 'lhs' => 108, 'rhs' => 1 ),
  array( 'lhs' => 108, 'rhs' => 3 ),
  array( 'lhs' => 108, 'rhs' => 4 ),
  array( 'lhs' => 103, 'rhs' => 1 ),
  array( 'lhs' => 103, 'rhs' => 1 ),
  array( 'lhs' => 103, 'rhs' => 1 ),
  array( 'lhs' => 103, 'rhs' => 1 ),
  array( 'lhs' => 103, 'rhs' => 1 ),
  array( 'lhs' => 103, 'rhs' => 1 ),
  array( 'lhs' => 103, 'rhs' => 1 ),
  array( 'lhs' => 103, 'rhs' => 1 ),
  array( 'lhs' => 103, 'rhs' => 1 ),
  array( 'lhs' => 104, 'rhs' => 1 ),
  array( 'lhs' => 104, 'rhs' => 1 ),
  array( 'lhs' => 104, 'rhs' => 1 ),
  array( 'lhs' => 102, 'rhs' => 3 ),
  array( 'lhs' => 119, 'rhs' => 1 ),
  array( 'lhs' => 119, 'rhs' => 3 ),
  array( 'lhs' => 119, 'rhs' => 0 ),
  array( 'lhs' => 120, 'rhs' => 3 ),
  array( 'lhs' => 120, 'rhs' => 3 ),
  array( 'lhs' => 120, 'rhs' => 1 ),
  array( 'lhs' => 107, 'rhs' => 2 ),
  array( 'lhs' => 107, 'rhs' => 3 ),
  array( 'lhs' => 121, 'rhs' => 2 ),
  array( 'lhs' => 121, 'rhs' => 1 ),
  array( 'lhs' => 122, 'rhs' => 3 ),
  array( 'lhs' => 122, 'rhs' => 3 ),
  array( 'lhs' => 122, 'rhs' => 1 ),
  array( 'lhs' => 122, 'rhs' => 3 ),
  array( 'lhs' => 122, 'rhs' => 3 ),
  array( 'lhs' => 122, 'rhs' => 2 ),
  array( 'lhs' => 122, 'rhs' => 1 ),
  array( 'lhs' => 97, 'rhs' => 1 ),
  array( 'lhs' => 97, 'rhs' => 0 ),
    );

    public static $yyReduceMap = array(
        0 => 0,
        1 => 1,
        2 => 1,
        4 => 1,
        6 => 1,
        5 => 5,
        7 => 7,
        8 => 8,
        9 => 9,
        10 => 10,
        11 => 11,
        12 => 12,
        13 => 13,
        14 => 14,
        15 => 15,
        16 => 16,
        17 => 17,
        20 => 17,
        206 => 17,
        18 => 18,
        75 => 18,
        195 => 18,
        19 => 19,
        104 => 19,
        106 => 19,
        132 => 19,
        171 => 19,
        21 => 21,
        22 => 21,
        23 => 21,
        24 => 21,
        25 => 21,
        26 => 21,
        27 => 21,
        68 => 21,
        69 => 21,
        76 => 21,
        77 => 21,
        82 => 21,
        103 => 21,
        107 => 21,
        108 => 21,
        113 => 21,
        115 => 21,
        116 => 21,
        120 => 21,
        126 => 21,
        143 => 21,
        170 => 21,
        172 => 21,
        188 => 21,
        193 => 21,
        205 => 21,
        28 => 28,
        29 => 29,
        30 => 30,
        32 => 30,
        31 => 31,
        33 => 33,
        34 => 33,
        35 => 35,
        36 => 36,
        37 => 37,
        38 => 38,
        39 => 39,
        40 => 40,
        41 => 41,
        42 => 42,
        43 => 43,
        45 => 43,
        44 => 44,
        46 => 46,
        47 => 47,
        48 => 48,
        49 => 49,
        50 => 50,
        51 => 51,
        53 => 51,
        52 => 52,
        54 => 52,
        55 => 55,
        56 => 56,
        57 => 57,
        58 => 58,
        59 => 59,
        60 => 60,
        61 => 61,
        62 => 62,
        71 => 62,
        160 => 62,
        164 => 62,
        168 => 62,
        169 => 62,
        63 => 63,
        161 => 63,
        167 => 63,
        64 => 64,
        65 => 65,
        66 => 65,
        67 => 67,
        70 => 70,
        72 => 72,
        73 => 73,
        74 => 73,
        78 => 78,
        79 => 79,
        80 => 79,
        81 => 79,
        83 => 83,
        123 => 83,
        84 => 84,
        87 => 84,
        98 => 84,
        99 => 84,
        85 => 85,
        86 => 86,
        88 => 88,
        89 => 89,
        90 => 90,
        95 => 90,
        91 => 91,
        94 => 91,
        92 => 92,
        97 => 92,
        93 => 93,
        96 => 93,
        100 => 100,
        101 => 101,
        102 => 102,
        105 => 105,
        109 => 109,
        110 => 110,
        111 => 111,
        112 => 112,
        114 => 114,
        117 => 117,
        118 => 118,
        119 => 119,
        121 => 121,
        122 => 122,
        124 => 124,
        125 => 125,
        127 => 127,
        128 => 128,
        129 => 129,
        130 => 130,
        131 => 131,
        133 => 133,
        190 => 133,
        134 => 134,
        135 => 135,
        136 => 136,
        137 => 137,
        138 => 138,
        141 => 138,
        139 => 139,
        140 => 140,
        142 => 142,
        144 => 144,
        145 => 145,
        146 => 146,
        147 => 147,
        148 => 148,
        149 => 149,
        150 => 150,
        151 => 151,
        152 => 152,
        153 => 153,
        154 => 154,
        155 => 155,
        156 => 156,
        157 => 157,
        158 => 158,
        159 => 159,
        162 => 162,
        163 => 163,
        165 => 165,
        166 => 166,
        173 => 173,
        174 => 174,
        175 => 175,
        176 => 176,
        177 => 177,
        178 => 178,
        179 => 179,
        180 => 180,
        181 => 181,
        182 => 182,
        183 => 183,
        184 => 184,
        185 => 185,
        186 => 186,
        187 => 187,
        189 => 189,
        191 => 191,
        192 => 192,
        194 => 194,
        196 => 196,
        197 => 197,
        198 => 198,
        201 => 198,
        199 => 199,
        202 => 199,
        200 => 200,
        203 => 203,
        204 => 204,
    );
#line 95 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r0(){
   // execute end of template
   if ($this->compiler->caching) {
       $this->compiler->has_code = true;
       $this->compiler->nocache_nolog = true;
   }
    }
#line 2150 "Smarty_Compiler_Template_Php_Parser.php"
#line 107 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r1(){
    }
#line 2154 "Smarty_Compiler_Template_Php_Parser.php"
#line 126 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r5(){
    if ($this->compiler->has_code) {
        $this->compiler->nocacheCode($this->yystack[$this->yyidx + -1]->minor,true);
    } else { 
        $this->compiler->template_code->raw($this->yystack[$this->yyidx + -1]->minor);
    }  
    $this->block_nesting_level = count($this->compiler->_tag_stack);
    }
#line 2164 "Smarty_Compiler_Template_Php_Parser.php"
#line 140 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r7(){
    $this->compiler->template_code->php('echo ')->string($this->yystack[$this->yyidx + 0]->minor)->raw(";\n");
    }
#line 2169 "Smarty_Compiler_Template_Php_Parser.php"
#line 145 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r8(){
    if ($this->php_handling == Smarty::PHP_PASSTHRU) {
        $this->compiler->template_code->php("echo '<?php';\n");
    } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
        $this->compiler->template_code->php("echo '&lt;?php';\n");
    } elseif ($this->php_handling == Smarty::PHP_ALLOW) {
        if (!($this->compiler->template instanceof SmartyBC)) {
            $this->compiler->error (self::Err3);
        }
        $this->text_is_php = true;
    }
    }
#line 2183 "Smarty_Compiler_Template_Php_Parser.php"
#line 159 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r9(){
    if ($this->is_xml) {
        $this->is_xml = false;
        $this->compiler->template_code->php("echo '?>';\n");
    } elseif ($this->php_handling == Smarty::PHP_PASSTHRU) {
        $this->compiler->template_code->php("echo '?>';\n");
    } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
        $this->compiler->template_code->php("echo '?&gt;';\n");
    } elseif ($this->php_handling == Smarty::PHP_ALLOW) {
        $this->text_is_php = false;
    }
    }
#line 2197 "Smarty_Compiler_Template_Php_Parser.php"
#line 173 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r10(){
    if ($this->php_handling == Smarty::PHP_PASSTHRU) {
        $this->compiler->template_code->php("echo '<%';\n");
    } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
        $this->compiler->template_code->php("echo '&lt;%';\n");
    } elseif ($this->php_handling == Smarty::PHP_ALLOW) {
        if ($this->asp_tags) {
            if (!($this->compiler->template instanceof SmartyBC)) {
                $this->compiler->error (self::Err3);
            }
            $this->text_is_php = true;
        } else {
            $this->compiler->template_code->php("echo '<%';\n");
        }
    } elseif ($this->php_handling == Smarty::PHP_REMOVE) {
        if (!$this->asp_tags) {
            $this->compiler->template_code->php("echo '<%';\n");
        }
    }
    }
#line 2219 "Smarty_Compiler_Template_Php_Parser.php"
#line 195 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r11(){
    if ($this->php_handling == Smarty::PHP_PASSTHRU) {
        $this->compiler->template_code->php("echo '%>';\n");
    } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
        $this->compiler->template_code->php("echo '%&gt;';\n");
    } elseif ($this->php_handling == Smarty::PHP_ALLOW) {
        if ($this->asp_tags) {
            $this->text_is_php = false;
        } else {
            $this->compiler->template_code->php("echo '%>';\n");
        }
    } elseif ($this->php_handling == Smarty::PHP_REMOVE) {
        if (!$this->asp_tags) {
            $this->compiler->template_code->php("echo '%>';\n");
        }
    }
    }
#line 2238 "Smarty_Compiler_Template_Php_Parser.php"
#line 213 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r12(){
    if ($this->strip) {
        $this->compiler->template_code->php('echo ')->string(preg_replace('![\t ]*[\r\n]+[\t ]*!', '', $this->yystack[$this->yyidx + 0]->minor))->raw(";\n");
    } else {
        $this->compiler->template_code->php('echo ')->string($this->yystack[$this->yyidx + 0]->minor)->raw(";\n");
    }
    }
#line 2247 "Smarty_Compiler_Template_Php_Parser.php"
#line 222 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r13(){
    $this->is_xml = true; 
    $this->compiler->template_code->php("echo '<?xml';\n");
    }
#line 2253 "Smarty_Compiler_Template_Php_Parser.php"
#line 228 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r14(){
    if ($this->text_is_php) {
        $this->compiler->prefix_code[] = $this->yystack[$this->yyidx + 0]->minor;
        $this->compiler->nocacheCode('', true);
    } else {
        // inheritance child templates shall not output text
        if (!$this->compiler->isInheritanceChild || $this->compiler->block_nesting_level > 0) {
            if ($this->strip) {
                $this->compiler->template_code->php('echo ')->string(preg_replace('![\t ]*[\r\n]+[\t ]*!', '', $this->yystack[$this->yyidx + 0]->minor))->raw(";\n");
            } else {
                $this->compiler->template_code->php('echo ')->string($this->yystack[$this->yyidx + 0]->minor)->raw(";\n");
            }
        }
    }
    }
#line 2270 "Smarty_Compiler_Template_Php_Parser.php"
#line 245 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r15(){
    $this->strip = true;
    }
#line 2275 "Smarty_Compiler_Template_Php_Parser.php"
#line 249 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r16(){
    $this->strip = false;
    }
#line 2280 "Smarty_Compiler_Template_Php_Parser.php"
#line 254 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r17(){
    $this->_retvalue = '';
    }
#line 2285 "Smarty_Compiler_Template_Php_Parser.php"
#line 258 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r18(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;
    }
#line 2290 "Smarty_Compiler_Template_Php_Parser.php"
#line 262 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r19(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2295 "Smarty_Compiler_Template_Php_Parser.php"
#line 270 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r21(){
    $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;
    }
#line 2300 "Smarty_Compiler_Template_Php_Parser.php"
#line 303 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r28(){
    $this->_retvalue = $this->compiler->compileTag('Internal_PrintExpression',array(),array('value'=>$this->yystack[$this->yyidx + 0]->minor));
    }
#line 2305 "Smarty_Compiler_Template_Php_Parser.php"
#line 307 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r29(){
    $this->_retvalue = $this->compiler->compileTag('Internal_PrintExpression',$this->yystack[$this->yyidx + 0]->minor,array('value'=>$this->yystack[$this->yyidx + -2]->minor, 'modifierlist'=>$this->yystack[$this->yyidx + -1]->minor));
    }
#line 2310 "Smarty_Compiler_Template_Php_Parser.php"
#line 311 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r30(){
    $this->_retvalue = $this->compiler->compileTag('Internal_PrintExpression',$this->yystack[$this->yyidx + 0]->minor,array('value'=>$this->yystack[$this->yyidx + -1]->minor));
    }
#line 2315 "Smarty_Compiler_Template_Php_Parser.php"
#line 315 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r31(){
    $this->_retvalue = $this->compiler->compileTag('Internal_PrintExpression',$this->yystack[$this->yyidx + 0]->minor,array('value'=>$this->yystack[$this->yyidx + -2]->minor,'modifierlist'=>$this->yystack[$this->yyidx + -1]->minor));
    }
#line 2320 "Smarty_Compiler_Template_Php_Parser.php"
#line 328 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r33(){
    $this->_retvalue = $this->compiler->compileTag('assign',array(array('value'=>$this->yystack[$this->yyidx + 0]->minor),array('var'=>"'".$this->yystack[$this->yyidx + -2]->minor."'")));
    }
#line 2325 "Smarty_Compiler_Template_Php_Parser.php"
#line 336 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r35(){
    $this->_retvalue = $this->compiler->compileTag('assign',array_merge(array(array('value'=>$this->yystack[$this->yyidx + -1]->minor),array('var'=>"'".$this->yystack[$this->yyidx + -3]->minor."'")),$this->yystack[$this->yyidx + 0]->minor));
    }
#line 2330 "Smarty_Compiler_Template_Php_Parser.php"
#line 340 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r36(){
    $this->_retvalue = $this->compiler->compileTag('assign',array_merge(array(array('value'=>$this->yystack[$this->yyidx + -1]->minor),array('var'=>$this->yystack[$this->yyidx + -3]->minor['var'])),$this->yystack[$this->yyidx + 0]->minor),array('smarty_internal_index'=>$this->yystack[$this->yyidx + -3]->minor['smarty_internal_index']));
    }
#line 2335 "Smarty_Compiler_Template_Php_Parser.php"
#line 345 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r37(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor);
    }
#line 2340 "Smarty_Compiler_Template_Php_Parser.php"
#line 349 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r38(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + 0]->minor,array());
    }
#line 2345 "Smarty_Compiler_Template_Php_Parser.php"
#line 354 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r39(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -3]->minor,$this->yystack[$this->yyidx + 0]->minor,array('object_method'=>$this->yystack[$this->yyidx + -1]->minor));
    }
#line 2350 "Smarty_Compiler_Template_Php_Parser.php"
#line 359 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r40(){
    $this->_retvalue = 'ob_start(); '.$this->compiler->compileTag($this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + 0]->minor).' echo ';
    $this->_retvalue .= $this->compiler->compileTag('Internal_Modifier',array(),array('modifierlist'=>$this->yystack[$this->yyidx + -1]->minor,'value'=>'ob_get_clean()')).';';
    }
#line 2356 "Smarty_Compiler_Template_Php_Parser.php"
#line 365 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r41(){
    $this->_retvalue = 'ob_start(); '.$this->compiler->compileTag($this->yystack[$this->yyidx + -4]->minor,$this->yystack[$this->yyidx + 0]->minor,array('object_method'=>$this->yystack[$this->yyidx + -2]->minor)).' echo ';
    $this->_retvalue .= $this->compiler->compileTag('Internal_Modifier',array(),array('modifierlist'=>$this->yystack[$this->yyidx + -1]->minor,'value'=>'ob_get_clean()')).';';
    }
#line 2362 "Smarty_Compiler_Template_Php_Parser.php"
#line 371 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r42(){
    $tag = trim(substr($this->yystack[$this->yyidx + -1]->minor,$this->lex->ldel_length)); 
    $this->_retvalue = $this->compiler->compileTag(($tag == 'else if')? 'elseif' : $tag,array(),array('if condition'=>$this->yystack[$this->yyidx + 0]->minor));
    }
#line 2368 "Smarty_Compiler_Template_Php_Parser.php"
#line 376 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r43(){
    $tag = trim(substr($this->yystack[$this->yyidx + -2]->minor,$this->lex->ldel_length));
    $this->_retvalue = $this->compiler->compileTag(($tag == 'else if')? 'elseif' : $tag,$this->yystack[$this->yyidx + 0]->minor,array('if condition'=>$this->yystack[$this->yyidx + -1]->minor));
    }
#line 2374 "Smarty_Compiler_Template_Php_Parser.php"
#line 381 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r44(){
    $tag = trim(substr($this->yystack[$this->yyidx + -1]->minor,$this->lex->ldel_length));
    $this->_retvalue = $this->compiler->compileTag(($tag == 'else if')? 'elseif' : $tag,array(),array('if condition'=>$this->yystack[$this->yyidx + 0]->minor));
    }
#line 2380 "Smarty_Compiler_Template_Php_Parser.php"
#line 392 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r46(){
    $this->_retvalue = $this->compiler->compileTag('for',array_merge($this->yystack[$this->yyidx + 0]->minor,array(array('start'=>$this->yystack[$this->yyidx + -10]->minor),array('ifexp'=>$this->yystack[$this->yyidx + -7]->minor),array('var'=>$this->yystack[$this->yyidx + -3]->minor),array('step'=>'='.$this->yystack[$this->yyidx + -1]->minor))),1);
    }
#line 2385 "Smarty_Compiler_Template_Php_Parser.php"
#line 395 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r47(){
    $len =strlen($this->yystack[$this->yyidx + -1]->minor);
    $this->_retvalue = $this->compiler->compileTag('for',array_merge($this->yystack[$this->yyidx + 0]->minor,array(array('start'=>$this->yystack[$this->yyidx + -7]->minor),array('ifexp'=>$this->yystack[$this->yyidx + -4]->minor),array('var'=>substr($this->yystack[$this->yyidx + -1]->minor,1,$len-3)),array('step'=>substr($this->yystack[$this->yyidx + -1]->minor,$len-2)))),1);
    }
#line 2391 "Smarty_Compiler_Template_Php_Parser.php"
#line 400 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r48(){
    $this->_retvalue = $this->compiler->compileTag('for',array_merge($this->yystack[$this->yyidx + 0]->minor,array(array('start'=>$this->yystack[$this->yyidx + -3]->minor),array('to'=>$this->yystack[$this->yyidx + -1]->minor))),0);
    }
#line 2396 "Smarty_Compiler_Template_Php_Parser.php"
#line 404 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r49(){
    $this->_retvalue = $this->compiler->compileTag('for',array_merge($this->yystack[$this->yyidx + 0]->minor,array(array('start'=>$this->yystack[$this->yyidx + -5]->minor),array('to'=>$this->yystack[$this->yyidx + -3]->minor),array('step'=>$this->yystack[$this->yyidx + -1]->minor))),0);
    }
#line 2401 "Smarty_Compiler_Template_Php_Parser.php"
#line 409 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r50(){
    $this->_retvalue = $this->compiler->compileTag('foreach',$this->yystack[$this->yyidx + 0]->minor);
    }
#line 2406 "Smarty_Compiler_Template_Php_Parser.php"
#line 414 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r51(){
    $this->_retvalue = $this->compiler->compileTag('foreach',array_merge($this->yystack[$this->yyidx + 0]->minor,array(array('from'=>$this->yystack[$this->yyidx + -4]->minor),array('item'=>$this->yystack[$this->yyidx + -1]->minor))));
    }
#line 2411 "Smarty_Compiler_Template_Php_Parser.php"
#line 418 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r52(){
    $this->_retvalue = $this->compiler->compileTag('foreach',array_merge($this->yystack[$this->yyidx + 0]->minor,array(array('from'=>$this->yystack[$this->yyidx + -7]->minor),array('item'=>$this->yystack[$this->yyidx + -1]->minor),array('key'=>$this->yystack[$this->yyidx + -4]->minor))));
    }
#line 2416 "Smarty_Compiler_Template_Php_Parser.php"
#line 431 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r55(){
    $this->_retvalue = $this->compiler->compileTag('setfilter',array(),array('modifier_list'=>array(array_merge(array($this->yystack[$this->yyidx + -1]->minor),$this->yystack[$this->yyidx + 0]->minor))));
    }
#line 2421 "Smarty_Compiler_Template_Php_Parser.php"
#line 435 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r56(){
    $this->_retvalue = $this->compiler->compileTag('setfilter',array(),array('modifier_list'=>array_merge(array(array_merge(array($this->yystack[$this->yyidx + -2]->minor),$this->yystack[$this->yyidx + -1]->minor)),$this->yystack[$this->yyidx + 0]->minor)));
    }
#line 2426 "Smarty_Compiler_Template_Php_Parser.php"
#line 442 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r57(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + 0]->minor.'close',array());
    }
#line 2431 "Smarty_Compiler_Template_Php_Parser.php"
#line 446 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r58(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -1]->minor.'close',array(),array('modifier_list'=>$this->yystack[$this->yyidx + 0]->minor));
    }
#line 2436 "Smarty_Compiler_Template_Php_Parser.php"
#line 451 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r59(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -2]->minor.'close',array(),array('object_method'=>$this->yystack[$this->yyidx + 0]->minor));
    }
#line 2441 "Smarty_Compiler_Template_Php_Parser.php"
#line 455 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r60(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -3]->minor.'close',array(),array('object_method'=>$this->yystack[$this->yyidx + -1]->minor, 'modifier_list'=>$this->yystack[$this->yyidx + 0]->minor));
    }
#line 2446 "Smarty_Compiler_Template_Php_Parser.php"
#line 463 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r61(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;
    $this->_retvalue[] = $this->yystack[$this->yyidx + 0]->minor;
    }
#line 2452 "Smarty_Compiler_Template_Php_Parser.php"
#line 469 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r62(){
    $this->_retvalue = array($this->yystack[$this->yyidx + 0]->minor);
    }
#line 2457 "Smarty_Compiler_Template_Php_Parser.php"
#line 474 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r63(){
    $this->_retvalue = array();
    }
#line 2462 "Smarty_Compiler_Template_Php_Parser.php"
#line 479 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r64(){
    if (preg_match('~^true$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>'true');
    } elseif (preg_match('~^false$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>'false');
    } elseif (preg_match('~^null$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>'null');
    } else {
        $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>"'".$this->yystack[$this->yyidx + 0]->minor."'");
    }
    }
#line 2475 "Smarty_Compiler_Template_Php_Parser.php"
#line 491 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r65(){
    $this->_retvalue = array(trim($this->yystack[$this->yyidx + -1]->minor," =\n\r\t")=>$this->yystack[$this->yyidx + 0]->minor);
    }
#line 2480 "Smarty_Compiler_Template_Php_Parser.php"
#line 499 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r67(){
    $this->_retvalue = "'".$this->yystack[$this->yyidx + 0]->minor."'";
    }
#line 2485 "Smarty_Compiler_Template_Php_Parser.php"
#line 511 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r70(){
    $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>$this->yystack[$this->yyidx + 0]->minor);
    }
#line 2490 "Smarty_Compiler_Template_Php_Parser.php"
#line 524 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r72(){
    $this->yystack[$this->yyidx + -2]->minor[]=$this->yystack[$this->yyidx + 0]->minor;
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor;
    }
#line 2496 "Smarty_Compiler_Template_Php_Parser.php"
#line 529 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r73(){
    $this->_retvalue = array('var' => $this->yystack[$this->yyidx + -2]->minor, 'value'=>$this->yystack[$this->yyidx + 0]->minor);
    }
#line 2501 "Smarty_Compiler_Template_Php_Parser.php"
#line 557 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r78(){
    $this->_retvalue = '$_smarty_tpl->getStreamVariable(\''. $this->yystack[$this->yyidx + -2]->minor .'://'. $this->yystack[$this->yyidx + 0]->minor . '\')';
    }
#line 2506 "Smarty_Compiler_Template_Php_Parser.php"
#line 562 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r79(){
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor . trim($this->yystack[$this->yyidx + -1]->minor) . $this->yystack[$this->yyidx + 0]->minor;
    }
#line 2511 "Smarty_Compiler_Template_Php_Parser.php"
#line 581 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r83(){
    $this->_retvalue = $this->compiler->compileTag('Internal_Modifier',array(),array('value'=>$this->yystack[$this->yyidx + -1]->minor,'modifierlist'=>$this->yystack[$this->yyidx + 0]->minor));
    }
#line 2516 "Smarty_Compiler_Template_Php_Parser.php"
#line 587 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r84(){
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2521 "Smarty_Compiler_Template_Php_Parser.php"
#line 591 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r85(){
    $this->_retvalue = 'in_array('.$this->yystack[$this->yyidx + -2]->minor.','.$this->yystack[$this->yyidx + 0]->minor.')';
    }
#line 2526 "Smarty_Compiler_Template_Php_Parser.php"
#line 595 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r86(){
    $this->_retvalue = 'in_array('.$this->yystack[$this->yyidx + -2]->minor.',(array)'.$this->yystack[$this->yyidx + 0]->minor.')';
    }
#line 2531 "Smarty_Compiler_Template_Php_Parser.php"
#line 603 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r88(){
    $this->_retvalue = '!('.$this->yystack[$this->yyidx + -2]->minor.' % '.$this->yystack[$this->yyidx + 0]->minor.')';
    }
#line 2536 "Smarty_Compiler_Template_Php_Parser.php"
#line 607 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r89(){
    $this->_retvalue = '('.$this->yystack[$this->yyidx + -2]->minor.' % '.$this->yystack[$this->yyidx + 0]->minor.')';
    }
#line 2541 "Smarty_Compiler_Template_Php_Parser.php"
#line 611 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r90(){
    $this->_retvalue = '!(1 & '.$this->yystack[$this->yyidx + -1]->minor.')';
    }
#line 2546 "Smarty_Compiler_Template_Php_Parser.php"
#line 615 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r91(){
    $this->_retvalue = '(1 & '.$this->yystack[$this->yyidx + -1]->minor.')';
    }
#line 2551 "Smarty_Compiler_Template_Php_Parser.php"
#line 619 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r92(){
    $this->_retvalue = '!(1 & '.$this->yystack[$this->yyidx + -2]->minor.' / '.$this->yystack[$this->yyidx + 0]->minor.')';
    }
#line 2556 "Smarty_Compiler_Template_Php_Parser.php"
#line 623 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r93(){
    $this->_retvalue = '(1 & '.$this->yystack[$this->yyidx + -2]->minor.' / '.$this->yystack[$this->yyidx + 0]->minor.')';
    }
#line 2561 "Smarty_Compiler_Template_Php_Parser.php"
#line 651 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r100(){
    $this->prefix_number++;
    $this->compiler->prefix_code[] = '$_tmp'.$this->prefix_number.'='.$this->yystack[$this->yyidx + 0]->minor.';';
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.'$_tmp'.$this->prefix_number;
    }
#line 2568 "Smarty_Compiler_Template_Php_Parser.php"
#line 660 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r101(){
    $this->_retvalue = $this->yystack[$this->yyidx + -6]->minor.' ? '. $this->compiler->compileVariable("'".$this->yystack[$this->yyidx + -2]->minor."'") . ' : '.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2573 "Smarty_Compiler_Template_Php_Parser.php"
#line 664 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r102(){
    $this->_retvalue = $this->yystack[$this->yyidx + -5]->minor.' ? '.$this->yystack[$this->yyidx + -2]->minor.' : '.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2578 "Smarty_Compiler_Template_Php_Parser.php"
#line 680 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r105(){
    $this->_retvalue = '!'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2583 "Smarty_Compiler_Template_Php_Parser.php"
#line 697 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r109(){
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'.'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2588 "Smarty_Compiler_Template_Php_Parser.php"
#line 701 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r110(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.'.';
    }
#line 2593 "Smarty_Compiler_Template_Php_Parser.php"
#line 705 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r111(){
    $this->_retvalue = '.'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2598 "Smarty_Compiler_Template_Php_Parser.php"
#line 710 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r112(){
    if (preg_match('~^true$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = 'true';
    } elseif (preg_match('~^false$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = 'false';
    } elseif (preg_match('~^null$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = 'null';
    } else {
        $this->_retvalue = "'".$this->yystack[$this->yyidx + 0]->minor."'";
    }
    }
#line 2611 "Smarty_Compiler_Template_Php_Parser.php"
#line 728 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r114(){
    $this->_retvalue = "(". $this->yystack[$this->yyidx + -1]->minor .")";
    }
#line 2616 "Smarty_Compiler_Template_Php_Parser.php"
#line 742 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r117(){
    $len = strlen($this->yystack[$this->yyidx + 0]->minor);
    $this->_retvalue = '$_scope->' . substr($this->yystack[$this->yyidx + 0]->minor,1,$len-3) . '->value' . substr($this->yystack[$this->yyidx + 0]->minor,$len-2);
    }
#line 2622 "Smarty_Compiler_Template_Php_Parser.php"
#line 748 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r118(){
    if (!$this->security || isset($this->compiler->tpl_obj->registered_classes[$this->yystack[$this->yyidx + -2]->minor]) || $this->compiler->tpl_obj->security_policy->isTrustedStaticClass($this->yystack[$this->yyidx + -2]->minor, $this->compiler)) {
        if (isset($this->compiler->tpl_obj->registered_classes[$this->yystack[$this->yyidx + -2]->minor])) {
            $this->_retvalue = $this->compiler->tpl_obj->registered_classes[$this->yystack[$this->yyidx + -2]->minor].'::'.$this->yystack[$this->yyidx + 0]->minor;
        } else {
            $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'::'.$this->yystack[$this->yyidx + 0]->minor;
        } 
    } else {
        $this->compiler->error ("static class '".$this->yystack[$this->yyidx + -2]->minor."' is undefined or not allowed by security setting");
    }
    }
#line 2635 "Smarty_Compiler_Template_Php_Parser.php"
#line 761 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r119(){
        $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'::'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2640 "Smarty_Compiler_Template_Php_Parser.php"
#line 770 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r121(){
    if ($this->yystack[$this->yyidx + -2]->minor['var'] == '\'smarty\'') {
        $this->_retvalue =  $this->compiler->compileTag('Internal_SpecialVariable',array(),$this->yystack[$this->yyidx + -2]->minor['smarty_internal_index']).'::'.$this->yystack[$this->yyidx + 0]->minor;
    } else {
        $this->_retvalue = $this->compiler->compileVariable($this->yystack[$this->yyidx + -2]->minor['var']).$this->yystack[$this->yyidx + -2]->minor['smarty_internal_index'].'::'.$this->yystack[$this->yyidx + 0]->minor;
    }
    }
#line 2649 "Smarty_Compiler_Template_Php_Parser.php"
#line 779 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r122(){
    $this->prefix_number++;
    $code = new Smarty_Compiler_Code();
    $code->iniTagCode($this->compiler);
    $code->php("ob_start();")->newline();
    $code->mergeCode($this->yystack[$this->yyidx + 0]->minor);
    $code->php("\$_tmp{$this->prefix_number} = ob_get_clean();")->newline();
    $this->compiler->prefix_code[] = $code;
    $this->_retvalue = '$_tmp'.$this->prefix_number;
    }
#line 2661 "Smarty_Compiler_Template_Php_Parser.php"
#line 799 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r124(){
    if ($this->yystack[$this->yyidx + 0]->minor['var'] == '\'smarty\'') {
        $smarty_var = $this->compiler->compileTag('Internal_SpecialVariable',array(),$this->yystack[$this->yyidx + 0]->minor['smarty_internal_index']);
        $this->_retvalue = $smarty_var;
    } else {
        // used for array reset,next,prev,end,current 
        $this->last_variable = $this->yystack[$this->yyidx + 0]->minor['var'];
        $this->last_index = $this->yystack[$this->yyidx + 0]->minor['smarty_internal_index'];
        $this->_retvalue = $this->compiler->compileVariable($this->yystack[$this->yyidx + 0]->minor['var']).$this->yystack[$this->yyidx + 0]->minor['smarty_internal_index'];
    }
    }
#line 2674 "Smarty_Compiler_Template_Php_Parser.php"
#line 812 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r125(){
    $this->_retvalue = '$_scope->' . trim($this->yystack[$this->yyidx + -2]->minor,"'") . '->' . $this->yystack[$this->yyidx + 0]->minor;
    }
#line 2679 "Smarty_Compiler_Template_Php_Parser.php"
#line 822 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r127(){
    $var = trim($this->yystack[$this->yyidx + -1]->minor,'\'');
    $this->_retvalue = "\$_scope->___config_var_{$var}";
    }
#line 2685 "Smarty_Compiler_Template_Php_Parser.php"
#line 827 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r128(){
    $var = trim($this->yystack[$this->yyidx + -2]->minor,'\'');
    $this->_retvalue = "\$_scope->___config_var_{$var}".$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2691 "Smarty_Compiler_Template_Php_Parser.php"
#line 832 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r129(){
    $this->_retvalue = "\$_scope->___config_var_{{$this->yystack[$this->yyidx + -1]->minor}}";
    }
#line 2696 "Smarty_Compiler_Template_Php_Parser.php"
#line 836 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r130(){
    $this->_retvalue = "\$_scope->___config_var_{{$this->yystack[$this->yyidx + -2]->minor}}".$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2701 "Smarty_Compiler_Template_Php_Parser.php"
#line 840 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r131(){
    $this->_retvalue = array('var'=>$this->yystack[$this->yyidx + -1]->minor, 'smarty_internal_index'=>$this->yystack[$this->yyidx + 0]->minor);
    }
#line 2706 "Smarty_Compiler_Template_Php_Parser.php"
#line 853 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r133(){
    return;
    }
#line 2711 "Smarty_Compiler_Template_Php_Parser.php"
#line 859 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r134(){
    $this->_retvalue = '['.$this->compiler->compileVariable($this->yystack[$this->yyidx + 0]->minor).']';
    }
#line 2716 "Smarty_Compiler_Template_Php_Parser.php"
#line 863 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r135(){
    $this->_retvalue = '['.$this->compiler->compileVariable($this->yystack[$this->yyidx + -2]->minor).'->'.$this->yystack[$this->yyidx + 0]->minor.']';
    }
#line 2721 "Smarty_Compiler_Template_Php_Parser.php"
#line 867 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r136(){
    $this->_retvalue = "['". $this->yystack[$this->yyidx + 0]->minor ."']";
    }
#line 2726 "Smarty_Compiler_Template_Php_Parser.php"
#line 871 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r137(){
    $this->_retvalue = "[". $this->yystack[$this->yyidx + 0]->minor ."]";
    }
#line 2731 "Smarty_Compiler_Template_Php_Parser.php"
#line 875 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r138(){
    $this->_retvalue = "[". $this->yystack[$this->yyidx + -1]->minor ."]";
    }
#line 2736 "Smarty_Compiler_Template_Php_Parser.php"
#line 880 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r139(){
    $this->_retvalue = '['.$this->compiler->compileTag('Internal_SpecialVariable',array(),'[\'section\'][\''.$this->yystack[$this->yyidx + -1]->minor.'\'][\'index\']').']';
    }
#line 2741 "Smarty_Compiler_Template_Php_Parser.php"
#line 884 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r140(){
    $this->_retvalue = '['.$this->compiler->compileTag('Internal_SpecialVariable',array(),'[\'section\'][\''.$this->yystack[$this->yyidx + -3]->minor.'\'][\''.$this->yystack[$this->yyidx + -1]->minor.'\']').']';
    }
#line 2746 "Smarty_Compiler_Template_Php_Parser.php"
#line 894 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r142(){
    $this->_retvalue = '[]';
    }
#line 2751 "Smarty_Compiler_Template_Php_Parser.php"
#line 907 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r144(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.'.'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2756 "Smarty_Compiler_Template_Php_Parser.php"
#line 912 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r145(){
    $this->_retvalue = '\''.$this->yystack[$this->yyidx + 0]->minor.'\'';
    }
#line 2761 "Smarty_Compiler_Template_Php_Parser.php"
#line 917 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r146(){
    $this->_retvalue = '('.$this->yystack[$this->yyidx + -1]->minor.')';
    }
#line 2766 "Smarty_Compiler_Template_Php_Parser.php"
#line 924 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r147(){
    if ($this->yystack[$this->yyidx + -1]->minor['var'] == '\'smarty\'') {
        $this->_retvalue =  $this->compiler->compileTag('Internal_SpecialVariable',array(),$this->yystack[$this->yyidx + -1]->minor['smarty_internal_index']).$this->yystack[$this->yyidx + 0]->minor;
    } else {
        $this->_retvalue = $this->compiler->compileVariable($this->yystack[$this->yyidx + -1]->minor['var']).$this->yystack[$this->yyidx + -1]->minor['smarty_internal_index'].$this->yystack[$this->yyidx + 0]->minor;
    }
    }
#line 2775 "Smarty_Compiler_Template_Php_Parser.php"
#line 933 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r148(){
    $this->_retvalue  = $this->yystack[$this->yyidx + 0]->minor;
    }
#line 2780 "Smarty_Compiler_Template_Php_Parser.php"
#line 938 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r149(){
    $this->_retvalue  = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2785 "Smarty_Compiler_Template_Php_Parser.php"
#line 943 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r150(){
    if ($this->security && substr($this->yystack[$this->yyidx + -1]->minor,0,1) == '_') {
        $this->compiler->error (self::Err1);
    }
    $this->_retvalue = '->'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2793 "Smarty_Compiler_Template_Php_Parser.php"
#line 950 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r151(){
    if ($this->security) {
        $this->compiler->error (self::Err2);
    }
    $this->_retvalue = '->{'.$this->compiler->compileVariable($this->yystack[$this->yyidx + -1]->minor).$this->yystack[$this->yyidx + 0]->minor.'}';
    }
#line 2801 "Smarty_Compiler_Template_Php_Parser.php"
#line 957 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r152(){
    if ($this->security) {
        $this->compiler->error (self::Err2);
    }
    $this->_retvalue = '->{'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + 0]->minor.'}';
    }
#line 2809 "Smarty_Compiler_Template_Php_Parser.php"
#line 964 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r153(){
    if ($this->security) {
        $this->compiler->error (self::Err2);
    }
    $this->_retvalue = '->{\''.$this->yystack[$this->yyidx + -4]->minor.'\'.'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + 0]->minor.'}';
    }
#line 2817 "Smarty_Compiler_Template_Php_Parser.php"
#line 972 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r154(){
    $this->_retvalue = '->'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2822 "Smarty_Compiler_Template_Php_Parser.php"
#line 980 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r155(){
    if (!$this->security || $this->compiler->tpl_obj->security_policy->isTrustedPhpFunction($this->yystack[$this->yyidx + -3]->minor, $this->compiler)) {
        if (strcasecmp($this->yystack[$this->yyidx + -3]->minor,'isset') === 0 || strcasecmp($this->yystack[$this->yyidx + -3]->minor,'empty') === 0 || strcasecmp($this->yystack[$this->yyidx + -3]->minor,'array') === 0 || is_callable($this->yystack[$this->yyidx + -3]->minor)) {
            $func_name = strtolower($this->yystack[$this->yyidx + -3]->minor);
            if ($func_name == 'isset') {
                if (count($this->yystack[$this->yyidx + -1]->minor) == 0) {
                    $this->compiler->error ('Illegal number of paramer in "isset()"');
                }
                $par = implode(',',$this->yystack[$this->yyidx + -1]->minor);
                preg_match('/\$_scope->([0-9]*[a-zA-Z_]\w*)(.*)/',$par,$match);
                if (isset($match[1])) {
                    $search = array('/\$_scope->([0-9]*[a-zA-Z_]\w*)/','/->value.*/');
                    $replace = array('$_smarty_tpl->getVariable(\'\1\', null, true, false)','');
                    $this->prefix_number++;
                    $code = new Smarty_Compiler_Code();
                    $code->iniTagCode($this->compiler);
                    $code->php("\$_tmp{$this->prefix_number} = "  .preg_replace($search, $replace, $par) . ';')->newline();
                    $this->compiler->prefix_code[] = $code;
                    $isset_par = '$_tmp'.$this->prefix_number.$match[2];
                } else {
                    $this->prefix_number++;
                    $code = new Smarty_Compiler_Code();
                    $code->iniTagCode($this->compiler);
                    $code->php("\$_tmp{$this->prefix_number} = " . $par . ';')->newline();
                    $this->compiler->prefix_code[] = $code;
                    $isset_par = '$_tmp'.$this->prefix_number;
                }
                $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". $isset_par .")";
            } elseif (in_array($func_name,array('empty','reset','current','end','prev','next'))){
                if (count($this->yystack[$this->yyidx + -1]->minor) != 1) {
                    $this->compiler->error ("Illegal number of paramer in \"{$func_name}\"");
                }
                $this->_retvalue = $func_name.'('.$this->yystack[$this->yyidx + -1]->minor[0].')';
            } else {
                $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". implode(',',$this->yystack[$this->yyidx + -1]->minor) .")";
            }
        } else {
            $this->compiler->error ("unknown function \"" . $this->yystack[$this->yyidx + -3]->minor . "\"");
        }
    }
    }
#line 2865 "Smarty_Compiler_Template_Php_Parser.php"
#line 1025 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r156(){
    if (!$this->security || $this->compiler->tpl_obj->security_policy->isTrustedPhpFunction($this->yystack[$this->yyidx + -3]->minor, $this->compiler)) {
        if (is_callable($this->yystack[$this->yyidx + -3]->minor)) {
            $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". implode(',',$this->yystack[$this->yyidx + -1]->minor) .")";
        } else {
            $this->compiler->error ("unknown function \"" . $this->yystack[$this->yyidx + -3]->minor . "\"");
        }
    }
    }
#line 2876 "Smarty_Compiler_Template_Php_Parser.php"
#line 1038 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r157(){
    if ($this->security && substr($this->yystack[$this->yyidx + -3]->minor,0,1) == '_') {
        $this->compiler->error (self::Err1);
    }
    $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". implode(',',$this->yystack[$this->yyidx + -1]->minor) .")";
    }
#line 2884 "Smarty_Compiler_Template_Php_Parser.php"
#line 1045 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r158(){
    if ($this->security) {
        $this->compiler->error (self::Err2);
    }
    $this->prefix_number++;
    $code = new Smarty_Compiler_Code();
    $code->iniTagCode($this->compiler);
    $code->php("\$_tmp{$this->prefix_number} = " . $this->compiler->compileVariable("'".$this->yystack[$this->yyidx + -3]->minor."'") . ';')->newline();
    $this->compiler->prefix_code[] = $code;
   $this->_retvalue = '$_tmp'.$this->prefix_number.'('. implode(',',$this->yystack[$this->yyidx + -1]->minor) .')';
    }
#line 2897 "Smarty_Compiler_Template_Php_Parser.php"
#line 1059 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r159(){
    $this->_retvalue = array_merge($this->yystack[$this->yyidx + -2]->minor,array($this->yystack[$this->yyidx + 0]->minor));
    }
#line 2902 "Smarty_Compiler_Template_Php_Parser.php"
#line 1076 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r162(){
    $this->_retvalue = array_merge($this->yystack[$this->yyidx + -2]->minor,array(array_merge($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor)));
    }
#line 2907 "Smarty_Compiler_Template_Php_Parser.php"
#line 1080 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r163(){
    $this->_retvalue = array(array_merge($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor));
    }
#line 2912 "Smarty_Compiler_Template_Php_Parser.php"
#line 1088 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r165(){
    $this->_retvalue =  array($this->yystack[$this->yyidx + 0]->minor);
    }
#line 2917 "Smarty_Compiler_Template_Php_Parser.php"
#line 1096 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r166(){
    $this->_retvalue = array_merge($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor);
    }
#line 2922 "Smarty_Compiler_Template_Php_Parser.php"
#line 1130 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r173(){
    $this->_retvalue = '$'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2927 "Smarty_Compiler_Template_Php_Parser.php"
#line 1135 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r174(){
    $this->_retvalue = '$'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2932 "Smarty_Compiler_Template_Php_Parser.php"
#line 1141 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r175(){
    $this->_retvalue = '==';
    }
#line 2937 "Smarty_Compiler_Template_Php_Parser.php"
#line 1145 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r176(){
    $this->_retvalue = '!=';
    }
#line 2942 "Smarty_Compiler_Template_Php_Parser.php"
#line 1149 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r177(){
    $this->_retvalue = '>';
    }
#line 2947 "Smarty_Compiler_Template_Php_Parser.php"
#line 1153 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r178(){
    $this->_retvalue = '<';
    }
#line 2952 "Smarty_Compiler_Template_Php_Parser.php"
#line 1157 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r179(){
    $this->_retvalue = '>=';
    }
#line 2957 "Smarty_Compiler_Template_Php_Parser.php"
#line 1161 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r180(){
    $this->_retvalue = '<=';
    }
#line 2962 "Smarty_Compiler_Template_Php_Parser.php"
#line 1165 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r181(){
    $this->_retvalue = '===';
    }
#line 2967 "Smarty_Compiler_Template_Php_Parser.php"
#line 1169 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r182(){
    $this->_retvalue = '!==';
    }
#line 2972 "Smarty_Compiler_Template_Php_Parser.php"
#line 1173 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r183(){
    $this->_retvalue = '%';
    }
#line 2977 "Smarty_Compiler_Template_Php_Parser.php"
#line 1177 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r184(){
    $this->_retvalue = '&&';
    }
#line 2982 "Smarty_Compiler_Template_Php_Parser.php"
#line 1181 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r185(){
    $this->_retvalue = '||';
    }
#line 2987 "Smarty_Compiler_Template_Php_Parser.php"
#line 1185 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r186(){
    $this->_retvalue = ' XOR ';
    }
#line 2992 "Smarty_Compiler_Template_Php_Parser.php"
#line 1192 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r187(){
    $this->_retvalue = 'array('.$this->yystack[$this->yyidx + -1]->minor.')';
    }
#line 2997 "Smarty_Compiler_Template_Php_Parser.php"
#line 1200 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r189(){
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.','.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 3002 "Smarty_Compiler_Template_Php_Parser.php"
#line 1208 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r191(){
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'=>'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 3007 "Smarty_Compiler_Template_Php_Parser.php"
#line 1212 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r192(){ 
    $this->_retvalue = '\''.$this->yystack[$this->yyidx + -2]->minor.'\'=>'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 3012 "Smarty_Compiler_Template_Php_Parser.php"
#line 1224 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r194(){
    $this->_retvalue = "''";
    }
#line 3017 "Smarty_Compiler_Template_Php_Parser.php"
#line 1233 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r196(){
    if ($this->yystack[$this->yyidx + 0]->minor === false) {
       $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;
    } else {
       $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor. '.' . $this->yystack[$this->yyidx + 0]->minor;
    }
    }
#line 3026 "Smarty_Compiler_Template_Php_Parser.php"
#line 1241 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r197(){
    if ($this->yystack[$this->yyidx + 0]->minor === false) {
       $this->_retvalue = "''";
    } else {
       $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;
    }
    }
#line 3035 "Smarty_Compiler_Template_Php_Parser.php"
#line 1249 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r198(){
    if (empty($this->db_quote_code_buffer)) {
        $this->_retvalue = '(string)'.$this->yystack[$this->yyidx + -1]->minor;
    } else {
        $this->db_quote_code_buffer .= 'echo (string)'.$this->yystack[$this->yyidx + -1]->minor.';';
        $this->_retvalue = false;
    }
    }
#line 3045 "Smarty_Compiler_Template_Php_Parser.php"
#line 1258 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r199(){
    if (empty($this->db_quote_code_buffer)) {
        $this->_retvalue = '(string)('.$this->yystack[$this->yyidx + -1]->minor.')';
    } else {
        $this->db_quote_code_buffer .= 'echo (string)('.$this->yystack[$this->yyidx + -1]->minor.');';
        $this->_retvalue = false;
    }
    }
#line 3055 "Smarty_Compiler_Template_Php_Parser.php"
#line 1267 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r200(){
    if (empty($this->db_quote_code_buffer)) {
        $this->_retvalue = '(string)$_scope->'. substr($this->yystack[$this->yyidx + 0]->minor,1) . '->value';
    } else {
        $this->db_quote_code_buffer .= 'echo (string)$_scope->'. substr($this->yystack[$this->yyidx + 0]->minor,1) . '->value;';
        $this->_retvalue = false;
    }
    }
#line 3065 "Smarty_Compiler_Template_Php_Parser.php"
#line 1294 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r203(){
    if (empty($this->db_quote_code_buffer)) {
            $this->db_quote_code_buffer = 'ob_start();';
    }
    $this->db_quote_code_buffer .= $this->yystack[$this->yyidx + -1]->minor->buffer;
    if ($this->block_nesting_level == count($this->compiler->_tag_stack)) {
        $this->prefix_number++;
        $this->compiler->prefix_code[] = $this->db_quote_code_buffer . ' $_tmp'.$this->prefix_number.'=ob_get_clean();';
        $this->db_quote_code_buffer = '';
        $this->_retvalue = '$_tmp'.$this->prefix_number;
    } else {
        $this->_retvalue = false;
    }

    }
#line 3082 "Smarty_Compiler_Template_Php_Parser.php"
#line 1310 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r204(){
    if (empty($this->db_quote_code_buffer)) {
        $this->_retvalue = '"'.$this->yystack[$this->yyidx + 0]->minor.'"';
    } else {
        $this->db_quote_code_buffer .= 'echo ' . sprintf('"%s"', addcslashes($this->yystack[$this->yyidx + 0]->minor, "\0\t\n\r\"\$\\")) . ';';
        $this->_retvalue = false;
    }
    }
#line 3092 "Smarty_Compiler_Template_Php_Parser.php"

    private $_retvalue;

    public function yy_reduce($yyruleno)
    {
        $yymsp = $this->yystack[$this->yyidx];
        if (self::$yyTraceFILE && $yyruleno >= 0
              && $yyruleno < count(self::$yyRuleName)) {
            fprintf(self::$yyTraceFILE, "%sReduce (%d) [%s].\n",
                self::$yyTracePrompt, $yyruleno,
                self::$yyRuleName[$yyruleno]);
        }

        $this->_retvalue = $yy_lefthand_side = null;
        if (array_key_exists($yyruleno, self::$yyReduceMap)) {
            // call the action
            $this->_retvalue = null;
            $this->{'yy_r' . self::$yyReduceMap[$yyruleno]}();
            $yy_lefthand_side = $this->_retvalue;
        }
        $yygoto = self::$yyRuleInfo[$yyruleno]['lhs'];
        $yysize = self::$yyRuleInfo[$yyruleno]['rhs'];
        $this->yyidx -= $yysize;
        for ($i = $yysize; $i; $i--) {
            // pop all of the right-hand side parameters
            array_pop($this->yystack);
        }
        $yyact = $this->yy_find_reduce_action($this->yystack[$this->yyidx]->stateno, $yygoto);
        if ($yyact < self::YYNSTATE) {
            if (!self::$yyTraceFILE && $yysize) {
                $this->yyidx++;
                $x = new TP_yyStackEntry;
                $x->stateno = $yyact;
                $x->major = $yygoto;
                $x->minor = $yy_lefthand_side;
                $this->yystack[$this->yyidx] = $x;
            } else {
                $this->yy_shift($yyact, $yygoto, $yy_lefthand_side);
            }
        } elseif ($yyact == self::YYNSTATE + self::YYNRULE + 1) {
            $this->yy_accept();
        }
    }

    public function yy_parse_failed()
    {
        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sFail!\n", self::$yyTracePrompt);
        }
        while ($this->yyidx >= 0) {
            $this->yy_pop_parser_stack();
        }
    }

    public function yy_syntax_error($yymajor, $TOKEN)
    {
#line 63 "Smarty_Compiler_Template_Php_Parser.y"

    $this->internalError = true;
    // expected token from parser
    $error_text = "<br> Syntax error :Unexpected '<b>{$this->lex->value}</b>'";
    if (count($this->yy_get_expected_tokens($yymajor)) <= 4) {
        foreach ($this->yy_get_expected_tokens($yymajor) as $token) {
            $exp_token = $this->yyTokenName[$token];
            if (isset($this->lex->smarty_token_names[$exp_token])) {
                // token type from lexer
                $expect[] = "'<b>{$this->lex->smarty_token_names[$exp_token]}</b>'";
            } else {
                // otherwise internal token name
                $expect[] = $this->yyTokenName[$token];
            }
        }
        $error_text .= ', expected one of: ' . implode(' , ', $expect) . '<br>';
    }
    $this->compiler->error($error_text);
#line 3169 "Smarty_Compiler_Template_Php_Parser.php"
    }

    public function yy_accept()
    {
        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sAccept!\n", self::$yyTracePrompt);
        } while ($this->yyidx >= 0) {
            $stack = $this->yy_pop_parser_stack();
        }
#line 55 "Smarty_Compiler_Template_Php_Parser.y"

    $this->successful = !$this->internalError;
    $this->internalError = false;
    $this->retvalue = $this->_retvalue;
    //echo $this->retvalue."\n\n";
#line 3186 "Smarty_Compiler_Template_Php_Parser.php"
    }

    public function doParse($yymajor, $yytokenvalue)
    {
        $yyerrorhit = 0;   /* True if yymajor has invoked an error */

        if ($this->yyidx === null || $this->yyidx < 0) {
            $this->yyidx = 0;
            $this->yyerrcnt = -1;
            $x = new TP_yyStackEntry;
            $x->stateno = 0;
            $x->major = 0;
            $this->yystack = array();
            array_push($this->yystack, $x);
        }
        $yyendofinput = ($yymajor==0);

        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sInput %s\n",
                self::$yyTracePrompt, $this->yyTokenName[$yymajor]);
        }

        do {
            $yyact = $this->yy_find_shift_action($yymajor);
            if ($yymajor < self::YYERRORSYMBOL &&
                  !$this->yy_is_expected_token($yymajor)) {
                // force a syntax error
                $yyact = self::YY_ERROR_ACTION;
            }
            if ($yyact < self::YYNSTATE) {
                $this->yy_shift($yyact, $yymajor, $yytokenvalue);
                $this->yyerrcnt--;
                if ($yyendofinput && $this->yyidx >= 0) {
                    $yymajor = 0;
                } else {
                    $yymajor = self::YYNOCODE;
                }
            } elseif ($yyact < self::YYNSTATE + self::YYNRULE) {
                $this->yy_reduce($yyact - self::YYNSTATE);
            } elseif ($yyact == self::YY_ERROR_ACTION) {
                if (self::$yyTraceFILE) {
                    fprintf(self::$yyTraceFILE, "%sSyntax Error!\n",
                        self::$yyTracePrompt);
                }
                if (self::YYERRORSYMBOL) {
                    if ($this->yyerrcnt < 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $yymx = $this->yystack[$this->yyidx]->major;
                    if ($yymx == self::YYERRORSYMBOL || $yyerrorhit) {
                        if (self::$yyTraceFILE) {
                            fprintf(self::$yyTraceFILE, "%sDiscard input token %s\n",
                                self::$yyTracePrompt, $this->yyTokenName[$yymajor]);
                        }
                        $this->yy_destructor($yymajor, $yytokenvalue);
                        $yymajor = self::YYNOCODE;
                    } else {
                        while ($this->yyidx >= 0 &&
                                 $yymx != self::YYERRORSYMBOL &&
        ($yyact = $this->yy_find_shift_action(self::YYERRORSYMBOL)) >= self::YYNSTATE
                              ){
                            $this->yy_pop_parser_stack();
                        }
                        if ($this->yyidx < 0 || $yymajor==0) {
                            $this->yy_destructor($yymajor, $yytokenvalue);
                            $this->yy_parse_failed();
                            $yymajor = self::YYNOCODE;
                        } elseif ($yymx != self::YYERRORSYMBOL) {
                            $u2 = 0;
                            $this->yy_shift($yyact, self::YYERRORSYMBOL, $u2);
                        }
                    }
                    $this->yyerrcnt = 3;
                    $yyerrorhit = 1;
                } else {
                    if ($this->yyerrcnt <= 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $this->yyerrcnt = 3;
                    $this->yy_destructor($yymajor, $yytokenvalue);
                    if ($yyendofinput) {
                        $this->yy_parse_failed();
                    }
                    $yymajor = self::YYNOCODE;
                }
            } else {
                $this->yy_accept();
                $yymajor = self::YYNOCODE;
            }
        } while ($yymajor != self::YYNOCODE && $this->yyidx >= 0);
    }
}
