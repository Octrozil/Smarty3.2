<?php
/**
* Smarty Internal Plugin Template_parser
*
* This is the template parser.
* It is generated from the internal.template_parser.y file
* @package Smarty
* @subpackage Compiler
* @author Uwe Tews
*/
class TP_yyToken implements ArrayAccess
{
    public $string = '';
    public $metadata = array();

    public function __construct($s, $m = array())
    {
        if ($s instanceof TP_yyToken) {
            $this->string = $s->string;
            $this->metadata = $s->metadata;
        } else {
            $this->string = (string) $s;
            if ($m instanceof TP_yyToken) {
                $this->metadata = $m->metadata;
            } elseif (is_array($m)) {
                $this->metadata = $m;
            }
        }
    }

    public function __toString()
    {
        return $this->_string;
    }

    public function offsetExists($offset)
    {
        return isset($this->metadata[$offset]);
    }

    public function offsetGet($offset)
    {
        return $this->metadata[$offset];
    }

    public function offsetSet($offset, $value)
    {
        if ($offset === null) {
            if (isset($value[0])) {
                $x = ($value instanceof TP_yyToken) ?
                    $value->metadata : $value;
                $this->metadata = array_merge($this->metadata, $x);

                return;
            }
            $offset = count($this->metadata);
        }
        if ($value === null) {
            return;
        }
        if ($value instanceof TP_yyToken) {
            if ($value->metadata) {
                $this->metadata[$offset] = $value->metadata;
            }
        } elseif ($value) {
            $this->metadata[$offset] = $value;
        }
    }

    public function offsetUnset($offset)
    {
        unset($this->metadata[$offset]);
    }
}

class TP_yyStackEntry
{
    public $stateno;       /* The state-number */
    public $major;         /* The major token value.  This is the code
                     ** number for the token at this stack level */
    public $minor; /* The user-supplied minor token value.  This
                     ** is the value of the token  */
};


#line 13 "Smarty_Compiler_Template_Php_Parser.y"
class Smarty_Compiler_Template_PHP_Parser extends Smarty_Exception_Magic#line 80 "Smarty_Compiler_Template_Php_Parser.php"
{
#line 15 "Smarty_Compiler_Template_Php_Parser.y"

    const Err1 = "Security error: Call to private object member not allowed";
    const Err2 = "Security error: Call to dynamic object member not allowed";
    const Err3 = "PHP in template not allowed. Use SmartyBC to enable it";
    // states whether the parse was successful or not
    public $successful = true;
    public $retvalue = 0;
    public  $lex = null;
    public  $compiler = null;
    public  $prefix_number = 0;
    public  $block_nesting_level = 0;
    private $internalError = false;
    private $strip = false;
    private $text_is_php = false;
    private $is_xml = false;
    private $db_quote_code_buffer = '';
    private $asp_tags = null;
    private $php_handling = null;
    private $security = null;
    private $opMap = array('and' => '&&', 'or' => '||', 'eq' => '==', 'neq' => '!=', 'ne' => '!=', 'gt' => '>',
                            'lt' => '<', 'ge' => '>=', 'gte' => '>=', 'le' => '<=' , 'lte' => '<=', 'mod' => '%',
                            'not' => '!');

    function __construct($lex, $compiler) {
        $this->lex = $lex;
        $this->lex->parser_class = get_class($this);
        $this->compiler = $compiler;
        $this->compiler->prefix_code = array();
        if ($this->security = isset($this->compiler->tpl_obj->security_policy)) {
            $this->php_handling = $this->compiler->tpl_obj->security_policy->php_handling;
        } else {
            $this->php_handling = $this->compiler->tpl_obj->php_handling;
        }
       $this->asp_tags = (ini_get('asp_tags') != '0');
    }
#line 119 "Smarty_Compiler_Template_Php_Parser.php"

    const TP_VERT                           =  1;
    const TP_COLON                          =  2;
    const TP_TEMPLATEINIT                   =  3;
    const TP_RDEL                           =  4;
    const TP_COMMENT                        =  5;
    const TP_PHPSTARTTAG                    =  6;
    const TP_PHPENDTAG                      =  7;
    const TP_ASPSTARTTAG                    =  8;
    const TP_ASPENDTAG                      =  9;
    const TP_FAKEPHPSTARTTAG                = 10;
    const TP_XMLTAG                         = 11;
    const TP_TEXT                           = 12;
    const TP_STRIPON                        = 13;
    const TP_STRIPOFF                       = 14;
    const TP_LITERALSTART                   = 15;
    const TP_LITERALEND                     = 16;
    const TP_LITERAL                        = 17;
    const TP_LDEL                           = 18;
    const TP_EQUAL                          = 19;
    const TP_ID                             = 20;
    const TP_PTR                            = 21;
    const TP_LDELIF                         = 22;
    const TP_LDELFOR                        = 23;
    const TP_SEMICOLON                      = 24;
    const TP_IDINCDEC                       = 25;
    const TP_TO                             = 26;
    const TP_STEP                           = 27;
    const TP_LDELFOREACH                    = 28;
    const TP_SPACE                          = 29;
    const TP_AS                             = 30;
    const TP_APTR                           = 31;
    const TP_LDELSETFILTER                  = 32;
    const TP_LDELSLASH                      = 33;
    const TP_ATTR                           = 34;
    const TP_INTEGER                        = 35;
    const TP_COMMA                          = 36;
    const TP_OPENP                          = 37;
    const TP_CLOSEP                         = 38;
    const TP_DOLLAR                         = 39;
    const TP_MATH                           = 40;
    const TP_UNIMATH                        = 41;
    const TP_ANDSYM                         = 42;
    const TP_IFCOND                         = 43;
    const TP_ISIN                           = 44;
    const TP_LOP                            = 45;
    const TP_ISDIVBY                        = 46;
    const TP_ISNOTDIVBY                     = 47;
    const TP_ISEVEN                         = 48;
    const TP_ISNOTEVEN                      = 49;
    const TP_ISEVENBY                       = 50;
    const TP_ISNOTEVENBY                    = 51;
    const TP_ISODD                          = 52;
    const TP_ISNOTODD                       = 53;
    const TP_ISODDBY                        = 54;
    const TP_ISNOTODDBY                     = 55;
    const TP_INSTANCEOF                     = 56;
    const TP_NAMESPACE                      = 57;
    const TP_QMARK                          = 58;
    const TP_NOT                            = 59;
    const TP_TYPECAST                       = 60;
    const TP_NUMBER                         = 61;
    const TP_DOT                            = 62;
    const TP_SINGLEQUOTESTRING              = 63;
    const TP_AT                             = 64;
    const TP_HATCH                          = 65;
    const TP_OPENB                          = 66;
    const TP_CLOSEB                         = 67;
    const TP_DOUBLECOLON                    = 68;
    const TP_QUOTE                          = 69;
    const TP_BACKTICK                       = 70;
    const TP_DOLLARID                       = 71;
    const TP_DQTAG                          = 72;
    const YY_NO_ACTION = 504;
    const YY_ACCEPT_ACTION = 503;
    const YY_ERROR_ACTION = 502;

    const YY_SZ_ACTTAB = 2017;
static public $yy_action = array(
 /*     0 */    38,  198,  137,  317,    8,   58,  217,  244,  190,   20,
 /*    10 */   102,  135,  193,  187,  225,  224,  242,  268,  163,   15,
 /*    20 */    54,  104,  101,   40,  110,  206,  319,  170,  114,  198,
 /*    30 */   183,  271,  255,  260,  270,  231,  248,  177,  312,  160,
 /*    40 */   198,   42,   47,  261,  222,  234,  215,  117,    1,  282,
 /*    50 */   151,   95,   61,   23,  291,  174,   48,  232,   38,  258,
 /*    60 */   164,  188,    8,   58,    2,  244,  263,  107,  102,  452,
 /*    70 */    60,  452,  225,  224,  242,  268,  188,   15,   84,  104,
 /*    80 */   127,   40,   39,  238,  175,  170,   98,   31,  291,  271,
 /*    90 */   108,  260,  270,  231,  248,  116,  312,  160,  186,   42,
 /*   100 */    47,  261,  222,  234,  111,  117,    1,  203,  275,   95,
 /*   110 */    64,  298,   32,  293,   94,   35,   38,   57,  164,  116,
 /*   120 */     8,   58,  198,  244,  181,  290,  102,  167,   34,  172,
 /*   130 */   225,  224,  266,  268,    2,   15,  258,  119,  226,   40,
 /*   140 */   305,  243,  237,  246,  309,  280,   32,  293,   94,  169,
 /*   150 */   321,  300,   30,  188,  452,  160,  452,   42,   47,  261,
 /*   160 */   222,  234,  144,  117,    1,  116,  198,   95,  503,   59,
 /*   170 */   256,  212,  304,  452,   38,  452,  164,   48,    8,   58,
 /*   180 */     2,  244,   39,  143,  102,  172,  229,   31,  225,  224,
 /*   190 */    97,  268,  258,   17,   39,  115,    3,   40,  208,   31,
 /*   200 */   211,  201,    2,  190,  116,  210,  257,  212,  304,  188,
 /*   210 */   274,  116,   20,  160,  140,   42,   47,  261,  222,  234,
 /*   220 */     7,  117,    1,  116,   20,   95,  264,  284,   29,   20,
 /*   230 */   308,  103,   38,  116,   49,  154,    8,   58,  216,  244,
 /*   240 */   239,  322,  102,  180,  290,  111,  225,  224,  111,  268,
 /*   250 */   109,   15,  148,  104,  172,   40,   29,  111,  315,  188,
 /*   260 */   254,  258,   39,  141,  184,  172,   13,   31,  452,  198,
 /*   270 */   452,  160,  258,   42,   47,  261,  222,  234,  188,  117,
 /*   280 */     1,  113,  158,   95,  172,   57,  198,    7,  228,  188,
 /*   290 */    38,  258,  168,  190,    8,   58,  232,  244,  249,   57,
 /*   300 */   102,  142,  122,  172,  225,  224,  106,  268,  188,   17,
 /*   310 */   258,  115,  178,   40,   39,  208,  252,  214,    2,   31,
 /*   320 */   190,  173,  290,  208,   48,  267,   96,  188,  190,  155,
 /*   330 */     9,   42,   47,  261,  222,  234,  188,  117,    1,   96,
 /*   340 */    62,   95,  159,    9,  452,    4,  452,  145,   38,  116,
 /*   350 */   139,  258,    8,   58,  149,  244,  258,   29,  102,  306,
 /*   360 */   219,  213,  225,  224,  188,  207,  194,   15,  193,  104,
 /*   370 */    29,   40,  240,  193,  172,   28,  116,  288,  134,  292,
 /*   380 */   303,   65,  310,  111,  198,   41,   20,  160,  236,   42,
 /*   390 */    47,  261,  222,  234,  150,  117,    1,  223,  188,   95,
 /*   400 */   156,  285,  272,  258,  262,   25,   38,   57,  133,  258,
 /*   410 */     8,   58,  179,  244,   16,  146,  102,  161,   20,   31,
 /*   420 */   225,  224,  152,  268,  258,   15,  258,  104,   20,   40,
 /*   430 */   199,  258,   20,  153,  195,  147,  188,    6,  198,  189,
 /*   440 */   126,   20,  258,  136,  258,  160,  166,   42,   47,  261,
 /*   450 */   222,  234,  316,  117,    1,    6,  230,   95,  220,  112,
 /*   460 */   130,  241,  191,   19,   38,  192,  138,  235,    8,   58,
 /*   470 */   247,  244,  253,  289,  102,  254,  157,  176,  225,  224,
 /*   480 */   165,  268,  185,   15,   63,  104,   24,   40,  269,  287,
 /*   490 */    27,  209,   25,  283,  251,  162,  259,  227,   41,  263,
 /*   500 */   233,   93,  281,  160,  239,   42,   47,  261,  222,  234,
 /*   510 */   245,  117,    1,  313,  295,   95,  218,  105,  100,  295,
 /*   520 */   295,  295,   38,  295,  164,  295,    8,   58,  295,  244,
 /*   530 */   295,  295,  102,  295,  295,  295,  225,  224,  198,  268,
 /*   540 */   295,    5,  295,  104,  295,   40,  295,  295,  295,  295,
 /*   550 */   295,  295,  295,  295,  295,  295,  295,  295,  295,  295,
 /*   560 */   295,  160,  295,   42,   47,  261,  222,  234,  198,  117,
 /*   570 */     1,  295,  295,   95,  295,  205,  295,   46,   43,   45,
 /*   580 */    14,   44,   10,   11,   37,  299,  301,   12,   18,  318,
 /*   590 */   320,   36,   21,  295,   26,  295,   39,  295,  295,  295,
 /*   600 */   295,   31,  295,  198,  295,  295,  296,   46,   43,   45,
 /*   610 */    14,   44,   10,   11,   37,  299,  301,   12,   18,  318,
 /*   620 */   320,   36,   21,  295,  295,   33,  295,  295,  295,    8,
 /*   630 */    58,   39,  295,  198,  295,  102,   31,  295,  295,  225,
 /*   640 */   224,  295,   46,   43,   45,   14,   44,   10,   11,   37,
 /*   650 */   299,  301,   12,   18,  318,  320,   36,   21,  295,  198,
 /*   660 */   295,   39,  296,  295,  295,  295,   31,  295,  295,  295,
 /*   670 */   295,  295,   46,   43,   45,   14,   44,   10,   11,   37,
 /*   680 */   299,  301,   12,   18,  318,  320,   36,   21,  295,  295,
 /*   690 */   295,  295,  295,  295,  295,  295,  295,  295,   46,   43,
 /*   700 */    45,   14,   44,   10,   11,   37,  299,  301,   12,   18,
 /*   710 */   318,  320,   36,   21,  250,  198,  265,  302,  311,  314,
 /*   720 */   297,  277,  294,  286,  295,  279,  169,  295,  295,   38,
 /*   730 */   242,  295,  295,    8,   58,  295,  127,  295,  295,  102,
 /*   740 */   295,  170,  129,  225,  224,  295,  198,  260,  270,  231,
 /*   750 */   248,  295,  312,  295,   46,   43,   45,   14,   44,   10,
 /*   760 */    11,   37,  299,  301,   12,   18,  318,  320,   36,   21,
 /*   770 */   295,  295,  295,  295,  295,  295,  295,  295,  295,  295,
 /*   780 */   295,  295,  295,  295,  278,   46,   43,   45,   14,   44,
 /*   790 */    10,   11,   37,  299,  301,   12,   18,  318,  320,   36,
 /*   800 */    21,  198,  295,  242,  295,  295,  295,   83,  295,  127,
 /*   810 */   295,  295,  273,  295,  170,  114,  295,  295,  271,  295,
 /*   820 */   260,  270,  231,  248,  182,  312,  198,   22,  295,  295,
 /*   830 */   295,  295,  295,  197,  295,  295,  295,  295,  295,  295,
 /*   840 */    46,   43,   45,   14,   44,   10,   11,   37,  299,  301,
 /*   850 */    12,   18,  318,  320,   36,   21,  198,  295,  295,  295,
 /*   860 */   295,  295,  295,  295,  295,   46,   43,   45,   14,   44,
 /*   870 */    10,   11,   37,  299,  301,   12,   18,  318,  320,   36,
 /*   880 */    21,  295,  198,  295,  295,  295,  295,  295,  295,  295,
 /*   890 */   295,  295,  295,  307,  295,   46,   43,   45,   14,   44,
 /*   900 */    10,   11,   37,  299,  301,   12,   18,  318,  320,   36,
 /*   910 */    21,  171,  198,  295,  295,  295,  295,  295,  295,  295,
 /*   920 */   295,   46,   43,   45,   14,   44,   10,   11,   37,  299,
 /*   930 */   301,   12,   18,  318,  320,   36,   21,  295,  295,  295,
 /*   940 */   295,  295,  295,  295,  295,  295,  295,  295,  295,  295,
 /*   950 */   295,   46,   43,   45,   14,   44,   10,   11,   37,  299,
 /*   960 */   301,   12,   18,  318,  320,   36,   21,   46,   43,   45,
 /*   970 */    14,   44,   10,   11,   37,  299,  301,   12,   18,  318,
 /*   980 */   320,   36,   21,  419,  295,  295,  295,  295,  295,  295,
 /*   990 */   295,  295,  295,  295,  295,  295,  295,  295,  295,  295,
 /*  1000 */   295,  295,  295,  419,  295,  419,  419,  295,  419,  419,
 /*  1010 */   419,  295,  295,  419,  242,  419,    2,  419,   83,  295,
 /*  1020 */   127,  295,  295,  295,  295,  170,  114,  295,  295,  271,
 /*  1030 */   295,  260,  270,  231,  248,  419,  312,  295,  295,  295,
 /*  1040 */   295,  295,  295,  295,  200,  295,  419,  116,  242,  419,
 /*  1050 */   295,  295,   66,  295,  101,  295,  214,  295,  295,  170,
 /*  1060 */   114,  295,  295,  271,  295,  260,  270,  231,  248,  295,
 /*  1070 */   312,  295,  295,  295,  295,  295,  295,  295,  295,  295,
 /*  1080 */   295,  242,  295,  295,  295,   83,  295,  127,  295,  295,
 /*  1090 */   295,  295,  170,  114,  295,  295,  271,  295,  260,  270,
 /*  1100 */   231,  248,  295,  312,  242,  295,  295,  295,   84,  295,
 /*  1110 */   127,  202,  295,  295,  295,  170,   98,  295,  295,  271,
 /*  1120 */   295,  260,  270,  231,  248,  242,  312,  295,  295,   83,
 /*  1130 */   295,  127,  295,  295,  295,  295,  170,  114,  276,  295,
 /*  1140 */   271,  295,  260,  270,  231,  248,  242,  312,  295,  295,
 /*  1150 */    82,  295,  127,  295,  295,  196,  295,  170,  114,  295,
 /*  1160 */   295,  271,  295,  260,  270,  231,  248,  295,  312,  295,
 /*  1170 */   242,  295,  295,  295,   87,  295,  127,  295,  295,  295,
 /*  1180 */   295,  170,  114,  295,  295,  271,  295,  260,  270,  231,
 /*  1190 */   248,  295,  312,  242,  295,  295,  295,   67,  295,  127,
 /*  1200 */   295,  295,  295,  295,  170,  114,  295,  295,  271,  295,
 /*  1210 */   221,  270,  231,  248,  242,  312,  295,  295,   75,  295,
 /*  1220 */   127,  295,  295,  295,  295,  170,  114,  295,  295,  271,
 /*  1230 */   295,  260,  270,  231,  248,  242,  312,  295,  295,   88,
 /*  1240 */   295,  127,  295,  295,  295,  295,  170,  114,  295,  295,
 /*  1250 */   271,  295,  260,  270,  231,  248,  295,  312,  295,  242,
 /*  1260 */   295,  295,  295,   72,  295,  127,  295,  295,  295,  295,
 /*  1270 */   170,  114,  295,  295,  271,  295,  260,  270,  231,  248,
 /*  1280 */   295,  312,  242,  295,  295,  295,   51,  295,  118,  295,
 /*  1290 */   295,  295,  295,  170,  114,  295,  295,  271,  295,  204,
 /*  1300 */   270,  231,  248,  242,  312,  295,  295,   90,  295,  127,
 /*  1310 */   295,  295,  295,  295,  170,  114,  295,  295,  271,  295,
 /*  1320 */   260,  270,  231,  248,  242,  312,  295,  295,   89,  295,
 /*  1330 */   127,  295,  295,  295,  295,  170,  114,  295,  295,  271,
 /*  1340 */   295,  260,  270,  231,  248,  295,  312,  295,  242,  295,
 /*  1350 */   295,  295,   85,  295,  127,  295,  295,  295,  295,  170,
 /*  1360 */   114,  295,  295,  271,  295,  260,  270,  231,  248,  295,
 /*  1370 */   312,  242,  295,  295,  295,   86,  295,  127,  295,  295,
 /*  1380 */   295,  295,  170,  114,  295,  295,  271,  295,  260,  270,
 /*  1390 */   231,  248,  242,  312,  295,  295,   71,  295,  127,  295,
 /*  1400 */   295,  295,  295,  170,  114,  295,  295,  271,  295,  260,
 /*  1410 */   270,  231,  248,  242,  312,  295,  295,   50,  295,  127,
 /*  1420 */   295,  295,  295,  295,  170,  114,  295,  295,  271,  295,
 /*  1430 */   260,  270,  231,  248,  295,  312,  295,  242,  295,  295,
 /*  1440 */   295,   52,  295,  127,  295,  295,  295,  295,  170,  114,
 /*  1450 */   295,  295,  271,  295,  260,  270,  231,  248,  295,  312,
 /*  1460 */   242,  295,  295,  295,   80,  295,  127,  295,  295,  295,
 /*  1470 */   295,  170,  114,  295,  295,  271,  295,  260,  270,  231,
 /*  1480 */   248,  242,  312,  295,  295,   56,  295,  127,  295,  295,
 /*  1490 */   295,  295,  170,  114,  295,  295,  271,  295,  260,  270,
 /*  1500 */   231,  248,  242,  312,  295,  295,   70,  295,  127,  295,
 /*  1510 */   295,  295,  295,  170,  114,  295,  295,  271,  295,  260,
 /*  1520 */   270,  231,  248,  295,  312,  295,  242,  295,  295,  295,
 /*  1530 */    73,  295,  127,  295,  295,  295,  295,  170,   99,  295,
 /*  1540 */   295,  271,  295,  260,  270,  231,  248,  295,  312,  242,
 /*  1550 */   295,  295,  295,   66,  295,  127,  295,  295,  295,  295,
 /*  1560 */   170,  114,  295,  295,  271,  295,  260,  270,  231,  248,
 /*  1570 */   242,  312,  295,  295,   68,  295,  127,  295,  295,  295,
 /*  1580 */   295,  170,  114,  295,  295,  271,  295,  260,  270,  231,
 /*  1590 */   248,  242,  312,  295,  295,   81,  295,  127,  295,  295,
 /*  1600 */   295,  295,  170,  114,  295,  295,  271,  295,  260,  270,
 /*  1610 */   231,  248,  295,  312,  295,  242,  295,  295,  295,   77,
 /*  1620 */   295,  127,  295,  295,  295,  295,  170,  114,  295,  295,
 /*  1630 */   271,  295,  260,  270,  231,  248,  295,  312,  242,  295,
 /*  1640 */   295,  295,   79,  295,  127,  295,  295,  295,  295,  170,
 /*  1650 */   114,  295,  295,  271,  295,  260,  270,  231,  248,  242,
 /*  1660 */   312,  295,  295,   91,  295,  127,  295,  295,  295,  295,
 /*  1670 */   170,  114,  295,  295,  271,  295,  260,  270,  231,  248,
 /*  1680 */   242,  312,  295,  295,   92,  295,  127,  295,  295,  295,
 /*  1690 */   295,  170,  114,  295,  295,  271,  295,  260,  270,  231,
 /*  1700 */   248,  295,  312,  295,  242,  295,  295,  295,   74,  295,
 /*  1710 */   127,  295,  295,  295,  295,  170,  114,  295,  295,  271,
 /*  1720 */   295,  260,  270,  231,  248,  295,  312,  242,  295,  295,
 /*  1730 */   295,   69,  295,  127,  295,  295,  295,  295,  170,  114,
 /*  1740 */   295,  295,  271,  295,  260,  270,  231,  248,  242,  312,
 /*  1750 */   295,  295,   53,  295,  127,  295,  295,  295,  295,  170,
 /*  1760 */   114,  295,  295,  271,  295,  260,  270,  231,  248,  242,
 /*  1770 */   312,  295,  295,   55,  295,  118,  295,  295,  295,  295,
 /*  1780 */   170,  114,  295,  295,  271,  295,  260,  270,  231,  248,
 /*  1790 */   295,  312,  295,  242,  295,  295,  295,   78,  295,  127,
 /*  1800 */   295,  295,  295,  295,  170,  114,  295,  295,  271,  295,
 /*  1810 */   260,  270,  231,  248,  295,  312,  242,  295,  295,  295,
 /*  1820 */    76,  295,  127,  295,  295,  295,  295,  170,  114,  295,
 /*  1830 */   295,  271,  295,  260,  270,  231,  248,  242,  312,  295,
 /*  1840 */   295,  295,  295,  127,  295,  295,  295,  295,  170,  124,
 /*  1850 */   295,  295,  295,  295,  260,  270,  231,  248,  242,  312,
 /*  1860 */   295,  295,  295,  295,  127,  295,  295,  295,  295,  170,
 /*  1870 */   121,  295,  295,  295,  295,  260,  270,  231,  248,  295,
 /*  1880 */   312,  295,  242,  295,  295,  295,  295,  295,  127,  295,
 /*  1890 */   295,  295,  295,  170,  125,  295,  295,  295,  295,  260,
 /*  1900 */   270,  231,  248,  295,  312,  242,  295,  295,  295,  295,
 /*  1910 */   295,  127,  295,  295,  295,  295,  170,  120,  295,  295,
 /*  1920 */   295,  295,  260,  270,  231,  248,  242,  312,  295,  295,
 /*  1930 */   295,  295,  127,  295,  295,  295,  295,  170,  128,  295,
 /*  1940 */   295,  295,  295,  260,  270,  231,  248,  242,  312,  295,
 /*  1950 */   295,  295,  295,  127,  295,  295,  295,  295,  170,  131,
 /*  1960 */   295,  295,  295,  295,  260,  270,  231,  248,  295,  312,
 /*  1970 */   295,  242,  295,  295,  295,  295,  295,  127,  295,  295,
 /*  1980 */   295,  295,  170,  132,  295,  295,  295,  295,  260,  270,
 /*  1990 */   231,  248,  295,  312,  242,  295,  295,  295,  295,  295,
 /*  2000 */   127,  295,  295,  295,  295,  170,  123,  295,  295,  295,
 /*  2010 */   295,  260,  270,  231,  248,  295,  312,
    );
    static public $yy_lookahead = array(
 /*     0 */    18,    1,   20,   83,   22,   23,   20,   25,   88,   18,
 /*    10 */    28,   20,  108,   93,   32,   33,   77,   35,  100,   37,
 /*    20 */    81,   39,   83,   41,   85,   39,  106,   88,   89,    1,
 /*    30 */    30,   92,    4,   94,   95,   96,   97,   84,   99,   57,
 /*    40 */     1,   59,   60,   61,   62,   63,   19,   65,   66,   67,
 /*    50 */    82,   69,   84,    2,   12,   90,   56,   93,   18,   91,
 /*    60 */    20,  108,   22,   23,   37,   25,   98,  103,   28,   18,
 /*    70 */   100,   20,   32,   33,   77,   35,  108,   37,   81,   39,
 /*    80 */    83,   41,   29,  105,   31,   88,   89,   34,   12,   92,
 /*    90 */    25,   94,   95,   96,   97,   68,   99,   57,   24,   59,
 /*   100 */    60,   61,   62,   63,   39,   65,   66,  110,  111,   69,
 /*   110 */    36,   69,   70,   71,   72,   19,   18,   21,   20,   68,
 /*   120 */    22,   23,    1,   25,  104,  105,   28,   82,   31,   84,
 /*   130 */    32,   33,   29,   35,   37,   37,   91,   39,    2,   41,
 /*   140 */     6,    7,    8,    9,   10,   69,   70,   71,   72,   15,
 /*   150 */    16,   17,   31,  108,   18,   57,   20,   59,   60,   61,
 /*   160 */    62,   63,   87,   65,   66,   68,    1,   69,   74,   75,
 /*   170 */    76,   77,   78,   18,   18,   20,   20,   56,   22,   23,
 /*   180 */    37,   25,   29,   82,   28,   84,   21,   34,   32,   33,
 /*   190 */    88,   35,   91,   37,   29,   39,   36,   41,   83,   34,
 /*   200 */    85,   86,   37,   88,   68,   62,   76,   77,   78,  108,
 /*   210 */    67,   68,   18,   57,   20,   59,   60,   61,   62,   63,
 /*   220 */    37,   65,   66,   68,   18,   69,   20,   67,   36,   18,
 /*   230 */    38,   20,   18,   68,   20,   84,   22,   23,   20,   25,
 /*   240 */   101,   35,   28,  104,  105,   39,   32,   33,   39,   35,
 /*   250 */    39,   37,   82,   39,   84,   41,   36,   39,   38,  108,
 /*   260 */   109,   91,   29,   82,   31,   84,   87,   34,   18,    1,
 /*   270 */    20,   57,   91,   59,   60,   61,   62,   63,  108,   65,
 /*   280 */    66,   88,   82,   69,   84,   21,    1,   37,   83,  108,
 /*   290 */    18,   91,   20,   88,   22,   23,   93,   25,  102,   21,
 /*   300 */    28,   82,  106,   84,   32,   33,  103,   35,  108,   37,
 /*   310 */    91,   39,   84,   41,   29,   83,   20,   85,   37,   34,
 /*   320 */    88,  104,  105,   83,   56,   85,   62,  108,   88,   57,
 /*   330 */    66,   59,   60,   61,   62,   63,  108,   65,   66,   62,
 /*   340 */    84,   69,   82,   66,   18,   37,   20,   82,   18,   68,
 /*   350 */    20,   91,   22,   23,  100,   25,   91,   36,   28,   38,
 /*   360 */    64,   77,   32,   33,  108,   35,   65,   37,  108,   39,
 /*   370 */    36,   41,   38,  108,   84,   58,   68,   93,  112,  113,
 /*   380 */    78,   37,   80,   39,    1,    2,   18,   57,   20,   59,
 /*   390 */    60,   61,   62,   63,   82,   65,   66,   88,  108,   69,
 /*   400 */    82,   70,   93,   91,   35,   19,   18,   21,   20,   91,
 /*   410 */    22,   23,   84,   25,   29,   82,   28,   82,   18,   34,
 /*   420 */    32,   33,   82,   35,   91,   37,   91,   39,   18,   41,
 /*   430 */    20,   91,   18,   82,   20,   82,  108,   37,    1,   93,
 /*   440 */    20,   18,   91,   20,   91,   57,  100,   59,   60,   61,
 /*   450 */    62,   63,   20,   65,   66,   37,   64,   69,   21,   20,
 /*   460 */    20,   20,   65,   19,   18,   20,   20,   20,   22,   23,
 /*   470 */    20,   25,   38,    4,   28,  109,  100,   90,   32,   33,
 /*   480 */   100,   35,   20,   37,   90,   39,   19,   41,    4,    4,
 /*   490 */    26,   20,   19,   67,   20,  100,   91,   88,    2,   98,
 /*   500 */    98,   79,  113,   57,  101,   59,   60,   61,   62,   63,
 /*   510 */    98,   65,   66,   16,  114,   69,   64,   88,   88,  114,
 /*   520 */   114,  114,   18,  114,   20,  114,   22,   23,  114,   25,
 /*   530 */   114,  114,   28,  114,  114,  114,   32,   33,    1,   35,
 /*   540 */   114,   37,  114,   39,  114,   41,  114,  114,  114,  114,
 /*   550 */   114,  114,  114,  114,  114,  114,  114,  114,  114,  114,
 /*   560 */   114,   57,  114,   59,   60,   61,   62,   63,    1,   65,
 /*   570 */    66,  114,  114,   69,  114,   38,  114,   40,   41,   42,
 /*   580 */    43,   44,   45,   46,   47,   48,   49,   50,   51,   52,
 /*   590 */    53,   54,   55,  114,   27,  114,   29,  114,  114,  114,
 /*   600 */   114,   34,  114,    1,  114,  114,    4,   40,   41,   42,
 /*   610 */    43,   44,   45,   46,   47,   48,   49,   50,   51,   52,
 /*   620 */    53,   54,   55,  114,  114,   18,  114,  114,  114,   22,
 /*   630 */    23,   29,  114,    1,  114,   28,   34,  114,  114,   32,
 /*   640 */    33,  114,   40,   41,   42,   43,   44,   45,   46,   47,
 /*   650 */    48,   49,   50,   51,   52,   53,   54,   55,  114,    1,
 /*   660 */   114,   29,    4,  114,  114,  114,   34,  114,  114,  114,
 /*   670 */   114,  114,   40,   41,   42,   43,   44,   45,   46,   47,
 /*   680 */    48,   49,   50,   51,   52,   53,   54,   55,  114,  114,
 /*   690 */   114,  114,  114,  114,  114,  114,  114,  114,   40,   41,
 /*   700 */    42,   43,   44,   45,   46,   47,   48,   49,   50,   51,
 /*   710 */    52,   53,   54,   55,    3,    1,    5,    6,    7,    8,
 /*   720 */     9,   10,   11,   12,   13,   14,   15,  114,  114,   18,
 /*   730 */    77,  114,  114,   22,   23,  114,   83,  114,  114,   28,
 /*   740 */   114,   88,   89,   32,   33,  114,    1,   94,   95,   96,
 /*   750 */    97,  114,   99,  114,   40,   41,   42,   43,   44,   45,
 /*   760 */    46,   47,   48,   49,   50,   51,   52,   53,   54,   55,
 /*   770 */   114,  114,  114,  114,  114,  114,  114,  114,  114,  114,
 /*   780 */   114,  114,  114,  114,   70,   40,   41,   42,   43,   44,
 /*   790 */    45,   46,   47,   48,   49,   50,   51,   52,   53,   54,
 /*   800 */    55,    1,  114,   77,  114,  114,  114,   81,  114,   83,
 /*   810 */   114,  114,   67,  114,   88,   89,  114,  114,   92,  114,
 /*   820 */    94,   95,   96,   97,   24,   99,    1,    2,  114,  114,
 /*   830 */   114,  114,  114,  107,  114,  114,  114,  114,  114,  114,
 /*   840 */    40,   41,   42,   43,   44,   45,   46,   47,   48,   49,
 /*   850 */    50,   51,   52,   53,   54,   55,    1,  114,  114,  114,
 /*   860 */   114,  114,  114,  114,  114,   40,   41,   42,   43,   44,
 /*   870 */    45,   46,   47,   48,   49,   50,   51,   52,   53,   54,
 /*   880 */    55,  114,    1,  114,  114,  114,  114,  114,  114,  114,
 /*   890 */   114,  114,  114,   38,  114,   40,   41,   42,   43,   44,
 /*   900 */    45,   46,   47,   48,   49,   50,   51,   52,   53,   54,
 /*   910 */    55,   30,    1,  114,  114,  114,  114,  114,  114,  114,
 /*   920 */   114,   40,   41,   42,   43,   44,   45,   46,   47,   48,
 /*   930 */    49,   50,   51,   52,   53,   54,   55,  114,  114,  114,
 /*   940 */   114,  114,  114,  114,  114,  114,  114,  114,  114,  114,
 /*   950 */   114,   40,   41,   42,   43,   44,   45,   46,   47,   48,
 /*   960 */    49,   50,   51,   52,   53,   54,   55,   40,   41,   42,
 /*   970 */    43,   44,   45,   46,   47,   48,   49,   50,   51,   52,
 /*   980 */    53,   54,   55,    4,  114,  114,  114,  114,  114,  114,
 /*   990 */   114,  114,  114,  114,  114,  114,  114,  114,  114,  114,
 /*  1000 */   114,  114,  114,   24,  114,   26,   27,  114,   29,   30,
 /*  1010 */    31,  114,  114,   34,   77,   36,   37,   38,   81,  114,
 /*  1020 */    83,  114,  114,  114,  114,   88,   89,  114,  114,   92,
 /*  1030 */   114,   94,   95,   96,   97,   56,   99,  114,  114,  114,
 /*  1040 */   114,  114,  114,  114,  107,  114,   67,   68,   77,   70,
 /*  1050 */   114,  114,   81,  114,   83,  114,   85,  114,  114,   88,
 /*  1060 */    89,  114,  114,   92,  114,   94,   95,   96,   97,  114,
 /*  1070 */    99,  114,  114,  114,  114,  114,  114,  114,  114,  114,
 /*  1080 */   114,   77,  114,  114,  114,   81,  114,   83,  114,  114,
 /*  1090 */   114,  114,   88,   89,  114,  114,   92,  114,   94,   95,
 /*  1100 */    96,   97,  114,   99,   77,  114,  114,  114,   81,  114,
 /*  1110 */    83,  107,  114,  114,  114,   88,   89,  114,  114,   92,
 /*  1120 */   114,   94,   95,   96,   97,   77,   99,  114,  114,   81,
 /*  1130 */   114,   83,  114,  114,  114,  114,   88,   89,  111,  114,
 /*  1140 */    92,  114,   94,   95,   96,   97,   77,   99,  114,  114,
 /*  1150 */    81,  114,   83,  114,  114,  107,  114,   88,   89,  114,
 /*  1160 */   114,   92,  114,   94,   95,   96,   97,  114,   99,  114,
 /*  1170 */    77,  114,  114,  114,   81,  114,   83,  114,  114,  114,
 /*  1180 */   114,   88,   89,  114,  114,   92,  114,   94,   95,   96,
 /*  1190 */    97,  114,   99,   77,  114,  114,  114,   81,  114,   83,
 /*  1200 */   114,  114,  114,  114,   88,   89,  114,  114,   92,  114,
 /*  1210 */    94,   95,   96,   97,   77,   99,  114,  114,   81,  114,
 /*  1220 */    83,  114,  114,  114,  114,   88,   89,  114,  114,   92,
 /*  1230 */   114,   94,   95,   96,   97,   77,   99,  114,  114,   81,
 /*  1240 */   114,   83,  114,  114,  114,  114,   88,   89,  114,  114,
 /*  1250 */    92,  114,   94,   95,   96,   97,  114,   99,  114,   77,
 /*  1260 */   114,  114,  114,   81,  114,   83,  114,  114,  114,  114,
 /*  1270 */    88,   89,  114,  114,   92,  114,   94,   95,   96,   97,
 /*  1280 */   114,   99,   77,  114,  114,  114,   81,  114,   83,  114,
 /*  1290 */   114,  114,  114,   88,   89,  114,  114,   92,  114,   94,
 /*  1300 */    95,   96,   97,   77,   99,  114,  114,   81,  114,   83,
 /*  1310 */   114,  114,  114,  114,   88,   89,  114,  114,   92,  114,
 /*  1320 */    94,   95,   96,   97,   77,   99,  114,  114,   81,  114,
 /*  1330 */    83,  114,  114,  114,  114,   88,   89,  114,  114,   92,
 /*  1340 */   114,   94,   95,   96,   97,  114,   99,  114,   77,  114,
 /*  1350 */   114,  114,   81,  114,   83,  114,  114,  114,  114,   88,
 /*  1360 */    89,  114,  114,   92,  114,   94,   95,   96,   97,  114,
 /*  1370 */    99,   77,  114,  114,  114,   81,  114,   83,  114,  114,
 /*  1380 */   114,  114,   88,   89,  114,  114,   92,  114,   94,   95,
 /*  1390 */    96,   97,   77,   99,  114,  114,   81,  114,   83,  114,
 /*  1400 */   114,  114,  114,   88,   89,  114,  114,   92,  114,   94,
 /*  1410 */    95,   96,   97,   77,   99,  114,  114,   81,  114,   83,
 /*  1420 */   114,  114,  114,  114,   88,   89,  114,  114,   92,  114,
 /*  1430 */    94,   95,   96,   97,  114,   99,  114,   77,  114,  114,
 /*  1440 */   114,   81,  114,   83,  114,  114,  114,  114,   88,   89,
 /*  1450 */   114,  114,   92,  114,   94,   95,   96,   97,  114,   99,
 /*  1460 */    77,  114,  114,  114,   81,  114,   83,  114,  114,  114,
 /*  1470 */   114,   88,   89,  114,  114,   92,  114,   94,   95,   96,
 /*  1480 */    97,   77,   99,  114,  114,   81,  114,   83,  114,  114,
 /*  1490 */   114,  114,   88,   89,  114,  114,   92,  114,   94,   95,
 /*  1500 */    96,   97,   77,   99,  114,  114,   81,  114,   83,  114,
 /*  1510 */   114,  114,  114,   88,   89,  114,  114,   92,  114,   94,
 /*  1520 */    95,   96,   97,  114,   99,  114,   77,  114,  114,  114,
 /*  1530 */    81,  114,   83,  114,  114,  114,  114,   88,   89,  114,
 /*  1540 */   114,   92,  114,   94,   95,   96,   97,  114,   99,   77,
 /*  1550 */   114,  114,  114,   81,  114,   83,  114,  114,  114,  114,
 /*  1560 */    88,   89,  114,  114,   92,  114,   94,   95,   96,   97,
 /*  1570 */    77,   99,  114,  114,   81,  114,   83,  114,  114,  114,
 /*  1580 */   114,   88,   89,  114,  114,   92,  114,   94,   95,   96,
 /*  1590 */    97,   77,   99,  114,  114,   81,  114,   83,  114,  114,
 /*  1600 */   114,  114,   88,   89,  114,  114,   92,  114,   94,   95,
 /*  1610 */    96,   97,  114,   99,  114,   77,  114,  114,  114,   81,
 /*  1620 */   114,   83,  114,  114,  114,  114,   88,   89,  114,  114,
 /*  1630 */    92,  114,   94,   95,   96,   97,  114,   99,   77,  114,
 /*  1640 */   114,  114,   81,  114,   83,  114,  114,  114,  114,   88,
 /*  1650 */    89,  114,  114,   92,  114,   94,   95,   96,   97,   77,
 /*  1660 */    99,  114,  114,   81,  114,   83,  114,  114,  114,  114,
 /*  1670 */    88,   89,  114,  114,   92,  114,   94,   95,   96,   97,
 /*  1680 */    77,   99,  114,  114,   81,  114,   83,  114,  114,  114,
 /*  1690 */   114,   88,   89,  114,  114,   92,  114,   94,   95,   96,
 /*  1700 */    97,  114,   99,  114,   77,  114,  114,  114,   81,  114,
 /*  1710 */    83,  114,  114,  114,  114,   88,   89,  114,  114,   92,
 /*  1720 */   114,   94,   95,   96,   97,  114,   99,   77,  114,  114,
 /*  1730 */   114,   81,  114,   83,  114,  114,  114,  114,   88,   89,
 /*  1740 */   114,  114,   92,  114,   94,   95,   96,   97,   77,   99,
 /*  1750 */   114,  114,   81,  114,   83,  114,  114,  114,  114,   88,
 /*  1760 */    89,  114,  114,   92,  114,   94,   95,   96,   97,   77,
 /*  1770 */    99,  114,  114,   81,  114,   83,  114,  114,  114,  114,
 /*  1780 */    88,   89,  114,  114,   92,  114,   94,   95,   96,   97,
 /*  1790 */   114,   99,  114,   77,  114,  114,  114,   81,  114,   83,
 /*  1800 */   114,  114,  114,  114,   88,   89,  114,  114,   92,  114,
 /*  1810 */    94,   95,   96,   97,  114,   99,   77,  114,  114,  114,
 /*  1820 */    81,  114,   83,  114,  114,  114,  114,   88,   89,  114,
 /*  1830 */   114,   92,  114,   94,   95,   96,   97,   77,   99,  114,
 /*  1840 */   114,  114,  114,   83,  114,  114,  114,  114,   88,   89,
 /*  1850 */   114,  114,  114,  114,   94,   95,   96,   97,   77,   99,
 /*  1860 */   114,  114,  114,  114,   83,  114,  114,  114,  114,   88,
 /*  1870 */    89,  114,  114,  114,  114,   94,   95,   96,   97,  114,
 /*  1880 */    99,  114,   77,  114,  114,  114,  114,  114,   83,  114,
 /*  1890 */   114,  114,  114,   88,   89,  114,  114,  114,  114,   94,
 /*  1900 */    95,   96,   97,  114,   99,   77,  114,  114,  114,  114,
 /*  1910 */   114,   83,  114,  114,  114,  114,   88,   89,  114,  114,
 /*  1920 */   114,  114,   94,   95,   96,   97,   77,   99,  114,  114,
 /*  1930 */   114,  114,   83,  114,  114,  114,  114,   88,   89,  114,
 /*  1940 */   114,  114,  114,   94,   95,   96,   97,   77,   99,  114,
 /*  1950 */   114,  114,  114,   83,  114,  114,  114,  114,   88,   89,
 /*  1960 */   114,  114,  114,  114,   94,   95,   96,   97,  114,   99,
 /*  1970 */   114,   77,  114,  114,  114,  114,  114,   83,  114,  114,
 /*  1980 */   114,  114,   88,   89,  114,  114,  114,  114,   94,   95,
 /*  1990 */    96,   97,  114,   99,   77,  114,  114,  114,  114,  114,
 /*  2000 */    83,  114,  114,  114,  114,   88,   89,  114,  114,  114,
 /*  2010 */   114,   94,   95,   96,   97,  114,   99,
);
    const YY_SHIFT_USE_DFLT = -19;
    const YY_SHIFT_MAX = 230;
    static public $yy_shift_ofst = array(
 /*     0 */   711,  446,   40,  446,   40,  504,   40,   40,  504,  -18,
 /*    10 */    40,   40,   40,   40,   40,   40,  330,   40,   40,   40,
 /*    20 */    40,   40,   40,  388,   40,   40,   40,   40,   98,   40,
 /*    30 */    40,   40,   40,  214,   40,   40,   40,   40,  214,  330,
 /*    40 */   156,  156,  156,  156,  156,  156,  156,  156,  272,  165,
 /*    50 */   567,  602,  632,  632,  632,  632,  632,  211,  344,  711,
 /*    60 */   264,  285,  285,  383,  344,  344,  537,  714,  658,  745,
 /*    70 */   855,  800,  825,  881,  911,  911,  911,  911,  911,  911,
 /*    80 */   911,  911,  911,  911,  911,  911,  911,  911,  911,  911,
 /*    90 */   911,  927,  927,  134,  607,   42,  206,  233,  121,    0,
 /*   100 */    53,  386,  385,  400,  423,  153,  368,  368,  153,  414,
 /*   110 */   153,  410,  437,  153,  268,  194,  -14,  218,   96,   -9,
 /*   120 */    39,   39,  278,   39,   39,   39,   39,  278,   39,   39,
 /*   130 */    39,   39,  -19,  979,   76,   51,  136,  143,   97,   27,
 /*   140 */   155,  153,  153,  153,   65,  153,  153,  153,  153,  277,
 /*   150 */   153,  153,  153,  153,   28,  308,  153,  277,  153,  153,
 /*   160 */   308,  153,  277,  277,  281,  277,  277,  153,  281,  497,
 /*   170 */   452,  209,   39,  278,  496,  209,  496,   39,   39,   39,
 /*   180 */   278,  278,  103,  209,  209,  183,  103,  -19,  -19,  -19,
 /*   190 */   -19,  -19,  -19,  -19,  -19,  250,  321,  334,  296,  326,
 /*   200 */   220,   74,  192,  160,  469,  317,  462,  467,  473,  426,
 /*   210 */   471,  464,  484,  485,  434,  450,  301,  418,  432,  474,
 /*   220 */   420,  331,  369,  392,  439,  445,  447,  444,  397,  440,
 /*   230 */   441,
);
    const YY_REDUCE_USE_DFLT = -97;
    const YY_REDUCE_MAX = 194;
    static public $yy_reduce_ofst = array(
 /*     0 */    94,   -3, 1048, 1027, 1004,  971,  726,  937,  -61, 1650,
 /*    10 */  1247, 1271, 1294, 1315, 1627, 1472, 1449, 1425, 1383, 1404,
 /*    20 */  1493, 1514, 1603, 1582, 1561, 1538, 1360, 1336, 1182, 1158,
 /*    30 */  1137, 1093, 1116, 1205, 1226, 1671, 1716, 1739, 1692, 1069,
 /*    40 */  1805, 1894, 1760,  653, 1781, 1828, 1917, 1849, 1870,  -32,
 /*    50 */   101,   45,  219,  181,  200,   45,  170,  -80,  115,  130,
 /*    60 */   139,  265,  260,  151,  240,  232,  290,  290,  290,  290,
 /*    70 */   290,  290,  290,  290,  290,  290,  290,  290,  290,  290,
 /*    80 */   290,  290,  290,  290,  290,  290,  290,  290,  290,  290,
 /*    90 */   290,  290,  290,  302,  284,  266,  309,  312,  -47,  -47,
 /*   100 */   318,   20,  353,  346,  -36,  335,  203,  203,  340,  -36,
 /*   110 */   333,  -36,  328,  351,  -47,  -36,  196,  205,   20,  -36,
 /*   120 */   -47,  -47,  217,  -47,  -47,  -47,  228,   20,  -47,  -47,
 /*   130 */   256,  -47,  -47,  401,  389,  402,  402,  401,  401,  401,
 /*   140 */   402,  405,  405,  405,  409,  405,  405,  405,  405,  403,
 /*   150 */   405,  405,  405,  405,  -96,  412,  405,  403,  405,  405,
 /*   160 */   412,  405,  403,  403,  401,  403,  403,  405,  401,  422,
 /*   170 */   395,  430,  -96,  -22,  366,  429,  366,  -96,  -96,  -96,
 /*   180 */   -22,  -22,   75,  102,  193,  -30,  179,  254,  -35,  -82,
 /*   190 */   395,  380,  394,  387,  376,
);
    static public $yyExpectedTokens = array(
        /* 0 */ array(3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 22, 23, 28, 32, 33, ),
        /* 1 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 2 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 3 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 4 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 5 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 6 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 7 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 8 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 9 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 67, 69, ),
        /* 10 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 11 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 12 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 13 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 14 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 15 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 16 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 17 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 18 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 19 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 20 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 21 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 22 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 23 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 24 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 25 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 26 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 27 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 28 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 29 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 30 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 31 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 32 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 33 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 34 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 35 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 36 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 37 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 38 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 39 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 40 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 41 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 42 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 43 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 44 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 45 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 46 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 47 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 48 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 49 */ array(1, 21, 29, 34, 37, 68, ),
        /* 50 */ array(1, 27, 29, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 51 */ array(1, 4, 29, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 52 */ array(1, 29, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 53 */ array(1, 29, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 54 */ array(1, 29, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 55 */ array(1, 29, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 56 */ array(1, 29, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 57 */ array(18, 20, 39, ),
        /* 58 */ array(37, 39, ),
        /* 59 */ array(3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 22, 23, 28, 32, 33, ),
        /* 60 */ array(21, 62, 66, ),
        /* 61 */ array(1, 29, 34, ),
        /* 62 */ array(1, 29, 34, ),
        /* 63 */ array(1, 2, ),
        /* 64 */ array(37, 39, ),
        /* 65 */ array(37, 39, ),
        /* 66 */ array(1, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 67 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 70, ),
        /* 68 */ array(1, 4, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 69 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 67, ),
        /* 70 */ array(1, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 71 */ array(1, 24, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 72 */ array(1, 2, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 73 */ array(1, 30, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 74 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 75 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 76 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 77 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 78 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 79 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 80 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 81 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 82 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 83 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 84 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 85 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 86 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 87 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 88 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 89 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 90 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 91 */ array(40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 92 */ array(40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 93 */ array(6, 7, 8, 9, 10, 15, 16, 17, ),
        /* 94 */ array(18, 22, 23, 28, 32, 33, ),
        /* 95 */ array(12, 69, 70, 71, 72, ),
        /* 96 */ array(18, 20, 35, 39, ),
        /* 97 */ array(29, 31, 34, ),
        /* 98 */ array(1, 31, 56, ),
        /* 99 */ array(1, 30, 56, ),
        /* 100 */ array(29, 31, 34, ),
        /* 101 */ array(19, 21, ),
        /* 102 */ array(29, 34, ),
        /* 103 */ array(18, 37, ),
        /* 104 */ array(18, 20, ),
        /* 105 */ array(29, 34, ),
        /* 106 */ array(18, 20, ),
        /* 107 */ array(18, 20, ),
        /* 108 */ array(29, 34, ),
        /* 109 */ array(18, 20, ),
        /* 110 */ array(29, 34, ),
        /* 111 */ array(18, 20, ),
        /* 112 */ array(1, 21, ),
        /* 113 */ array(29, 34, ),
        /* 114 */ array(1, 56, ),
        /* 115 */ array(18, 20, ),
        /* 116 */ array(20, 39, ),
        /* 117 */ array(20, 39, ),
        /* 118 */ array(19, 21, ),
        /* 119 */ array(18, 20, ),
        /* 120 */ array(1, ),
        /* 121 */ array(1, ),
        /* 122 */ array(21, ),
        /* 123 */ array(1, ),
        /* 124 */ array(1, ),
        /* 125 */ array(1, ),
        /* 126 */ array(1, ),
        /* 127 */ array(21, ),
        /* 128 */ array(1, ),
        /* 129 */ array(1, ),
        /* 130 */ array(1, ),
        /* 131 */ array(1, ),
        /* 132 */ array(),
        /* 133 */ array(4, 24, 26, 27, 29, 30, 31, 34, 36, 37, 38, 56, 67, 68, 70, ),
        /* 134 */ array(12, 69, 70, 71, 72, ),
        /* 135 */ array(2, 18, 20, 68, ),
        /* 136 */ array(2, 18, 20, 68, ),
        /* 137 */ array(37, 62, 67, 68, ),
        /* 138 */ array(31, 37, 68, ),
        /* 139 */ array(19, 37, 68, ),
        /* 140 */ array(18, 20, 68, ),
        /* 141 */ array(29, 34, ),
        /* 142 */ array(29, 34, ),
        /* 143 */ array(29, 34, ),
        /* 144 */ array(25, 39, ),
        /* 145 */ array(29, 34, ),
        /* 146 */ array(29, 34, ),
        /* 147 */ array(29, 34, ),
        /* 148 */ array(29, 34, ),
        /* 149 */ array(62, 66, ),
        /* 150 */ array(29, 34, ),
        /* 151 */ array(29, 34, ),
        /* 152 */ array(29, 34, ),
        /* 153 */ array(29, 34, ),
        /* 154 */ array(1, 4, ),
        /* 155 */ array(37, 68, ),
        /* 156 */ array(29, 34, ),
        /* 157 */ array(62, 66, ),
        /* 158 */ array(29, 34, ),
        /* 159 */ array(29, 34, ),
        /* 160 */ array(37, 68, ),
        /* 161 */ array(29, 34, ),
        /* 162 */ array(62, 66, ),
        /* 163 */ array(62, 66, ),
        /* 164 */ array(37, 68, ),
        /* 165 */ array(62, 66, ),
        /* 166 */ array(62, 66, ),
        /* 167 */ array(29, 34, ),
        /* 168 */ array(37, 68, ),
        /* 169 */ array(16, ),
        /* 170 */ array(64, ),
        /* 171 */ array(39, ),
        /* 172 */ array(1, ),
        /* 173 */ array(21, ),
        /* 174 */ array(2, ),
        /* 175 */ array(39, ),
        /* 176 */ array(2, ),
        /* 177 */ array(1, ),
        /* 178 */ array(1, ),
        /* 179 */ array(1, ),
        /* 180 */ array(21, ),
        /* 181 */ array(21, ),
        /* 182 */ array(29, ),
        /* 183 */ array(39, ),
        /* 184 */ array(39, ),
        /* 185 */ array(37, ),
        /* 186 */ array(29, ),
        /* 187 */ array(),
        /* 188 */ array(),
        /* 189 */ array(),
        /* 190 */ array(),
        /* 191 */ array(),
        /* 192 */ array(),
        /* 193 */ array(),
        /* 194 */ array(),
        /* 195 */ array(18, 20, 37, ),
        /* 196 */ array(36, 38, ),
        /* 197 */ array(36, 38, ),
        /* 198 */ array(20, 64, ),
        /* 199 */ array(18, 20, ),
        /* 200 */ array(36, 38, ),
        /* 201 */ array(24, 36, ),
        /* 202 */ array(36, 38, ),
        /* 203 */ array(36, 67, ),
        /* 204 */ array(4, ),
        /* 205 */ array(58, ),
        /* 206 */ array(20, ),
        /* 207 */ array(19, ),
        /* 208 */ array(19, ),
        /* 209 */ array(67, ),
        /* 210 */ array(20, ),
        /* 211 */ array(26, ),
        /* 212 */ array(4, ),
        /* 213 */ array(4, ),
        /* 214 */ array(38, ),
        /* 215 */ array(20, ),
        /* 216 */ array(65, ),
        /* 217 */ array(37, ),
        /* 218 */ array(20, ),
        /* 219 */ array(20, ),
        /* 220 */ array(20, ),
        /* 221 */ array(70, ),
        /* 222 */ array(35, ),
        /* 223 */ array(64, ),
        /* 224 */ array(20, ),
        /* 225 */ array(20, ),
        /* 226 */ array(20, ),
        /* 227 */ array(19, ),
        /* 228 */ array(65, ),
        /* 229 */ array(20, ),
        /* 230 */ array(20, ),
        /* 231 */ array(),
        /* 232 */ array(),
        /* 233 */ array(),
        /* 234 */ array(),
        /* 235 */ array(),
        /* 236 */ array(),
        /* 237 */ array(),
        /* 238 */ array(),
        /* 239 */ array(),
        /* 240 */ array(),
        /* 241 */ array(),
        /* 242 */ array(),
        /* 243 */ array(),
        /* 244 */ array(),
        /* 245 */ array(),
        /* 246 */ array(),
        /* 247 */ array(),
        /* 248 */ array(),
        /* 249 */ array(),
        /* 250 */ array(),
        /* 251 */ array(),
        /* 252 */ array(),
        /* 253 */ array(),
        /* 254 */ array(),
        /* 255 */ array(),
        /* 256 */ array(),
        /* 257 */ array(),
        /* 258 */ array(),
        /* 259 */ array(),
        /* 260 */ array(),
        /* 261 */ array(),
        /* 262 */ array(),
        /* 263 */ array(),
        /* 264 */ array(),
        /* 265 */ array(),
        /* 266 */ array(),
        /* 267 */ array(),
        /* 268 */ array(),
        /* 269 */ array(),
        /* 270 */ array(),
        /* 271 */ array(),
        /* 272 */ array(),
        /* 273 */ array(),
        /* 274 */ array(),
        /* 275 */ array(),
        /* 276 */ array(),
        /* 277 */ array(),
        /* 278 */ array(),
        /* 279 */ array(),
        /* 280 */ array(),
        /* 281 */ array(),
        /* 282 */ array(),
        /* 283 */ array(),
        /* 284 */ array(),
        /* 285 */ array(),
        /* 286 */ array(),
        /* 287 */ array(),
        /* 288 */ array(),
        /* 289 */ array(),
        /* 290 */ array(),
        /* 291 */ array(),
        /* 292 */ array(),
        /* 293 */ array(),
        /* 294 */ array(),
        /* 295 */ array(),
        /* 296 */ array(),
        /* 297 */ array(),
        /* 298 */ array(),
        /* 299 */ array(),
        /* 300 */ array(),
        /* 301 */ array(),
        /* 302 */ array(),
        /* 303 */ array(),
        /* 304 */ array(),
        /* 305 */ array(),
        /* 306 */ array(),
        /* 307 */ array(),
        /* 308 */ array(),
        /* 309 */ array(),
        /* 310 */ array(),
        /* 311 */ array(),
        /* 312 */ array(),
        /* 313 */ array(),
        /* 314 */ array(),
        /* 315 */ array(),
        /* 316 */ array(),
        /* 317 */ array(),
        /* 318 */ array(),
        /* 319 */ array(),
        /* 320 */ array(),
        /* 321 */ array(),
        /* 322 */ array(),
);
    static public $yy_default = array(
 /*     0 */   326,  484,  468,  502,  468,  502,  468,  468,  502,  502,
 /*    10 */   502,  502,  502,  502,  502,  502,  502,  502,  502,  502,
 /*    20 */   502,  502,  502,  502,  502,  502,  502,  502,  502,  502,
 /*    30 */   502,  502,  502,  502,  502,  502,  502,  502,  502,  502,
 /*    40 */   502,  502,  502,  502,  502,  502,  502,  502,  502,  375,
 /*    50 */   375,  502,  375,  375,  375,  375,  375,  502,  502,  323,
 /*    60 */   479,  375,  375,  367,  502,  502,  502,  502,  502,  502,
 /*    70 */   502,  502,  502,  379,  392,  485,  396,  383,  403,  380,
 /*    80 */   400,  404,  379,  467,  487,  395,  399,  377,  466,  394,
 /*    90 */   486,  409,  410,  502,  499,  502,  502,  375,  385,  385,
 /*   100 */   375,  431,  375,  438,  502,  375,  451,  450,  375,  502,
 /*   110 */   375,  502,  369,  375,  385,  502,  502,  502,  431,  502,
 /*   120 */   390,  393,  476,  388,  413,  412,  371,  431,  414,  389,
 /*   130 */   502,  407,  475,  387,  502,  449,  449,  419,  419,  378,
 /*   140 */   449,  352,  361,  360,  502,  354,  357,  362,  358,  459,
 /*   150 */   363,  353,  359,  364,  502,  406,  365,  434,  356,  355,
 /*   160 */   427,  366,  436,  460,  419,  435,  457,  351,  405,  343,
 /*   170 */   438,  502,  391,  477,  470,  502,  469,  430,  372,  370,
 /*   180 */   480,  454,  501,  502,  502,  438,  501,  438,  474,  438,
 /*   190 */   438,  438,  474,  474,  438,  449,  502,  502,  502,  449,
 /*   200 */   502,  502,  502,  502,  411,  421,  502,  416,  502,  502,
 /*   210 */   502,  381,  502,  502,  502,  502,  502,  478,  502,  502,
 /*   220 */   502,  411,  502,  439,  502,  502,  502,  502,  502,  502,
 /*   230 */   502,  420,  453,  428,  422,  387,  452,  349,  456,  437,
 /*   240 */   464,  440,  429,  348,  424,  426,  350,  376,  423,  448,
 /*   250 */   327,  471,  472,  384,  473,  368,  324,  325,  374,  373,
 /*   260 */   411,  415,  418,  425,  441,  329,  500,  382,  416,  328,
 /*   270 */   417,  386,  443,  446,  444,  482,  483,  335,  493,  339,
 /*   280 */   489,  490,  447,  445,  481,  492,  337,  497,  496,  495,
 /*   290 */   455,  498,  491,  494,  336,  338,  408,  334,  488,  397,
 /*   300 */   345,  398,  331,  344,  330,  346,  462,  421,  463,  347,
 /*   310 */   342,  332,  433,  340,  333,  465,  432,  458,  401,  461,
 /*   320 */   402,  341,  442,
);
    const YYNOCODE = 115;
    const YYSTACKDEPTH = 500;
    const YYNSTATE = 323;
    const YYNRULE = 179;
    const YYERRORSYMBOL = 73;
    const YYERRSYMDT = 'yy0';
    const YYFALLBACK = 0;
    public static $yyFallback = array(
    );
    public static function Trace($TraceFILE, $zTracePrompt)
    {
        if (!$TraceFILE) {
            $zTracePrompt = 0;
        } elseif (!$zTracePrompt) {
            $TraceFILE = 0;
        }
        self::$yyTraceFILE = $TraceFILE;
        self::$yyTracePrompt = $zTracePrompt;
    }

    public static function PrintTrace()
    {
        self::$yyTraceFILE = fopen('php://output', 'w');
        self::$yyTracePrompt = '<br>';
    }

    public static $yyTraceFILE;
    public static $yyTracePrompt;
    public $yyidx;                    /* Index of top element in stack */
    public $yyerrcnt;                 /* Shifts left before out of the error */
    public $yystack = array();  /* The parser's stack */

    public $yyTokenName = array(
  '$',             'VERT',          'COLON',         'TEMPLATEINIT',
  'RDEL',          'COMMENT',       'PHPSTARTTAG',   'PHPENDTAG',   
  'ASPSTARTTAG',   'ASPENDTAG',     'FAKEPHPSTARTTAG',  'XMLTAG',      
  'TEXT',          'STRIPON',       'STRIPOFF',      'LITERALSTART',
  'LITERALEND',    'LITERAL',       'LDEL',          'EQUAL',       
  'ID',            'PTR',           'LDELIF',        'LDELFOR',     
  'SEMICOLON',     'IDINCDEC',      'TO',            'STEP',        
  'LDELFOREACH',   'SPACE',         'AS',            'APTR',        
  'LDELSETFILTER',  'LDELSLASH',     'ATTR',          'INTEGER',     
  'COMMA',         'OPENP',         'CLOSEP',        'DOLLAR',      
  'MATH',          'UNIMATH',       'ANDSYM',        'IFCOND',      
  'ISIN',          'LOP',           'ISDIVBY',       'ISNOTDIVBY',  
  'ISEVEN',        'ISNOTEVEN',     'ISEVENBY',      'ISNOTEVENBY', 
  'ISODD',         'ISNOTODD',      'ISODDBY',       'ISNOTODDBY',  
  'INSTANCEOF',    'NAMESPACE',     'QMARK',         'NOT',         
  'TYPECAST',      'NUMBER',        'DOT',           'SINGLEQUOTESTRING',
  'AT',            'HATCH',         'OPENB',         'CLOSEB',      
  'DOUBLECOLON',   'QUOTE',         'BACKTICK',      'DOLLARID',    
  'DQTAG',         'error',         'start',         'template',    
  'template_element',  'smartytag',     'literal',       'literal_elements',
  'literal_element',  'expr',          'attributes',    'varindexed',  
  'modifierlist',  'statement',     'statements',    'optspace',    
  'varvar',        'value',         'modparameters',  'attribute',   
  'ternary',       'ldelexprrdel',  'variable',      'array',       
  'function',      'doublequoted_with_quotes',  'static',        'object',      
  'arrayindex',    'indexdef',      'static_class_access',  'varvarele',   
  'objectchain',   'objectelement',  'method',        'params',      
  'modifier',      'modparameter',  'arrayelements',  'arrayelement',
  'doublequoted',  'doublequotedcontent',
    );

    public static $yyRuleName = array(
 /*   0 */ "start ::= template",
 /*   1 */ "template ::= template_element",
 /*   2 */ "template ::= template template_element",
 /*   3 */ "template ::=",
 /*   4 */ "template_element ::= TEMPLATEINIT",
 /*   5 */ "template_element ::= smartytag RDEL",
 /*   6 */ "template_element ::= COMMENT",
 /*   7 */ "template_element ::= literal",
 /*   8 */ "template_element ::= PHPSTARTTAG",
 /*   9 */ "template_element ::= PHPENDTAG",
 /*  10 */ "template_element ::= ASPSTARTTAG",
 /*  11 */ "template_element ::= ASPENDTAG",
 /*  12 */ "template_element ::= FAKEPHPSTARTTAG",
 /*  13 */ "template_element ::= XMLTAG",
 /*  14 */ "template_element ::= TEXT",
 /*  15 */ "template_element ::= STRIPON",
 /*  16 */ "template_element ::= STRIPOFF",
 /*  17 */ "literal ::= LITERALSTART LITERALEND",
 /*  18 */ "literal ::= LITERALSTART literal_elements LITERALEND",
 /*  19 */ "literal_elements ::= literal_elements literal_element",
 /*  20 */ "literal_elements ::=",
 /*  21 */ "literal_element ::= literal",
 /*  22 */ "literal_element ::= LITERAL",
 /*  23 */ "literal_element ::= PHPSTARTTAG",
 /*  24 */ "literal_element ::= FAKEPHPSTARTTAG",
 /*  25 */ "literal_element ::= PHPENDTAG",
 /*  26 */ "literal_element ::= ASPSTARTTAG",
 /*  27 */ "literal_element ::= ASPENDTAG",
 /*  28 */ "smartytag ::= LDEL expr attributes",
 /*  29 */ "smartytag ::= LDEL varindexed EQUAL expr attributes",
 /*  30 */ "smartytag ::= LDEL ID attributes",
 /*  31 */ "smartytag ::= LDEL ID modifierlist attributes",
 /*  32 */ "smartytag ::= LDEL ID PTR ID modifierlist attributes",
 /*  33 */ "smartytag ::= LDELIF expr attributes",
 /*  34 */ "smartytag ::= LDELIF statement attributes",
 /*  35 */ "smartytag ::= LDELFOR statements SEMICOLON optspace expr SEMICOLON optspace varvar EQUAL expr attributes",
 /*  36 */ "smartytag ::= LDELFOR statements SEMICOLON optspace expr SEMICOLON optspace IDINCDEC attributes",
 /*  37 */ "smartytag ::= LDELFOR statement TO expr attributes",
 /*  38 */ "smartytag ::= LDELFOR statement TO expr STEP expr attributes",
 /*  39 */ "smartytag ::= LDELFOREACH attributes",
 /*  40 */ "smartytag ::= LDELFOREACH SPACE value AS varvar attributes",
 /*  41 */ "smartytag ::= LDELFOREACH SPACE value AS varvar APTR varvar attributes",
 /*  42 */ "smartytag ::= LDELFOREACH SPACE expr AS varvar attributes",
 /*  43 */ "smartytag ::= LDELFOREACH SPACE expr AS varvar APTR varvar attributes",
 /*  44 */ "smartytag ::= LDELSETFILTER ID modparameters",
 /*  45 */ "smartytag ::= LDELSETFILTER ID modparameters modifierlist RDEL",
 /*  46 */ "smartytag ::= LDELSLASH ID",
 /*  47 */ "smartytag ::= LDELSLASH ID modifierlist",
 /*  48 */ "smartytag ::= LDELSLASH ID PTR ID",
 /*  49 */ "smartytag ::= LDELSLASH ID PTR ID modifierlist",
 /*  50 */ "attributes ::= attributes attribute",
 /*  51 */ "attributes ::= attribute",
 /*  52 */ "attributes ::=",
 /*  53 */ "attribute ::= SPACE ID EQUAL ID",
 /*  54 */ "attribute ::= ATTR expr",
 /*  55 */ "attribute ::= SPACE ID",
 /*  56 */ "attribute ::= SPACE expr",
 /*  57 */ "attribute ::= SPACE INTEGER EQUAL expr",
 /*  58 */ "statements ::= statement",
 /*  59 */ "statements ::= statements COMMA statement",
 /*  60 */ "statement ::= varindexed EQUAL expr",
 /*  61 */ "statement ::= OPENP statement CLOSEP",
 /*  62 */ "expr ::= value",
 /*  63 */ "expr ::= ternary",
 /*  64 */ "expr ::= DOLLAR ID COLON ID",
 /*  65 */ "expr ::= expr MATH value",
 /*  66 */ "expr ::= expr UNIMATH value",
 /*  67 */ "expr ::= expr ANDSYM value",
 /*  68 */ "expr ::= expr modifierlist",
 /*  69 */ "expr ::= expr IFCOND expr",
 /*  70 */ "expr ::= expr ISIN value",
 /*  71 */ "expr ::= expr LOP expr",
 /*  72 */ "expr ::= expr ISDIVBY expr",
 /*  73 */ "expr ::= expr ISNOTDIVBY expr",
 /*  74 */ "expr ::= expr ISEVEN",
 /*  75 */ "expr ::= expr ISNOTEVEN",
 /*  76 */ "expr ::= expr ISEVENBY expr",
 /*  77 */ "expr ::= expr ISNOTEVENBY expr",
 /*  78 */ "expr ::= expr ISODD",
 /*  79 */ "expr ::= expr ISNOTODD",
 /*  80 */ "expr ::= expr ISODDBY expr",
 /*  81 */ "expr ::= expr ISNOTODDBY expr",
 /*  82 */ "expr ::= value INSTANCEOF ID",
 /*  83 */ "expr ::= value INSTANCEOF NAMESPACE",
 /*  84 */ "expr ::= value INSTANCEOF value",
 /*  85 */ "ldelexprrdel ::= LDEL expr RDEL",
 /*  86 */ "ternary ::= OPENP expr CLOSEP QMARK DOLLAR ID COLON expr",
 /*  87 */ "ternary ::= OPENP expr CLOSEP QMARK expr COLON expr",
 /*  88 */ "value ::= variable",
 /*  89 */ "value ::= UNIMATH value",
 /*  90 */ "value ::= NOT value",
 /*  91 */ "value ::= TYPECAST value",
 /*  92 */ "value ::= NUMBER",
 /*  93 */ "value ::= INTEGER",
 /*  94 */ "value ::= array",
 /*  95 */ "value ::= DOT INTEGER",
 /*  96 */ "value ::= ID",
 /*  97 */ "value ::= function",
 /*  98 */ "value ::= OPENP expr CLOSEP",
 /*  99 */ "value ::= SINGLEQUOTESTRING",
 /* 100 */ "value ::= doublequoted_with_quotes",
 /* 101 */ "value ::= IDINCDEC",
 /* 102 */ "value ::= ID static",
 /* 103 */ "value ::= NAMESPACE static",
 /* 104 */ "value ::= NAMESPACE",
 /* 105 */ "value ::= DOLLAR ID static",
 /* 106 */ "value ::= smartytag",
 /* 107 */ "value ::= value modifierlist",
 /* 108 */ "variable ::= varindexed",
 /* 109 */ "variable ::= varvar AT ID",
 /* 110 */ "variable ::= object",
 /* 111 */ "variable ::= HATCH ID HATCH arrayindex",
 /* 112 */ "variable ::= HATCH varindexed HATCH arrayindex",
 /* 113 */ "varindexed ::= varvar arrayindex",
 /* 114 */ "arrayindex ::= arrayindex indexdef",
 /* 115 */ "arrayindex ::=",
 /* 116 */ "indexdef ::= DOT varvar",
 /* 117 */ "indexdef ::= DOT varvar AT ID",
 /* 118 */ "indexdef ::= DOT ID",
 /* 119 */ "indexdef ::= DOT INTEGER",
 /* 120 */ "indexdef ::= DOT ldelexprrdel",
 /* 121 */ "indexdef ::= OPENB ID CLOSEB",
 /* 122 */ "indexdef ::= OPENB ID DOT ID CLOSEB",
 /* 123 */ "indexdef ::= OPENB expr CLOSEB",
 /* 124 */ "indexdef ::= OPENB CLOSEB",
 /* 125 */ "static ::= DOUBLECOLON static_class_access",
 /* 126 */ "varvar ::= DOLLAR ID",
 /* 127 */ "varvar ::= DOLLAR varvarele",
 /* 128 */ "varvarele ::= varvarele varvarele",
 /* 129 */ "varvarele ::= ID",
 /* 130 */ "varvarele ::= ldelexprrdel",
 /* 131 */ "object ::= varindexed objectchain",
 /* 132 */ "objectchain ::= objectelement",
 /* 133 */ "objectchain ::= objectchain objectelement",
 /* 134 */ "objectelement ::= PTR ID arrayindex",
 /* 135 */ "objectelement ::= PTR varindexed",
 /* 136 */ "objectelement ::= PTR ldelexprrdel arrayindex",
 /* 137 */ "objectelement ::= PTR ID ldelexprrdel arrayindex",
 /* 138 */ "objectelement ::= PTR method",
 /* 139 */ "function ::= ID OPENP params CLOSEP",
 /* 140 */ "function ::= NAMESPACE OPENP params CLOSEP",
 /* 141 */ "method ::= ID OPENP params CLOSEP",
 /* 142 */ "method ::= DOLLAR ID OPENP params CLOSEP",
 /* 143 */ "params ::= params COMMA expr",
 /* 144 */ "params ::= expr",
 /* 145 */ "params ::=",
 /* 146 */ "modifierlist ::= modifierlist modifier modparameters",
 /* 147 */ "modifierlist ::= modifier modparameters",
 /* 148 */ "modifier ::= VERT AT ID",
 /* 149 */ "modifier ::= VERT ID",
 /* 150 */ "modparameters ::= modparameters modparameter",
 /* 151 */ "modparameters ::=",
 /* 152 */ "modparameter ::= COLON value",
 /* 153 */ "static_class_access ::= method",
 /* 154 */ "static_class_access ::= method objectchain",
 /* 155 */ "static_class_access ::= ID",
 /* 156 */ "static_class_access ::= DOLLAR ID arrayindex",
 /* 157 */ "static_class_access ::= DOLLAR ID arrayindex objectchain",
 /* 158 */ "array ::= OPENB arrayelements CLOSEB",
 /* 159 */ "arrayelements ::= arrayelement",
 /* 160 */ "arrayelements ::= arrayelements COMMA arrayelement",
 /* 161 */ "arrayelements ::=",
 /* 162 */ "arrayelement ::= value APTR expr",
 /* 163 */ "arrayelement ::= ID APTR expr",
 /* 164 */ "arrayelement ::= expr",
 /* 165 */ "doublequoted_with_quotes ::= QUOTE QUOTE",
 /* 166 */ "doublequoted_with_quotes ::= QUOTE doublequoted QUOTE",
 /* 167 */ "doublequoted ::= doublequoted doublequotedcontent",
 /* 168 */ "doublequoted ::= doublequotedcontent",
 /* 169 */ "doublequotedcontent ::= BACKTICK variable BACKTICK",
 /* 170 */ "doublequotedcontent ::= BACKTICK expr BACKTICK",
 /* 171 */ "doublequotedcontent ::= DOLLARID",
 /* 172 */ "doublequotedcontent ::= DQTAG LDEL variable RDEL",
 /* 173 */ "doublequotedcontent ::= DQTAG ldelexprrdel",
 /* 174 */ "doublequotedcontent ::= DQTAG smartytag RDEL",
 /* 175 */ "doublequotedcontent ::= TEXT",
 /* 176 */ "doublequotedcontent ::= DQTAG",
 /* 177 */ "optspace ::= SPACE",
 /* 178 */ "optspace ::=",
    );

    public function tokenName($tokenType)
    {
        if ($tokenType === 0) {
            return 'End of Input';
        }
        if ($tokenType > 0 && $tokenType < count($this->yyTokenName)) {
            return $this->yyTokenName[$tokenType];
        } else {
            return "Unknown";
        }
    }

    public static function yy_destructor($yymajor, $yypminor)
    {
        switch ($yymajor) {
            default:  break;   /* If no destructor action specified: do nothing */
        }
    }

    public function yy_pop_parser_stack()
    {
        if (!count($this->yystack)) {
            return;
        }
        $yytos = array_pop($this->yystack);
        if (self::$yyTraceFILE && $this->yyidx >= 0) {
            fwrite(self::$yyTraceFILE,
                self::$yyTracePrompt . 'Popping ' . $this->yyTokenName[$yytos->major] .
                    "\n");
        }
        $yymajor = $yytos->major;
        self::yy_destructor($yymajor, $yytos->minor);
        $this->yyidx--;

        return $yymajor;
    }

    public function __destruct()
    {
        while ($this->yystack !== Array()) {
            $this->yy_pop_parser_stack();
        }
        if (is_resource(self::$yyTraceFILE)) {
            fclose(self::$yyTraceFILE);
        }
    }

    public function yy_get_expected_tokens($token)
    {
        $state = $this->yystack[$this->yyidx]->stateno;
        $expected = self::$yyExpectedTokens[$state];
        if (in_array($token, self::$yyExpectedTokens[$state], true)) {
            return $expected;
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return array_unique($expected);
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[$yyruleno]['rhs'];
                    $nextstate = $this->yy_find_reduce_action(
                        $this->yystack[$this->yyidx]->stateno,
                        self::$yyRuleInfo[$yyruleno]['lhs']);
                    if (isset(self::$yyExpectedTokens[$nextstate])) {
                $expected = array_merge($expected, self::$yyExpectedTokens[$nextstate]);
                            if (in_array($token,
                                  self::$yyExpectedTokens[$nextstate], true)) {
                            $this->yyidx = $yyidx;
                            $this->yystack = $stack;

                            return array_unique($expected);
                        }
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[$yyruleno]['lhs'];
                        $this->yystack[$this->yyidx] = $x;
                        continue 2;
                    } elseif ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return array_unique($expected);
                    } elseif ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return $expected;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
    $this->yyidx = $yyidx;
    $this->yystack = $stack;

        return array_unique($expected);
    }

    public function yy_is_expected_token($token)
    {
        if ($token === 0) {
            return true; // 0 is not part of this
        }
        $state = $this->yystack[$this->yyidx]->stateno;
        if (in_array($token, self::$yyExpectedTokens[$state], true)) {
            return true;
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return true;
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[$yyruleno]['rhs'];
                    $nextstate = $this->yy_find_reduce_action(
                        $this->yystack[$this->yyidx]->stateno,
                        self::$yyRuleInfo[$yyruleno]['lhs']);
                    if (isset(self::$yyExpectedTokens[$nextstate]) &&
                          in_array($token, self::$yyExpectedTokens[$nextstate], true)) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;

                        return true;
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[$yyruleno]['lhs'];
                        $this->yystack[$this->yyidx] = $x;
                        continue 2;
                    } elseif ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        if (!$token) {
                            // end of input: this is valid
                            return true;
                        }
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return false;
                    } elseif ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return true;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
        $this->yyidx = $yyidx;
        $this->yystack = $stack;

        return true;
    }

   public function yy_find_shift_action($iLookAhead)
    {
        $stateno = $this->yystack[$this->yyidx]->stateno;

        /* if ($this->yyidx < 0) return self::YY_NO_ACTION;  */
        if (!isset(self::$yy_shift_ofst[$stateno])) {
            // no shift actions
            return self::$yy_default[$stateno];
        }
        $i = self::$yy_shift_ofst[$stateno];
        if ($i === self::YY_SHIFT_USE_DFLT) {
            return self::$yy_default[$stateno];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
              self::$yy_lookahead[$i] != $iLookAhead) {
            if (count(self::$yyFallback) && $iLookAhead < count(self::$yyFallback)
                   && ($iFallback = self::$yyFallback[$iLookAhead]) != 0) {
                if (self::$yyTraceFILE) {
                    fwrite(self::$yyTraceFILE, self::$yyTracePrompt . "FALLBACK " .
                        $this->yyTokenName[$iLookAhead] . " => " .
                        $this->yyTokenName[$iFallback] . "\n");
                }

                return $this->yy_find_shift_action($iFallback);
            }

            return self::$yy_default[$stateno];
        } else {
            return self::$yy_action[$i];
        }
    }

    public function yy_find_reduce_action($stateno, $iLookAhead)
    {
        /* $stateno = $this->yystack[$this->yyidx]->stateno; */

        if (!isset(self::$yy_reduce_ofst[$stateno])) {
            return self::$yy_default[$stateno];
        }
        $i = self::$yy_reduce_ofst[$stateno];
        if ($i == self::YY_REDUCE_USE_DFLT) {
            return self::$yy_default[$stateno];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
              self::$yy_lookahead[$i] != $iLookAhead) {
            return self::$yy_default[$stateno];
        } else {
            return self::$yy_action[$i];
        }
    }

    public function yy_shift($yyNewState, $yyMajor, $yypMinor)
    {
        $this->yyidx++;
        if ($this->yyidx >= self::YYSTACKDEPTH) {
            $this->yyidx--;
            if (self::$yyTraceFILE) {
                fprintf(self::$yyTraceFILE, "%sStack Overflow!\n", self::$yyTracePrompt);
            }
            while ($this->yyidx >= 0) {
                $this->yy_pop_parser_stack();
            }
#line 85 "Smarty_Compiler_Template_Php_Parser.y"

    $this->internalError = true;
    $this->compiler->error("Stack overflow in template parser");
#line 1531 "Smarty_Compiler_Template_Php_Parser.php"

            return;
        }
        $yytos = new TP_yyStackEntry;
        $yytos->stateno = $yyNewState;
        $yytos->major = $yyMajor;
        $yytos->minor = $yypMinor;
        array_push($this->yystack, $yytos);
        if (self::$yyTraceFILE && $this->yyidx > 0) {
            fprintf(self::$yyTraceFILE, "%sShift %d\n", self::$yyTracePrompt,
                $yyNewState);
            fprintf(self::$yyTraceFILE, "%sStack:", self::$yyTracePrompt);
            for ($i = 1; $i <= $this->yyidx; $i++) {
                fprintf(self::$yyTraceFILE, " %s",
                    $this->yyTokenName[$this->yystack[$i]->major]);
            }
            fwrite(self::$yyTraceFILE,"\n");
        }
    }

    public static $yyRuleInfo = array(
  array( 'lhs' => 74, 'rhs' => 1 ),
  array( 'lhs' => 75, 'rhs' => 1 ),
  array( 'lhs' => 75, 'rhs' => 2 ),
  array( 'lhs' => 75, 'rhs' => 0 ),
  array( 'lhs' => 76, 'rhs' => 1 ),
  array( 'lhs' => 76, 'rhs' => 2 ),
  array( 'lhs' => 76, 'rhs' => 1 ),
  array( 'lhs' => 76, 'rhs' => 1 ),
  array( 'lhs' => 76, 'rhs' => 1 ),
  array( 'lhs' => 76, 'rhs' => 1 ),
  array( 'lhs' => 76, 'rhs' => 1 ),
  array( 'lhs' => 76, 'rhs' => 1 ),
  array( 'lhs' => 76, 'rhs' => 1 ),
  array( 'lhs' => 76, 'rhs' => 1 ),
  array( 'lhs' => 76, 'rhs' => 1 ),
  array( 'lhs' => 76, 'rhs' => 1 ),
  array( 'lhs' => 76, 'rhs' => 1 ),
  array( 'lhs' => 78, 'rhs' => 2 ),
  array( 'lhs' => 78, 'rhs' => 3 ),
  array( 'lhs' => 79, 'rhs' => 2 ),
  array( 'lhs' => 79, 'rhs' => 0 ),
  array( 'lhs' => 80, 'rhs' => 1 ),
  array( 'lhs' => 80, 'rhs' => 1 ),
  array( 'lhs' => 80, 'rhs' => 1 ),
  array( 'lhs' => 80, 'rhs' => 1 ),
  array( 'lhs' => 80, 'rhs' => 1 ),
  array( 'lhs' => 80, 'rhs' => 1 ),
  array( 'lhs' => 80, 'rhs' => 1 ),
  array( 'lhs' => 77, 'rhs' => 3 ),
  array( 'lhs' => 77, 'rhs' => 5 ),
  array( 'lhs' => 77, 'rhs' => 3 ),
  array( 'lhs' => 77, 'rhs' => 4 ),
  array( 'lhs' => 77, 'rhs' => 6 ),
  array( 'lhs' => 77, 'rhs' => 3 ),
  array( 'lhs' => 77, 'rhs' => 3 ),
  array( 'lhs' => 77, 'rhs' => 11 ),
  array( 'lhs' => 77, 'rhs' => 9 ),
  array( 'lhs' => 77, 'rhs' => 5 ),
  array( 'lhs' => 77, 'rhs' => 7 ),
  array( 'lhs' => 77, 'rhs' => 2 ),
  array( 'lhs' => 77, 'rhs' => 6 ),
  array( 'lhs' => 77, 'rhs' => 8 ),
  array( 'lhs' => 77, 'rhs' => 6 ),
  array( 'lhs' => 77, 'rhs' => 8 ),
  array( 'lhs' => 77, 'rhs' => 3 ),
  array( 'lhs' => 77, 'rhs' => 5 ),
  array( 'lhs' => 77, 'rhs' => 2 ),
  array( 'lhs' => 77, 'rhs' => 3 ),
  array( 'lhs' => 77, 'rhs' => 4 ),
  array( 'lhs' => 77, 'rhs' => 5 ),
  array( 'lhs' => 82, 'rhs' => 2 ),
  array( 'lhs' => 82, 'rhs' => 1 ),
  array( 'lhs' => 82, 'rhs' => 0 ),
  array( 'lhs' => 91, 'rhs' => 4 ),
  array( 'lhs' => 91, 'rhs' => 2 ),
  array( 'lhs' => 91, 'rhs' => 2 ),
  array( 'lhs' => 91, 'rhs' => 2 ),
  array( 'lhs' => 91, 'rhs' => 4 ),
  array( 'lhs' => 86, 'rhs' => 1 ),
  array( 'lhs' => 86, 'rhs' => 3 ),
  array( 'lhs' => 85, 'rhs' => 3 ),
  array( 'lhs' => 85, 'rhs' => 3 ),
  array( 'lhs' => 81, 'rhs' => 1 ),
  array( 'lhs' => 81, 'rhs' => 1 ),
  array( 'lhs' => 81, 'rhs' => 4 ),
  array( 'lhs' => 81, 'rhs' => 3 ),
  array( 'lhs' => 81, 'rhs' => 3 ),
  array( 'lhs' => 81, 'rhs' => 3 ),
  array( 'lhs' => 81, 'rhs' => 2 ),
  array( 'lhs' => 81, 'rhs' => 3 ),
  array( 'lhs' => 81, 'rhs' => 3 ),
  array( 'lhs' => 81, 'rhs' => 3 ),
  array( 'lhs' => 81, 'rhs' => 3 ),
  array( 'lhs' => 81, 'rhs' => 3 ),
  array( 'lhs' => 81, 'rhs' => 2 ),
  array( 'lhs' => 81, 'rhs' => 2 ),
  array( 'lhs' => 81, 'rhs' => 3 ),
  array( 'lhs' => 81, 'rhs' => 3 ),
  array( 'lhs' => 81, 'rhs' => 2 ),
  array( 'lhs' => 81, 'rhs' => 2 ),
  array( 'lhs' => 81, 'rhs' => 3 ),
  array( 'lhs' => 81, 'rhs' => 3 ),
  array( 'lhs' => 81, 'rhs' => 3 ),
  array( 'lhs' => 81, 'rhs' => 3 ),
  array( 'lhs' => 81, 'rhs' => 3 ),
  array( 'lhs' => 93, 'rhs' => 3 ),
  array( 'lhs' => 92, 'rhs' => 8 ),
  array( 'lhs' => 92, 'rhs' => 7 ),
  array( 'lhs' => 89, 'rhs' => 1 ),
  array( 'lhs' => 89, 'rhs' => 2 ),
  array( 'lhs' => 89, 'rhs' => 2 ),
  array( 'lhs' => 89, 'rhs' => 2 ),
  array( 'lhs' => 89, 'rhs' => 1 ),
  array( 'lhs' => 89, 'rhs' => 1 ),
  array( 'lhs' => 89, 'rhs' => 1 ),
  array( 'lhs' => 89, 'rhs' => 2 ),
  array( 'lhs' => 89, 'rhs' => 1 ),
  array( 'lhs' => 89, 'rhs' => 1 ),
  array( 'lhs' => 89, 'rhs' => 3 ),
  array( 'lhs' => 89, 'rhs' => 1 ),
  array( 'lhs' => 89, 'rhs' => 1 ),
  array( 'lhs' => 89, 'rhs' => 1 ),
  array( 'lhs' => 89, 'rhs' => 2 ),
  array( 'lhs' => 89, 'rhs' => 2 ),
  array( 'lhs' => 89, 'rhs' => 1 ),
  array( 'lhs' => 89, 'rhs' => 3 ),
  array( 'lhs' => 89, 'rhs' => 1 ),
  array( 'lhs' => 89, 'rhs' => 2 ),
  array( 'lhs' => 94, 'rhs' => 1 ),
  array( 'lhs' => 94, 'rhs' => 3 ),
  array( 'lhs' => 94, 'rhs' => 1 ),
  array( 'lhs' => 94, 'rhs' => 4 ),
  array( 'lhs' => 94, 'rhs' => 4 ),
  array( 'lhs' => 83, 'rhs' => 2 ),
  array( 'lhs' => 100, 'rhs' => 2 ),
  array( 'lhs' => 100, 'rhs' => 0 ),
  array( 'lhs' => 101, 'rhs' => 2 ),
  array( 'lhs' => 101, 'rhs' => 4 ),
  array( 'lhs' => 101, 'rhs' => 2 ),
  array( 'lhs' => 101, 'rhs' => 2 ),
  array( 'lhs' => 101, 'rhs' => 2 ),
  array( 'lhs' => 101, 'rhs' => 3 ),
  array( 'lhs' => 101, 'rhs' => 5 ),
  array( 'lhs' => 101, 'rhs' => 3 ),
  array( 'lhs' => 101, 'rhs' => 2 ),
  array( 'lhs' => 98, 'rhs' => 2 ),
  array( 'lhs' => 88, 'rhs' => 2 ),
  array( 'lhs' => 88, 'rhs' => 2 ),
  array( 'lhs' => 103, 'rhs' => 2 ),
  array( 'lhs' => 103, 'rhs' => 1 ),
  array( 'lhs' => 103, 'rhs' => 1 ),
  array( 'lhs' => 99, 'rhs' => 2 ),
  array( 'lhs' => 104, 'rhs' => 1 ),
  array( 'lhs' => 104, 'rhs' => 2 ),
  array( 'lhs' => 105, 'rhs' => 3 ),
  array( 'lhs' => 105, 'rhs' => 2 ),
  array( 'lhs' => 105, 'rhs' => 3 ),
  array( 'lhs' => 105, 'rhs' => 4 ),
  array( 'lhs' => 105, 'rhs' => 2 ),
  array( 'lhs' => 96, 'rhs' => 4 ),
  array( 'lhs' => 96, 'rhs' => 4 ),
  array( 'lhs' => 106, 'rhs' => 4 ),
  array( 'lhs' => 106, 'rhs' => 5 ),
  array( 'lhs' => 107, 'rhs' => 3 ),
  array( 'lhs' => 107, 'rhs' => 1 ),
  array( 'lhs' => 107, 'rhs' => 0 ),
  array( 'lhs' => 84, 'rhs' => 3 ),
  array( 'lhs' => 84, 'rhs' => 2 ),
  array( 'lhs' => 108, 'rhs' => 3 ),
  array( 'lhs' => 108, 'rhs' => 2 ),
  array( 'lhs' => 90, 'rhs' => 2 ),
  array( 'lhs' => 90, 'rhs' => 0 ),
  array( 'lhs' => 109, 'rhs' => 2 ),
  array( 'lhs' => 102, 'rhs' => 1 ),
  array( 'lhs' => 102, 'rhs' => 2 ),
  array( 'lhs' => 102, 'rhs' => 1 ),
  array( 'lhs' => 102, 'rhs' => 3 ),
  array( 'lhs' => 102, 'rhs' => 4 ),
  array( 'lhs' => 95, 'rhs' => 3 ),
  array( 'lhs' => 110, 'rhs' => 1 ),
  array( 'lhs' => 110, 'rhs' => 3 ),
  array( 'lhs' => 110, 'rhs' => 0 ),
  array( 'lhs' => 111, 'rhs' => 3 ),
  array( 'lhs' => 111, 'rhs' => 3 ),
  array( 'lhs' => 111, 'rhs' => 1 ),
  array( 'lhs' => 97, 'rhs' => 2 ),
  array( 'lhs' => 97, 'rhs' => 3 ),
  array( 'lhs' => 112, 'rhs' => 2 ),
  array( 'lhs' => 112, 'rhs' => 1 ),
  array( 'lhs' => 113, 'rhs' => 3 ),
  array( 'lhs' => 113, 'rhs' => 3 ),
  array( 'lhs' => 113, 'rhs' => 1 ),
  array( 'lhs' => 113, 'rhs' => 4 ),
  array( 'lhs' => 113, 'rhs' => 2 ),
  array( 'lhs' => 113, 'rhs' => 3 ),
  array( 'lhs' => 113, 'rhs' => 1 ),
  array( 'lhs' => 113, 'rhs' => 1 ),
  array( 'lhs' => 87, 'rhs' => 1 ),
  array( 'lhs' => 87, 'rhs' => 0 ),
    );

    public static $yyReduceMap = array(
        0 => 0,
        1 => 1,
        2 => 1,
        4 => 1,
        6 => 1,
        5 => 5,
        7 => 7,
        8 => 8,
        9 => 9,
        10 => 10,
        11 => 11,
        12 => 12,
        13 => 13,
        14 => 14,
        15 => 15,
        16 => 16,
        17 => 17,
        20 => 17,
        178 => 17,
        18 => 18,
        61 => 18,
        85 => 18,
        166 => 18,
        19 => 19,
        89 => 19,
        91 => 19,
        114 => 19,
        154 => 19,
        21 => 21,
        22 => 21,
        23 => 21,
        24 => 21,
        25 => 21,
        26 => 21,
        27 => 21,
        56 => 21,
        62 => 21,
        63 => 21,
        88 => 21,
        92 => 21,
        93 => 21,
        94 => 21,
        97 => 21,
        99 => 21,
        100 => 21,
        104 => 21,
        110 => 21,
        126 => 21,
        153 => 21,
        155 => 21,
        159 => 21,
        164 => 21,
        177 => 21,
        28 => 28,
        29 => 29,
        30 => 30,
        31 => 31,
        32 => 32,
        33 => 33,
        34 => 33,
        35 => 35,
        36 => 36,
        37 => 37,
        38 => 38,
        39 => 39,
        40 => 40,
        42 => 40,
        41 => 41,
        43 => 41,
        44 => 44,
        45 => 45,
        46 => 46,
        47 => 47,
        48 => 48,
        49 => 49,
        50 => 50,
        51 => 51,
        58 => 51,
        144 => 51,
        148 => 51,
        152 => 51,
        52 => 52,
        145 => 52,
        151 => 52,
        53 => 53,
        54 => 54,
        55 => 55,
        57 => 57,
        59 => 59,
        60 => 60,
        64 => 64,
        65 => 65,
        66 => 65,
        67 => 65,
        68 => 68,
        107 => 68,
        69 => 69,
        71 => 69,
        70 => 70,
        72 => 72,
        73 => 73,
        74 => 74,
        79 => 74,
        75 => 75,
        78 => 75,
        76 => 76,
        81 => 76,
        77 => 77,
        80 => 77,
        82 => 82,
        83 => 82,
        84 => 84,
        86 => 86,
        87 => 87,
        90 => 90,
        95 => 95,
        96 => 96,
        98 => 98,
        101 => 101,
        102 => 102,
        103 => 103,
        105 => 105,
        106 => 106,
        108 => 108,
        109 => 109,
        111 => 111,
        112 => 112,
        113 => 113,
        115 => 115,
        161 => 115,
        116 => 116,
        117 => 117,
        118 => 118,
        119 => 119,
        120 => 119,
        121 => 121,
        122 => 122,
        123 => 123,
        124 => 124,
        125 => 125,
        127 => 127,
        128 => 128,
        129 => 129,
        130 => 130,
        131 => 131,
        132 => 132,
        133 => 133,
        134 => 134,
        135 => 135,
        136 => 136,
        137 => 137,
        138 => 138,
        139 => 139,
        140 => 140,
        141 => 141,
        142 => 142,
        143 => 143,
        146 => 146,
        147 => 147,
        149 => 149,
        150 => 150,
        156 => 156,
        157 => 157,
        158 => 158,
        160 => 160,
        162 => 162,
        163 => 163,
        165 => 165,
        167 => 167,
        168 => 168,
        169 => 169,
        172 => 169,
        170 => 170,
        171 => 171,
        173 => 173,
        174 => 174,
        175 => 175,
        176 => 176,
    );
#line 96 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r0(){
   // execute end of template
   if ($this->compiler->caching) {
       $this->compiler->has_code = true;
       $this->compiler->nocache_nolog = true;
   }
    }
#line 1922 "Smarty_Compiler_Template_Php_Parser.php"
#line 108 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r1(){
    }
#line 1926 "Smarty_Compiler_Template_Php_Parser.php"
#line 127 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r5(){
    if ($this->compiler->has_code) {
        $this->compiler->nocacheCode($this->yystack[$this->yyidx + -1]->minor,true);
    } else { 
        $this->compiler->template_code->raw($this->yystack[$this->yyidx + -1]->minor);
    }  
    $this->block_nesting_level = count($this->compiler->_tag_stack);
    }
#line 1936 "Smarty_Compiler_Template_Php_Parser.php"
#line 141 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r7(){
    $this->compiler->template_code->php('echo ')->string($this->yystack[$this->yyidx + 0]->minor)->raw(";\n");
    }
#line 1941 "Smarty_Compiler_Template_Php_Parser.php"
#line 146 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r8(){
    if ($this->php_handling == Smarty::PHP_PASSTHRU) {
        $this->compiler->template_code->php("echo '<?php';\n");
    } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
        $this->compiler->template_code->php("echo '&lt;?php';\n");
    } elseif ($this->php_handling == Smarty::PHP_ALLOW) {
        if (!($this->compiler->template instanceof SmartyBC)) {
            $this->compiler->error (self::Err3);
        }
        $this->text_is_php = true;
    }
    }
#line 1955 "Smarty_Compiler_Template_Php_Parser.php"
#line 160 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r9(){
    if ($this->is_xml) {
        $this->is_xml = false;
        $this->compiler->template_code->php("echo '?>';\n");
    } elseif ($this->php_handling == Smarty::PHP_PASSTHRU) {
        $this->compiler->template_code->php("echo '?>';\n");
    } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
        $this->compiler->template_code->php("echo '?&gt;';\n");
    } elseif ($this->php_handling == Smarty::PHP_ALLOW) {
        $this->text_is_php = false;
    }
    }
#line 1969 "Smarty_Compiler_Template_Php_Parser.php"
#line 174 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r10(){
    if ($this->php_handling == Smarty::PHP_PASSTHRU) {
        $this->compiler->template_code->php("echo '<%';\n");
    } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
        $this->compiler->template_code->php("echo '&lt;%';\n");
    } elseif ($this->php_handling == Smarty::PHP_ALLOW) {
        if ($this->asp_tags) {
            if (!($this->compiler->template instanceof SmartyBC)) {
                $this->compiler->error (self::Err3);
            }
            $this->text_is_php = true;
        } else {
            $this->compiler->template_code->php("echo '<%';\n");
        }
    } elseif ($this->php_handling == Smarty::PHP_REMOVE) {
        if (!$this->asp_tags) {
            $this->compiler->template_code->php("echo '<%';\n");
        }
    }
    }
#line 1991 "Smarty_Compiler_Template_Php_Parser.php"
#line 196 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r11(){
    if ($this->php_handling == Smarty::PHP_PASSTHRU) {
        $this->compiler->template_code->php("echo '%>';\n");
    } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
        $this->compiler->template_code->php("echo '%&gt;';\n");
    } elseif ($this->php_handling == Smarty::PHP_ALLOW) {
        if ($this->asp_tags) {
            $this->text_is_php = false;
        } else {
            $this->compiler->template_code->php("echo '%>';\n");
        }
    } elseif ($this->php_handling == Smarty::PHP_REMOVE) {
        if (!$this->asp_tags) {
            $this->compiler->template_code->php("echo '%>';\n");
        }
    }
    }
#line 2010 "Smarty_Compiler_Template_Php_Parser.php"
#line 214 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r12(){
    if ($this->strip) {
        $this->compiler->template_code->php('echo ')->string(preg_replace('![\t ]*[\r\n]+[\t ]*!', '', $this->yystack[$this->yyidx + 0]->minor))->raw(";\n");
    } else {
        $this->compiler->template_code->php('echo ')->string($this->yystack[$this->yyidx + 0]->minor)->raw(";\n");
    }
    }
#line 2019 "Smarty_Compiler_Template_Php_Parser.php"
#line 223 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r13(){
    $this->is_xml = true; 
    $this->compiler->template_code->php("echo '<?xml';\n");
    }
#line 2025 "Smarty_Compiler_Template_Php_Parser.php"
#line 229 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r14(){
    if ($this->text_is_php) {
        $this->compiler->prefix_code[] = $this->yystack[$this->yyidx + 0]->minor;
        $this->compiler->nocacheCode('', true);
    } else {
        // inheritance child templates shall not output text
        if (!$this->compiler->isInheritanceChild || $this->compiler->block_nesting_level > 0) {
            if ($this->strip) {
                $this->compiler->template_code->php('echo ')->string(preg_replace('![\t ]*[\r\n]+[\t ]*!', '', $this->yystack[$this->yyidx + 0]->minor))->raw(";\n");
            } else {
                $this->compiler->template_code->php('echo ')->string($this->yystack[$this->yyidx + 0]->minor)->raw(";\n");
            }
        }
    }
    }
#line 2042 "Smarty_Compiler_Template_Php_Parser.php"
#line 246 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r15(){
    $this->strip = true;
    }
#line 2047 "Smarty_Compiler_Template_Php_Parser.php"
#line 250 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r16(){
    $this->strip = false;
    }
#line 2052 "Smarty_Compiler_Template_Php_Parser.php"
#line 255 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r17(){
    $this->_retvalue = '';
    }
#line 2057 "Smarty_Compiler_Template_Php_Parser.php"
#line 259 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r18(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;
    }
#line 2062 "Smarty_Compiler_Template_Php_Parser.php"
#line 263 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r19(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2067 "Smarty_Compiler_Template_Php_Parser.php"
#line 271 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r21(){
    $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;
    }
#line 2072 "Smarty_Compiler_Template_Php_Parser.php"
#line 312 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r28(){
    $this->_retvalue = $this->compiler->compileTag('Internal_PrintExpression',$this->yystack[$this->yyidx + 0]->minor,array('value'=>$this->yystack[$this->yyidx + -1]->minor));
    }
#line 2077 "Smarty_Compiler_Template_Php_Parser.php"
#line 333 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r29(){
    $this->_retvalue = $this->compiler->compileTag('assign',array_merge(array(array('value'=>$this->yystack[$this->yyidx + -1]->minor),array('var'=>$this->yystack[$this->yyidx + -3]->minor['var'])),$this->yystack[$this->yyidx + 0]->minor),array('smarty_internal_index'=>$this->yystack[$this->yyidx + -3]->minor['smarty_internal_index']));
    }
#line 2082 "Smarty_Compiler_Template_Php_Parser.php"
#line 338 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r30(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor);
    }
#line 2087 "Smarty_Compiler_Template_Php_Parser.php"
#line 352 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r31(){
    $this->_retvalue = 'ob_start(); '.$this->compiler->compileTag($this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + 0]->minor).' echo ';
    $this->_retvalue .= $this->compiler->compileTag('Internal_Modifier',array(),array('modifierlist'=>$this->yystack[$this->yyidx + -1]->minor,'value'=>'ob_get_clean()')).';';
    }
#line 2093 "Smarty_Compiler_Template_Php_Parser.php"
#line 358 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r32(){
    $this->_retvalue = 'ob_start(); '.$this->compiler->compileTag($this->yystack[$this->yyidx + -4]->minor,$this->yystack[$this->yyidx + 0]->minor,array('object_method'=>$this->yystack[$this->yyidx + -2]->minor)).' echo ';
    $this->_retvalue .= $this->compiler->compileTag('Internal_Modifier',array(),array('modifierlist'=>$this->yystack[$this->yyidx + -1]->minor,'value'=>'ob_get_clean()')).';';
    }
#line 2099 "Smarty_Compiler_Template_Php_Parser.php"
#line 369 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r33(){
    $tag = trim(substr($this->yystack[$this->yyidx + -2]->minor,$this->lex->ldel_length));
    $this->_retvalue = $this->compiler->compileTag(($tag == 'else if')? 'elseif' : $tag,$this->yystack[$this->yyidx + 0]->minor,array('if condition'=>$this->yystack[$this->yyidx + -1]->minor));
    }
#line 2105 "Smarty_Compiler_Template_Php_Parser.php"
#line 385 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r35(){
    $this->_retvalue = $this->compiler->compileTag('for',array_merge($this->yystack[$this->yyidx + 0]->minor,array(array('start'=>$this->yystack[$this->yyidx + -9]->minor),array('ifexp'=>$this->yystack[$this->yyidx + -6]->minor),array('var'=>$this->yystack[$this->yyidx + -3]->minor),array('step'=>'='.$this->yystack[$this->yyidx + -1]->minor))),1);
    }
#line 2110 "Smarty_Compiler_Template_Php_Parser.php"
#line 388 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r36(){
    $len =strlen($this->yystack[$this->yyidx + -1]->minor);
    $this->_retvalue = $this->compiler->compileTag('for',array_merge($this->yystack[$this->yyidx + 0]->minor,array(array('start'=>$this->yystack[$this->yyidx + -7]->minor),array('ifexp'=>$this->yystack[$this->yyidx + -4]->minor),array('var'=>substr($this->yystack[$this->yyidx + -1]->minor,1,$len-3)),array('step'=>substr($this->yystack[$this->yyidx + -1]->minor,$len-2)))),1);
    }
#line 2116 "Smarty_Compiler_Template_Php_Parser.php"
#line 393 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r37(){
    $this->_retvalue = $this->compiler->compileTag('for',array_merge($this->yystack[$this->yyidx + 0]->minor,array(array('start'=>$this->yystack[$this->yyidx + -3]->minor),array('to'=>$this->yystack[$this->yyidx + -1]->minor))),0);
    }
#line 2121 "Smarty_Compiler_Template_Php_Parser.php"
#line 397 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r38(){
    $this->_retvalue = $this->compiler->compileTag('for',array_merge($this->yystack[$this->yyidx + 0]->minor,array(array('start'=>$this->yystack[$this->yyidx + -5]->minor),array('to'=>$this->yystack[$this->yyidx + -3]->minor),array('step'=>$this->yystack[$this->yyidx + -1]->minor))),0);
    }
#line 2126 "Smarty_Compiler_Template_Php_Parser.php"
#line 402 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r39(){
    $this->_retvalue = $this->compiler->compileTag('foreach',$this->yystack[$this->yyidx + 0]->minor);
    }
#line 2131 "Smarty_Compiler_Template_Php_Parser.php"
#line 407 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r40(){
    $this->_retvalue = $this->compiler->compileTag('foreach',array_merge($this->yystack[$this->yyidx + 0]->minor,array(array('from'=>$this->yystack[$this->yyidx + -3]->minor),array('item'=>$this->yystack[$this->yyidx + -1]->minor))));
    }
#line 2136 "Smarty_Compiler_Template_Php_Parser.php"
#line 411 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r41(){
    $this->_retvalue = $this->compiler->compileTag('foreach',array_merge($this->yystack[$this->yyidx + 0]->minor,array(array('from'=>$this->yystack[$this->yyidx + -5]->minor),array('item'=>$this->yystack[$this->yyidx + -1]->minor),array('key'=>$this->yystack[$this->yyidx + -3]->minor))));
    }
#line 2141 "Smarty_Compiler_Template_Php_Parser.php"
#line 424 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r44(){
    $this->_retvalue = $this->compiler->compileTag('setfilter',array(),array('modifier_list'=>array(array_merge(array($this->yystack[$this->yyidx + -1]->minor),$this->yystack[$this->yyidx + 0]->minor))));
    }
#line 2146 "Smarty_Compiler_Template_Php_Parser.php"
#line 428 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r45(){
    $this->_retvalue = $this->compiler->compileTag('setfilter',array(),array('modifier_list'=>array_merge(array(array_merge(array($this->yystack[$this->yyidx + -3]->minor),$this->yystack[$this->yyidx + -2]->minor)),$this->yystack[$this->yyidx + -1]->minor)));
    }
#line 2151 "Smarty_Compiler_Template_Php_Parser.php"
#line 435 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r46(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + 0]->minor.'close',array());
    }
#line 2156 "Smarty_Compiler_Template_Php_Parser.php"
#line 439 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r47(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -1]->minor.'close',array(),array('modifierlist'=>$this->yystack[$this->yyidx + 0]->minor));
    }
#line 2161 "Smarty_Compiler_Template_Php_Parser.php"
#line 444 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r48(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -2]->minor.'close',array(),array('object_method'=>$this->yystack[$this->yyidx + 0]->minor));
    }
#line 2166 "Smarty_Compiler_Template_Php_Parser.php"
#line 448 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r49(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -3]->minor.'close',array(),array('object_method'=>$this->yystack[$this->yyidx + -1]->minor,'modifierlist'=>$this->yystack[$this->yyidx + 0]->minor));
    }
#line 2171 "Smarty_Compiler_Template_Php_Parser.php"
#line 456 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r50(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;
    $this->_retvalue[] = $this->yystack[$this->yyidx + 0]->minor;
    }
#line 2177 "Smarty_Compiler_Template_Php_Parser.php"
#line 462 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r51(){
    $this->_retvalue = array($this->yystack[$this->yyidx + 0]->minor);
    }
#line 2182 "Smarty_Compiler_Template_Php_Parser.php"
#line 467 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r52(){
    $this->_retvalue = array();
    }
#line 2187 "Smarty_Compiler_Template_Php_Parser.php"
#line 472 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r53(){
    if (preg_match('~^true$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>'true');
    } elseif (preg_match('~^false$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>'false');
    } elseif (preg_match('~^null$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>'null');
    } else {
        $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>"'".$this->yystack[$this->yyidx + 0]->minor."'");
    }
    }
#line 2200 "Smarty_Compiler_Template_Php_Parser.php"
#line 484 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r54(){
    $this->_retvalue = array(trim($this->yystack[$this->yyidx + -1]->minor," =\n\r\t")=>$this->yystack[$this->yyidx + 0]->minor);
    }
#line 2205 "Smarty_Compiler_Template_Php_Parser.php"
#line 492 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r55(){
    $this->_retvalue = "'".$this->yystack[$this->yyidx + 0]->minor."'";
    }
#line 2210 "Smarty_Compiler_Template_Php_Parser.php"
#line 504 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r57(){
    $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>$this->yystack[$this->yyidx + 0]->minor);
    }
#line 2215 "Smarty_Compiler_Template_Php_Parser.php"
#line 517 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r59(){
    $this->yystack[$this->yyidx + -2]->minor[]=$this->yystack[$this->yyidx + 0]->minor;
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor;
    }
#line 2221 "Smarty_Compiler_Template_Php_Parser.php"
#line 526 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r60(){
    $this->_retvalue = array('var' => $this->yystack[$this->yyidx + -2]->minor, 'value'=>$this->yystack[$this->yyidx + 0]->minor);
    }
#line 2226 "Smarty_Compiler_Template_Php_Parser.php"
#line 550 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r64(){
    $this->_retvalue = '$_smarty_tpl->getStreamVariable(\''. $this->yystack[$this->yyidx + -2]->minor .'://'. $this->yystack[$this->yyidx + 0]->minor . '\')';
    }
#line 2231 "Smarty_Compiler_Template_Php_Parser.php"
#line 555 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r65(){
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor . trim($this->yystack[$this->yyidx + -1]->minor) . $this->yystack[$this->yyidx + 0]->minor;
    }
#line 2236 "Smarty_Compiler_Template_Php_Parser.php"
#line 574 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r68(){
    $this->_retvalue = $this->compiler->compileTag('Internal_Modifier',array(),array('value'=>$this->yystack[$this->yyidx + -1]->minor,'modifierlist'=>$this->yystack[$this->yyidx + 0]->minor));
    }
#line 2241 "Smarty_Compiler_Template_Php_Parser.php"
#line 580 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r69(){
    $operator = strtolower(trim($this->yystack[$this->yyidx + -1]->minor));
    if (isset($this->opMap[$operator])) {
        $operator = $this->opMap[$operator];
    }
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor." {$operator} ".$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2250 "Smarty_Compiler_Template_Php_Parser.php"
#line 592 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r70(){
    $this->_retvalue = 'in_array('.$this->yystack[$this->yyidx + -2]->minor.',(array)'.$this->yystack[$this->yyidx + 0]->minor.')';
    }
#line 2255 "Smarty_Compiler_Template_Php_Parser.php"
#line 604 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r72(){
    $this->_retvalue = '!('.$this->yystack[$this->yyidx + -2]->minor.' % '.$this->yystack[$this->yyidx + 0]->minor.')';
    }
#line 2260 "Smarty_Compiler_Template_Php_Parser.php"
#line 608 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r73(){
    $this->_retvalue = '('.$this->yystack[$this->yyidx + -2]->minor.' % '.$this->yystack[$this->yyidx + 0]->minor.')';
    }
#line 2265 "Smarty_Compiler_Template_Php_Parser.php"
#line 612 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r74(){
    $this->_retvalue = '!(1 & '.$this->yystack[$this->yyidx + -1]->minor.')';
    }
#line 2270 "Smarty_Compiler_Template_Php_Parser.php"
#line 616 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r75(){
    $this->_retvalue = '(1 & '.$this->yystack[$this->yyidx + -1]->minor.')';
    }
#line 2275 "Smarty_Compiler_Template_Php_Parser.php"
#line 620 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r76(){
    $this->_retvalue = '!(1 & '.$this->yystack[$this->yyidx + -2]->minor.' / '.$this->yystack[$this->yyidx + 0]->minor.')';
    }
#line 2280 "Smarty_Compiler_Template_Php_Parser.php"
#line 624 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r77(){
    $this->_retvalue = '(1 & '.$this->yystack[$this->yyidx + -2]->minor.' / '.$this->yystack[$this->yyidx + 0]->minor.')';
    }
#line 2285 "Smarty_Compiler_Template_Php_Parser.php"
#line 644 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r82(){
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2290 "Smarty_Compiler_Template_Php_Parser.php"
#line 652 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r84(){
    $this->prefix_number++;
    $this->compiler->prefix_code[] = '$_tmp'.$this->prefix_number.'='.$this->yystack[$this->yyidx + 0]->minor.';';
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.'$_tmp'.$this->prefix_number;
    }
#line 2297 "Smarty_Compiler_Template_Php_Parser.php"
#line 665 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r86(){
    $this->_retvalue = $this->yystack[$this->yyidx + -6]->minor.' ? '. $this->compiler->compileVariable("'".$this->yystack[$this->yyidx + -2]->minor."'") . ' : '.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2302 "Smarty_Compiler_Template_Php_Parser.php"
#line 669 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r87(){
    $this->_retvalue = $this->yystack[$this->yyidx + -5]->minor.' ? '.$this->yystack[$this->yyidx + -2]->minor.' : '.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2307 "Smarty_Compiler_Template_Php_Parser.php"
#line 685 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r90(){
    $operator = strtolower(trim($this->yystack[$this->yyidx + -1]->minor));
    if (isset($this->opMap[$operator])) {
        $operator = $this->opMap[$operator];
    }

    $this->_retvalue = $operator.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2317 "Smarty_Compiler_Template_Php_Parser.php"
#line 711 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r95(){
    $this->_retvalue = '.'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2322 "Smarty_Compiler_Template_Php_Parser.php"
#line 716 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r96(){
    if (preg_match('~^true$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = 'true';
    } elseif (preg_match('~^false$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = 'false';
    } elseif (preg_match('~^null$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = 'null';
    } else {
        $this->_retvalue = "'".$this->yystack[$this->yyidx + 0]->minor."'";
    }
    }
#line 2335 "Smarty_Compiler_Template_Php_Parser.php"
#line 734 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r98(){
    $this->_retvalue = "(". $this->yystack[$this->yyidx + -1]->minor .")";
    }
#line 2340 "Smarty_Compiler_Template_Php_Parser.php"
#line 748 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r101(){
    $len = strlen($this->yystack[$this->yyidx + 0]->minor);
    $this->_retvalue = '$_scope->' . substr($this->yystack[$this->yyidx + 0]->minor,1,$len-3) . '->value' . substr($this->yystack[$this->yyidx + 0]->minor,$len-2);
    }
#line 2346 "Smarty_Compiler_Template_Php_Parser.php"
#line 754 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r102(){
    if (!$this->security || isset($this->compiler->tpl_obj->registered_classes[$this->yystack[$this->yyidx + -1]->minor]) || $this->compiler->tpl_obj->security_policy->isTrustedStaticClass($this->yystack[$this->yyidx + -1]->minor, $this->compiler)) {
        if (isset($this->compiler->tpl_obj->registered_classes[$this->yystack[$this->yyidx + -1]->minor])) {
            $this->_retvalue = $this->compiler->tpl_obj->registered_classes[$this->yystack[$this->yyidx + -1]->minor].$this->yystack[$this->yyidx + 0]->minor;
        } else {
            $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
        } 
    } else {
        $this->compiler->error ("static class '".$this->yystack[$this->yyidx + -1]->minor."' is undefined or not allowed by security setting");
    }
    }
#line 2359 "Smarty_Compiler_Template_Php_Parser.php"
#line 767 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r103(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.r;
    }
#line 2364 "Smarty_Compiler_Template_Php_Parser.php"
#line 776 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r105(){
    $this->_retvalue = $this->compiler->compileVariable($this->yystack[$this->yyidx + -1]->minor).$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2369 "Smarty_Compiler_Template_Php_Parser.php"
#line 781 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r106(){
    $this->prefix_number++;
    $code = new Smarty_Compiler_Code();
    $code->iniTagCode($this->compiler);
    $code->php("ob_start();")->newline();
    $code->mergeCode($this->yystack[$this->yyidx + 0]->minor);
    $code->php("\$_tmp{$this->prefix_number} = ob_get_clean();")->newline();
    $this->compiler->prefix_code[] = $code;
    $this->_retvalue = '$_tmp'.$this->prefix_number;
    }
#line 2381 "Smarty_Compiler_Template_Php_Parser.php"
#line 802 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r108(){
    if ($this->yystack[$this->yyidx + 0]->minor['var'] == '\'smarty\'') {
        $this->_retvalue = $this->compiler->compileTag('Internal_SpecialVariable',array(),$this->yystack[$this->yyidx + 0]->minor['smarty_internal_index']);
    } else {
        $this->_retvalue = $this->compiler->compileVariable($this->yystack[$this->yyidx + 0]->minor['var']).$this->yystack[$this->yyidx + 0]->minor['smarty_internal_index'];
    }
    }
#line 2390 "Smarty_Compiler_Template_Php_Parser.php"
#line 811 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r109(){
    $this->_retvalue = '$_scope->' . trim($this->yystack[$this->yyidx + -2]->minor,"'") . '->' . $this->yystack[$this->yyidx + 0]->minor;
    }
#line 2395 "Smarty_Compiler_Template_Php_Parser.php"
#line 826 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r111(){
    $var = trim($this->yystack[$this->yyidx + -2]->minor,'\'');
    $this->_retvalue = "\$_scope->___config_var_{$var}".$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2401 "Smarty_Compiler_Template_Php_Parser.php"
#line 835 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r112(){
    $this->_retvalue = "\$_scope->___config_var_{{$this->yystack[$this->yyidx + -2]->minor}}".$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2406 "Smarty_Compiler_Template_Php_Parser.php"
#line 839 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r113(){
    $this->_retvalue = array('var'=>$this->yystack[$this->yyidx + -1]->minor, 'smarty_internal_index'=>$this->yystack[$this->yyidx + 0]->minor);
    }
#line 2411 "Smarty_Compiler_Template_Php_Parser.php"
#line 852 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r115(){
    return;
    }
#line 2416 "Smarty_Compiler_Template_Php_Parser.php"
#line 858 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r116(){
    $this->_retvalue = '['.$this->yystack[$this->yyidx + 0]->minor.']';
    }
#line 2421 "Smarty_Compiler_Template_Php_Parser.php"
#line 862 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r117(){
    $this->_retvalue = '['.$this->yystack[$this->yyidx + -2]->minor.'->'.$this->yystack[$this->yyidx + 0]->minor.']';
    }
#line 2426 "Smarty_Compiler_Template_Php_Parser.php"
#line 866 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r118(){
    $this->_retvalue = "['". $this->yystack[$this->yyidx + 0]->minor ."']";
    }
#line 2431 "Smarty_Compiler_Template_Php_Parser.php"
#line 870 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r119(){
    $this->_retvalue = "[". $this->yystack[$this->yyidx + 0]->minor ."]";
    }
#line 2436 "Smarty_Compiler_Template_Php_Parser.php"
#line 879 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r121(){
    $this->_retvalue = '['.$this->compiler->compileTag('Internal_SpecialVariable',array(),'[\'section\'][\''.$this->yystack[$this->yyidx + -1]->minor.'\'][\'index\']').']';
    }
#line 2441 "Smarty_Compiler_Template_Php_Parser.php"
#line 883 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r122(){
    $this->_retvalue = '['.$this->compiler->compileTag('Internal_SpecialVariable',array(),'[\'section\'][\''.$this->yystack[$this->yyidx + -3]->minor.'\'][\''.$this->yystack[$this->yyidx + -1]->minor.'\']').']';
    }
#line 2446 "Smarty_Compiler_Template_Php_Parser.php"
#line 888 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r123(){
    $this->_retvalue = "[". $this->yystack[$this->yyidx + -1]->minor ."]";
    }
#line 2451 "Smarty_Compiler_Template_Php_Parser.php"
#line 893 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r124(){
    $this->_retvalue = '[]';
    }
#line 2456 "Smarty_Compiler_Template_Php_Parser.php"
#line 897 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r125(){
    $this->_retvalue = '::'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2461 "Smarty_Compiler_Template_Php_Parser.php"
#line 909 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r127(){
    $this->prefix_number++;
    $code = new Smarty_Compiler_Code;
    $code->iniTagCode($this->compiler);
    $code->php('$_tmp'.$this->prefix_number.'='.$this->yystack[$this->yyidx + 0]->minor.";\n");
    $this->compiler->prefix_code[] = $code;
    $this->_retvalue = '$_tmp'.$this->prefix_number;
    }
#line 2471 "Smarty_Compiler_Template_Php_Parser.php"
#line 919 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r128(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.'.'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2476 "Smarty_Compiler_Template_Php_Parser.php"
#line 924 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r129(){
    $this->_retvalue = '\''.$this->yystack[$this->yyidx + 0]->minor.'\'';
    }
#line 2481 "Smarty_Compiler_Template_Php_Parser.php"
#line 929 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r130(){
    $this->_retvalue = '('.$this->yystack[$this->yyidx + 0]->minor.')';
    }
#line 2486 "Smarty_Compiler_Template_Php_Parser.php"
#line 936 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r131(){
    if ($this->yystack[$this->yyidx + -1]->minor['var'] == '\'smarty\'') {
        $this->_retvalue =  $this->compiler->compileTag('Internal_SpecialVariable',array(),$this->yystack[$this->yyidx + -1]->minor['smarty_internal_index']).$this->yystack[$this->yyidx + 0]->minor;
    } else {
        $this->_retvalue = $this->compiler->compileVariable($this->yystack[$this->yyidx + -1]->minor['var']).$this->yystack[$this->yyidx + -1]->minor['smarty_internal_index'].$this->yystack[$this->yyidx + 0]->minor;
    }
    }
#line 2495 "Smarty_Compiler_Template_Php_Parser.php"
#line 945 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r132(){
    $this->_retvalue  = $this->yystack[$this->yyidx + 0]->minor;
    }
#line 2500 "Smarty_Compiler_Template_Php_Parser.php"
#line 950 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r133(){
    $this->_retvalue  = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2505 "Smarty_Compiler_Template_Php_Parser.php"
#line 955 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r134(){
    if ($this->security && substr($this->yystack[$this->yyidx + -1]->minor,0,1) == '_') {
        $this->compiler->error (self::Err1);
    }
    $this->_retvalue = '->'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2513 "Smarty_Compiler_Template_Php_Parser.php"
#line 962 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r135(){
    if ($this->security) {
        $this->compiler->error (self::Err2);
    }
    $this->_retvalue = '->{'.$this->yystack[$this->yyidx + 0]->minor.'}';
    }
#line 2521 "Smarty_Compiler_Template_Php_Parser.php"
#line 969 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r136(){
    if ($this->security) {
        $this->compiler->error (self::Err2);
    }
    $this->_retvalue = '->{'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor.'}';
    }
#line 2529 "Smarty_Compiler_Template_Php_Parser.php"
#line 976 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r137(){
    if ($this->security) {
        $this->compiler->error (self::Err2);
    }
    $this->_retvalue = '->{\''.$this->yystack[$this->yyidx + -2]->minor.'\'.'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor.'}';
    }
#line 2537 "Smarty_Compiler_Template_Php_Parser.php"
#line 984 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r138(){
    $this->_retvalue = '->'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2542 "Smarty_Compiler_Template_Php_Parser.php"
#line 992 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r139(){
    if (!$this->security || $this->compiler->tpl_obj->security_policy->isTrustedPhpFunction($this->yystack[$this->yyidx + -3]->minor, $this->compiler)) {
        if (strcasecmp($this->yystack[$this->yyidx + -3]->minor,'isset') === 0 || strcasecmp($this->yystack[$this->yyidx + -3]->minor,'empty') === 0 || strcasecmp($this->yystack[$this->yyidx + -3]->minor,'array') === 0 || is_callable($this->yystack[$this->yyidx + -3]->minor)) {
            $func_name = strtolower($this->yystack[$this->yyidx + -3]->minor);
            if ($func_name == 'isset') {
                if (count($this->yystack[$this->yyidx + -1]->minor) == 0) {
                    $this->compiler->error ('Illegal number of paramer in "isset()"');
                }
                $par = implode(',',$this->yystack[$this->yyidx + -1]->minor);
                preg_match('/\$_scope->([0-9]*[a-zA-Z_]\w*)(.*)/',$par,$match);
                if (isset($match[1])) {
                    $search = array('/\$_scope->([0-9]*[a-zA-Z_]\w*)/','/->value.*/');
                    $replace = array('$_smarty_tpl->getVariable(\'\1\', null, true, false)','');
                    $this->prefix_number++;
                    $code = new Smarty_Compiler_Code();
                    $code->iniTagCode($this->compiler);
                    $code->php("\$_tmp{$this->prefix_number} = "  .preg_replace($search, $replace, $par) . ';')->newline();
                    $this->compiler->prefix_code[] = $code;
                    $isset_par = '$_tmp'.$this->prefix_number.$match[2];
                } else {
                    $this->prefix_number++;
                    $code = new Smarty_Compiler_Code();
                    $code->iniTagCode($this->compiler);
                    $code->php("\$_tmp{$this->prefix_number} = " . $par . ';')->newline();
                    $this->compiler->prefix_code[] = $code;
                    $isset_par = '$_tmp'.$this->prefix_number;
                }
                $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". $isset_par .")";
            } elseif (in_array($func_name,array('empty','reset','current','end','prev','next'))){
                if (count($this->yystack[$this->yyidx + -1]->minor) != 1) {
                    $this->compiler->error ("Illegal number of paramer in \"{$func_name}\"");
                }
                $this->_retvalue = $func_name.'('.$this->yystack[$this->yyidx + -1]->minor[0].')';
            } else {
                $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". implode(',',$this->yystack[$this->yyidx + -1]->minor) .")";
            }
        } else {
            $this->compiler->error ("unknown function \"" . $this->yystack[$this->yyidx + -3]->minor . "\"");
        }
    }
    }
#line 2585 "Smarty_Compiler_Template_Php_Parser.php"
#line 1037 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r140(){
    if (!$this->security || $this->compiler->tpl_obj->security_policy->isTrustedPhpFunction($this->yystack[$this->yyidx + -3]->minor, $this->compiler)) {
        if (is_callable($this->yystack[$this->yyidx + -3]->minor)) {
            $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". implode(',',$this->yystack[$this->yyidx + -1]->minor) .")";
        } else {
            $this->compiler->error ("unknown function \"" . $this->yystack[$this->yyidx + -3]->minor . "\"");
        }
    }
    }
#line 2596 "Smarty_Compiler_Template_Php_Parser.php"
#line 1050 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r141(){
    if ($this->security && substr($this->yystack[$this->yyidx + -3]->minor,0,1) == '_') {
        $this->compiler->error (self::Err1);
    }
    $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". implode(',',$this->yystack[$this->yyidx + -1]->minor) .")";
    }
#line 2604 "Smarty_Compiler_Template_Php_Parser.php"
#line 1057 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r142(){
    if ($this->security) {
        $this->compiler->error (self::Err2);
    }
    $this->prefix_number++;
    $code = new Smarty_Compiler_Code();
    $code->iniTagCode($this->compiler);
    $code->php("\$_tmp{$this->prefix_number} = " . $this->compiler->compileVariable("'".$this->yystack[$this->yyidx + -3]->minor."'") . ';')->newline();
    $this->compiler->prefix_code[] = $code;
    $this->_retvalue = '$_tmp'.$this->prefix_number.'('. implode(',',$this->yystack[$this->yyidx + -1]->minor) .')';
    }
#line 2617 "Smarty_Compiler_Template_Php_Parser.php"
#line 1071 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r143(){
    $this->_retvalue = array_merge($this->yystack[$this->yyidx + -2]->minor,array($this->yystack[$this->yyidx + 0]->minor));
    }
#line 2622 "Smarty_Compiler_Template_Php_Parser.php"
#line 1091 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r146(){
    $this->_retvalue = array_merge($this->yystack[$this->yyidx + -2]->minor,array(array_merge($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor)));
    }
#line 2627 "Smarty_Compiler_Template_Php_Parser.php"
#line 1095 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r147(){
    $this->_retvalue = array(array_merge($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor));
    }
#line 2632 "Smarty_Compiler_Template_Php_Parser.php"
#line 1103 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r149(){
    $this->_retvalue =  array($this->yystack[$this->yyidx + 0]->minor);
    }
#line 2637 "Smarty_Compiler_Template_Php_Parser.php"
#line 1111 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r150(){
    $this->_retvalue = array_merge($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor);
    }
#line 2642 "Smarty_Compiler_Template_Php_Parser.php"
#line 1141 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r156(){
    $this->_retvalue = '$'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2647 "Smarty_Compiler_Template_Php_Parser.php"
#line 1146 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r157(){
    $this->_retvalue = '$'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2652 "Smarty_Compiler_Template_Php_Parser.php"
#line 1155 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r158(){
    $this->_retvalue = 'array('.$this->yystack[$this->yyidx + -1]->minor.')';
    }
#line 2657 "Smarty_Compiler_Template_Php_Parser.php"
#line 1163 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r160(){
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.','.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2662 "Smarty_Compiler_Template_Php_Parser.php"
#line 1171 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r162(){
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'=>'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2667 "Smarty_Compiler_Template_Php_Parser.php"
#line 1175 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r163(){ 
    $this->_retvalue = '\''.$this->yystack[$this->yyidx + -2]->minor.'\'=>'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2672 "Smarty_Compiler_Template_Php_Parser.php"
#line 1187 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r165(){
    $this->_retvalue = "''";
    }
#line 2677 "Smarty_Compiler_Template_Php_Parser.php"
#line 1196 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r167(){
    if ($this->yystack[$this->yyidx + 0]->minor === false) {
       $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;
    } else {
       $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor. '.' . $this->yystack[$this->yyidx + 0]->minor;
    }
    }
#line 2686 "Smarty_Compiler_Template_Php_Parser.php"
#line 1204 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r168(){
    if ($this->yystack[$this->yyidx + 0]->minor === false) {
       $this->_retvalue = "''";
    } else {
       $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;
    }
    }
#line 2695 "Smarty_Compiler_Template_Php_Parser.php"
#line 1212 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r169(){
    if (empty($this->db_quote_code_buffer)) {
        $this->_retvalue = '(string)'.$this->yystack[$this->yyidx + -1]->minor;
    } else {
        $this->db_quote_code_buffer .= 'echo (string)'.$this->yystack[$this->yyidx + -1]->minor.';';
        $this->_retvalue = false;
    }
    }
#line 2705 "Smarty_Compiler_Template_Php_Parser.php"
#line 1221 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r170(){
    if (empty($this->db_quote_code_buffer)) {
        $this->_retvalue = '(string)('.$this->yystack[$this->yyidx + -1]->minor.')';
    } else {
        $this->db_quote_code_buffer .= 'echo (string)('.$this->yystack[$this->yyidx + -1]->minor.');';
        $this->_retvalue = false;
    }
    }
#line 2715 "Smarty_Compiler_Template_Php_Parser.php"
#line 1230 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r171(){
    if (empty($this->db_quote_code_buffer)) {
        $this->_retvalue = '(string)$_scope->'. substr($this->yystack[$this->yyidx + 0]->minor,1) . '->value';
    } else {
        $this->db_quote_code_buffer .= 'echo (string)$_scope->'. substr($this->yystack[$this->yyidx + 0]->minor,1) . '->value;';
        $this->_retvalue = false;
    }
    }
#line 2725 "Smarty_Compiler_Template_Php_Parser.php"
#line 1248 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r173(){
    if (empty($this->db_quote_code_buffer)) {
        $this->_retvalue = '(string)('.$this->yystack[$this->yyidx + 0]->minor.')';
    } else {
        $this->db_quote_code_buffer .= 'echo (string)('.$this->yystack[$this->yyidx + 0]->minor.');';
        $this->_retvalue = false;
    }
    }
#line 2735 "Smarty_Compiler_Template_Php_Parser.php"
#line 1257 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r174(){
    if (empty($this->db_quote_code_buffer)) {
            $this->db_quote_code_buffer = 'ob_start();';
    }
    $this->db_quote_code_buffer .= $this->yystack[$this->yyidx + -1]->minor->buffer;
        if ($this->block_nesting_level == count($this->compiler->_tag_stack)) {
        $this->prefix_number++;
        $code = new Smarty_Compiler_Code();
        $code->iniTagCode($this->compiler);
        $code->php( $this->db_quote_code_buffer . ' $_tmp'.$this->prefix_number.'=ob_get_clean();')->newline();
        $this->compiler->prefix_code[] = $code;
        $this->db_quote_code_buffer = '';
        $this->_retvalue = '$_tmp'.$this->prefix_number;
    } else {
        $this->_retvalue = false;
    }

    }
#line 2755 "Smarty_Compiler_Template_Php_Parser.php"
#line 1276 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r175(){
    if (empty($this->db_quote_code_buffer)) {
        $this->_retvalue = '"'.$this->yystack[$this->yyidx + 0]->minor.'"';
    } else {
        $this->db_quote_code_buffer .= 'echo ' . sprintf('"%s"', addcslashes($this->yystack[$this->yyidx + 0]->minor, "\0\t\n\r\"\$\\")) . ';';
        $this->_retvalue = false;
    }
    }
#line 2765 "Smarty_Compiler_Template_Php_Parser.php"
#line 1285 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r176(){
    $this->compiler->lex->yypopstate();
    $this->_retvalue = '';
    }
#line 2771 "Smarty_Compiler_Template_Php_Parser.php"

    private $_retvalue;

    public function yy_reduce($yyruleno)
    {
        $yymsp = $this->yystack[$this->yyidx];
        if (self::$yyTraceFILE && $yyruleno >= 0
              && $yyruleno < count(self::$yyRuleName)) {
            fprintf(self::$yyTraceFILE, "%sReduce (%d) [%s].\n",
                self::$yyTracePrompt, $yyruleno,
                self::$yyRuleName[$yyruleno]);
        }

        $this->_retvalue = $yy_lefthand_side = null;
        if (array_key_exists($yyruleno, self::$yyReduceMap)) {
            // call the action
            $this->_retvalue = null;
            $this->{'yy_r' . self::$yyReduceMap[$yyruleno]}();
            $yy_lefthand_side = $this->_retvalue;
        }
        $yygoto = self::$yyRuleInfo[$yyruleno]['lhs'];
        $yysize = self::$yyRuleInfo[$yyruleno]['rhs'];
        $this->yyidx -= $yysize;
        for ($i = $yysize; $i; $i--) {
            // pop all of the right-hand side parameters
            array_pop($this->yystack);
        }
        $yyact = $this->yy_find_reduce_action($this->yystack[$this->yyidx]->stateno, $yygoto);
        if ($yyact < self::YYNSTATE) {
            if (!self::$yyTraceFILE && $yysize) {
                $this->yyidx++;
                $x = new TP_yyStackEntry;
                $x->stateno = $yyact;
                $x->major = $yygoto;
                $x->minor = $yy_lefthand_side;
                $this->yystack[$this->yyidx] = $x;
            } else {
                $this->yy_shift($yyact, $yygoto, $yy_lefthand_side);
            }
        } elseif ($yyact == self::YYNSTATE + self::YYNRULE + 1) {
            $this->yy_accept();
        }
    }

    public function yy_parse_failed()
    {
        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sFail!\n", self::$yyTracePrompt);
        }
        while ($this->yyidx >= 0) {
            $this->yy_pop_parser_stack();
        }
    }

    public function yy_syntax_error($yymajor, $TOKEN)
    {
#line 64 "Smarty_Compiler_Template_Php_Parser.y"

    $this->internalError = true;
    // expected token from parser
    $error_text = "<br> Syntax error :Unexpected '<b>{$this->lex->value}</b>'";
    if (count($this->yy_get_expected_tokens($yymajor)) <= 4) {
        foreach ($this->yy_get_expected_tokens($yymajor) as $token) {
            $exp_token = $this->yyTokenName[$token];
            if (isset($this->lex->smarty_token_names[$exp_token])) {
                // token type from lexer
                $expect[] = "'<b>{$this->lex->smarty_token_names[$exp_token]}</b>'";
            } else {
                // otherwise internal token name
                $expect[] = $this->yyTokenName[$token];
            }
        }
        $error_text .= ', expected one of: ' . implode(' , ', $expect) . '<br>';
    }
    $this->compiler->error($error_text);
#line 2848 "Smarty_Compiler_Template_Php_Parser.php"
    }

    public function yy_accept()
    {
        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sAccept!\n", self::$yyTracePrompt);
        } while ($this->yyidx >= 0) {
            $stack = $this->yy_pop_parser_stack();
        }
#line 56 "Smarty_Compiler_Template_Php_Parser.y"

    $this->successful = !$this->internalError;
    $this->internalError = false;
    $this->retvalue = $this->_retvalue;
    //echo $this->retvalue."\n\n";
#line 2865 "Smarty_Compiler_Template_Php_Parser.php"
    }

    public function doParse($yymajor, $yytokenvalue)
    {
        $yyerrorhit = 0;   /* True if yymajor has invoked an error */

        if ($this->yyidx === null || $this->yyidx < 0) {
            $this->yyidx = 0;
            $this->yyerrcnt = -1;
            $x = new TP_yyStackEntry;
            $x->stateno = 0;
            $x->major = 0;
            $this->yystack = array();
            array_push($this->yystack, $x);
        }
        $yyendofinput = ($yymajor==0);

        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sInput %s\n",
                self::$yyTracePrompt, $this->yyTokenName[$yymajor]);
        }

        do {
            $yyact = $this->yy_find_shift_action($yymajor);
            if ($yymajor < self::YYERRORSYMBOL &&
                  !$this->yy_is_expected_token($yymajor)) {
                // force a syntax error
                $yyact = self::YY_ERROR_ACTION;
            }
            if ($yyact < self::YYNSTATE) {
                $this->yy_shift($yyact, $yymajor, $yytokenvalue);
                $this->yyerrcnt--;
                if ($yyendofinput && $this->yyidx >= 0) {
                    $yymajor = 0;
                } else {
                    $yymajor = self::YYNOCODE;
                }
            } elseif ($yyact < self::YYNSTATE + self::YYNRULE) {
                $this->yy_reduce($yyact - self::YYNSTATE);
            } elseif ($yyact == self::YY_ERROR_ACTION) {
                if (self::$yyTraceFILE) {
                    fprintf(self::$yyTraceFILE, "%sSyntax Error!\n",
                        self::$yyTracePrompt);
                }
                if (self::YYERRORSYMBOL) {
                    if ($this->yyerrcnt < 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $yymx = $this->yystack[$this->yyidx]->major;
                    if ($yymx == self::YYERRORSYMBOL || $yyerrorhit) {
                        if (self::$yyTraceFILE) {
                            fprintf(self::$yyTraceFILE, "%sDiscard input token %s\n",
                                self::$yyTracePrompt, $this->yyTokenName[$yymajor]);
                        }
                        $this->yy_destructor($yymajor, $yytokenvalue);
                        $yymajor = self::YYNOCODE;
                    } else {
                        while ($this->yyidx >= 0 &&
                                 $yymx != self::YYERRORSYMBOL &&
        ($yyact = $this->yy_find_shift_action(self::YYERRORSYMBOL)) >= self::YYNSTATE
                              ){
                            $this->yy_pop_parser_stack();
                        }
                        if ($this->yyidx < 0 || $yymajor==0) {
                            $this->yy_destructor($yymajor, $yytokenvalue);
                            $this->yy_parse_failed();
                            $yymajor = self::YYNOCODE;
                        } elseif ($yymx != self::YYERRORSYMBOL) {
                            $u2 = 0;
                            $this->yy_shift($yyact, self::YYERRORSYMBOL, $u2);
                        }
                    }
                    $this->yyerrcnt = 3;
                    $yyerrorhit = 1;
                } else {
                    if ($this->yyerrcnt <= 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $this->yyerrcnt = 3;
                    $this->yy_destructor($yymajor, $yytokenvalue);
                    if ($yyendofinput) {
                        $this->yy_parse_failed();
                    }
                    $yymajor = self::YYNOCODE;
                }
            } else {
                $this->yy_accept();
                $yymajor = self::YYNOCODE;
            }
        } while ($yymajor != self::YYNOCODE && $this->yyidx >= 0);
    }
}
