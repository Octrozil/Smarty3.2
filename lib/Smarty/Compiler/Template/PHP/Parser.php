<?php
/**
* Smarty Internal Plugin Template_parser
*
* This is the template parser.
* It is generated from the internal.template_parser.y file
* @package Smarty
* @subpackage Compiler
* @author Uwe Tews
*/
class TP_yyToken implements ArrayAccess
{
    public $string = '';
    public $metadata = array();

    public function __construct($s, $m = array())
    {
        if ($s instanceof TP_yyToken) {
            $this->string = $s->string;
            $this->metadata = $s->metadata;
        } else {
            $this->string = (string) $s;
            if ($m instanceof TP_yyToken) {
                $this->metadata = $m->metadata;
            } elseif (is_array($m)) {
                $this->metadata = $m;
            }
        }
    }

    public function __toString()
    {
        return $this->_string;
    }

    public function offsetExists($offset)
    {
        return isset($this->metadata[$offset]);
    }

    public function offsetGet($offset)
    {
        return $this->metadata[$offset];
    }

    public function offsetSet($offset, $value)
    {
        if ($offset === null) {
            if (isset($value[0])) {
                $x = ($value instanceof TP_yyToken) ?
                    $value->metadata : $value;
                $this->metadata = array_merge($this->metadata, $x);

                return;
            }
            $offset = count($this->metadata);
        }
        if ($value === null) {
            return;
        }
        if ($value instanceof TP_yyToken) {
            if ($value->metadata) {
                $this->metadata[$offset] = $value->metadata;
            }
        } elseif ($value) {
            $this->metadata[$offset] = $value;
        }
    }

    public function offsetUnset($offset)
    {
        unset($this->metadata[$offset]);
    }
}

class TP_yyStackEntry
{
    public $stateno;       /* The state-number */
    public $major;         /* The major token value.  This is the code
                     ** number for the token at this stack level */
    public $minor; /* The user-supplied minor token value.  This
                     ** is the value of the token  */
};


#line 13 "Smarty_Compiler_Template_Php_Parser.y"
class Smarty_Compiler_Template_PHP_Parser extends Smarty_Exception_Magic#line 80 "Smarty_Compiler_Template_Php_Parser.php"
{
#line 15 "Smarty_Compiler_Template_Php_Parser.y"

    const Err1 = "Security error: Call to private object member not allowed";
    const Err2 = "Security error: Call to dynamic object member not allowed";
    const Err3 = "PHP in template not allowed. Use SmartyBC to enable it";
    // states whether the parse was successful or not
    public $successful = true;
    public $retvalue = 0;
    public  $lex = null;
    public  $compiler = null;
    public  $prefix_number = 0;
    public  $block_nesting_level = 0;
    private $internalError = false;
    private $strip = false;
    private $text_is_php = false;
    private $is_xml = false;
    private $db_quote_code_buffer = '';
    private $asp_tags = null;
    private $php_handling = null;
    private $security = null;
    private $opMap = array('and' => '&&', 'or' => '||', 'eq' => '==', 'neq' => '!=', 'ne' => '!=', 'gt' => '>',
                            'lt' => '<', 'ge' => '>=', 'gte' => '>=', 'le' => '<=' , 'lte' => '<=', 'mod' => '%',
                            'not' => '!');

    function __construct($lex, $compiler) {
        $this->lex = $lex;
        $this->lex->parser_class = get_class($this);
        $this->compiler = $compiler;
        $this->compiler->prefix_code = array();
        if ($this->security = isset($this->compiler->tpl_obj->security_policy)) {
            $this->php_handling = $this->compiler->tpl_obj->security_policy->php_handling;
        } else {
            $this->php_handling = $this->compiler->tpl_obj->php_handling;
        }
       $this->asp_tags = (ini_get('asp_tags') != '0');
    }
#line 119 "Smarty_Compiler_Template_Php_Parser.php"

    const TP_VERT                           =  1;
    const TP_COLON                          =  2;
    const TP_TEMPLATEINIT                   =  3;
    const TP_RDEL                           =  4;
    const TP_COMMENT                        =  5;
    const TP_PHPSTARTTAG                    =  6;
    const TP_PHPENDTAG                      =  7;
    const TP_ASPSTARTTAG                    =  8;
    const TP_ASPENDTAG                      =  9;
    const TP_FAKEPHPSTARTTAG                = 10;
    const TP_XMLTAG                         = 11;
    const TP_TEXT                           = 12;
    const TP_STRIPON                        = 13;
    const TP_STRIPOFF                       = 14;
    const TP_LITERALSTART                   = 15;
    const TP_LITERALEND                     = 16;
    const TP_LITERAL                        = 17;
    const TP_LDEL                           = 18;
    const TP_EQUAL                          = 19;
    const TP_ID                             = 20;
    const TP_PTR                            = 21;
    const TP_LDELIF                         = 22;
    const TP_LDELFOR                        = 23;
    const TP_SEMICOLON                      = 24;
    const TP_IDINCDEC                       = 25;
    const TP_TO                             = 26;
    const TP_STEP                           = 27;
    const TP_LDELFOREACH                    = 28;
    const TP_SPACE                          = 29;
    const TP_AS                             = 30;
    const TP_APTR                           = 31;
    const TP_LDELSETFILTER                  = 32;
    const TP_LDELSLASH                      = 33;
    const TP_ATTR                           = 34;
    const TP_INTEGER                        = 35;
    const TP_COMMA                          = 36;
    const TP_OPENP                          = 37;
    const TP_CLOSEP                         = 38;
    const TP_DOLLAR                         = 39;
    const TP_MATH                           = 40;
    const TP_UNIMATH                        = 41;
    const TP_ANDSYM                         = 42;
    const TP_IFCOND                         = 43;
    const TP_ISIN                           = 44;
    const TP_LOP                            = 45;
    const TP_ISDIVBY                        = 46;
    const TP_ISNOTDIVBY                     = 47;
    const TP_ISEVEN                         = 48;
    const TP_ISNOTEVEN                      = 49;
    const TP_ISEVENBY                       = 50;
    const TP_ISNOTEVENBY                    = 51;
    const TP_ISODD                          = 52;
    const TP_ISNOTODD                       = 53;
    const TP_ISODDBY                        = 54;
    const TP_ISNOTODDBY                     = 55;
    const TP_INSTANCEOF                     = 56;
    const TP_NAMESPACE                      = 57;
    const TP_QMARK                          = 58;
    const TP_NOT                            = 59;
    const TP_TYPECAST                       = 60;
    const TP_NUMBER                         = 61;
    const TP_DOT                            = 62;
    const TP_SINGLEQUOTESTRING              = 63;
    const TP_AT                             = 64;
    const TP_HATCH                          = 65;
    const TP_OPENB                          = 66;
    const TP_CLOSEB                         = 67;
    const TP_DOUBLECOLON                    = 68;
    const TP_QUOTE                          = 69;
    const TP_BACKTICK                       = 70;
    const TP_DOLLARID                       = 71;
    const TP_DQTAG                          = 72;
    const YY_NO_ACTION = 508;
    const YY_ACCEPT_ACTION = 507;
    const YY_ERROR_ACTION = 506;

    const YY_SZ_ACTTAB = 2018;
static public $yy_action = array(
 /*     0 */    28,    5,  137,  160,    6,   58,  456,  241,  456,   20,
 /*    10 */   107,  300,  296,  182,  221,  223,  324,  240,  307,   14,
 /*    20 */    74,  117,  124,   40,  146,    2,  302,  187,  115,  191,
 /*    30 */   105,  255,  119,  238,  265,  239,  234,  194,  282,  165,
 /*    40 */   183,   48,   47,  243,  228,  237,  200,  106,    1,  298,
 /*    50 */   169,   95,   62,  507,   59,  244,  226,  250,   28,  296,
 /*    60 */   154,   39,    6,   58,  194,  241,  256,    5,  107,  249,
 /*    70 */   226,  250,  221,  223,  324,  240,  194,   14,   80,  117,
 /*    80 */   124,   40,  205,  205,   45,  187,   99,   57,  285,  255,
 /*    90 */    12,  238,  265,  239,  234,   29,  282,  165,  119,   48,
 /*   100 */    47,  243,  228,  237,  100,  106,    1,  203,  284,   95,
 /*   110 */    12,  208,  285,  186,  289,   29,   28,   12,   49,  173,
 /*   120 */     6,   58,   29,  241,  179,  289,  107,  456,   96,  456,
 /*   130 */   221,  223,    9,  240,   20,   14,  138,  117,   38,   40,
 /*   140 */   317,  273,  275,  276,  278,  293,   11,  291,   94,  175,
 /*   150 */   303,  313,  251,  205,  456,  165,  456,   48,   47,  243,
 /*   160 */   228,  237,  110,  106,    1,  105,  205,   95,  206,  297,
 /*   170 */    11,  291,   94,  158,   28,    5,  140,  119,    6,   58,
 /*   180 */   322,  241,  296,   16,  107,  192,  232,  218,  221,  223,
 /*   190 */   190,  214,  253,   14,   12,  117,   12,   40,  185,   29,
 /*   200 */   209,   29,    5,  312,  119,  280,  119,  210,   44,  211,
 /*   210 */   204,  215,  192,  165,  205,   48,   47,  243,  228,  237,
 /*   220 */   309,  106,    1,  174,  289,   95,  149,  270,  456,    5,
 /*   230 */   456,  128,   28,  119,  154,  296,    6,   58,   37,  241,
 /*   240 */   308,   96,  107,  184,  205,    9,  221,  223,   35,  240,
 /*   250 */    57,   30,   13,  104,  170,   40,    6,   58,   57,  167,
 /*   260 */   119,  176,  107,  162,   61,  176,  221,  223,  296,   44,
 /*   270 */   247,  165,  296,   48,   47,  243,  228,  237,  119,  106,
 /*   280 */     1,    3,  157,   95,  176,  194,  136,  277,  194,  194,
 /*   290 */    28,  296,  154,  143,    6,   58,   37,  241,  245,   44,
 /*   300 */   107,  159,  296,  176,  221,  223,  116,  240,  194,   14,
 /*   310 */   296,  112,  274,   40,  217,  161,  210,  145,  259,  176,
 /*   320 */   105,  192,  151,   20,  181,  109,  296,  194,   17,  165,
 /*   330 */   147,   48,   47,  243,  228,  237,   65,  106,    1,  296,
 /*   340 */   155,   95,  176,  194,  108,    4,  194,  320,   28,  296,
 /*   350 */   166,  205,    6,   58,  321,  241,  191,  176,  107,  210,
 /*   360 */   205,  213,  221,  223,  192,  240,  194,   30,   37,  104,
 /*   370 */   306,   40,   37,  456,  315,  456,  119,   64,  251,  105,
 /*   380 */   314,  194,  311,   20,   20,  252,  197,  163,  101,   48,
 /*   390 */    47,  243,  228,  237,  150,  106,    1,  216,   15,   95,
 /*   400 */    57,  231,  304,  296,   19,  156,   28,  164,  135,   29,
 /*   410 */     6,   58,  171,  241,  296,  144,  107,  294,  212,   20,
 /*   420 */   221,  223,  205,  240,  296,   14,  224,  117,   20,   40,
 /*   430 */   139,  192,  189,   20,  168,  199,  194,  105,    8,  148,
 /*   440 */   207,   97,  220,  296,   20,  165,  142,   48,   47,  243,
 /*   450 */   228,  237,  191,  106,    1,  111,  290,   95,   35,   31,
 /*   460 */   193,  225,  263,  320,   28,  196,  154,  236,    6,   58,
 /*   470 */   301,  241,  246,  219,  107,  267,   34,   32,  221,  223,
 /*   480 */   133,  240,  299,    7,  286,  117,  177,   40,  125,  153,
 /*   490 */   152,   10,  178,  262,  113,  195,    8,  295,  281,  257,
 /*   500 */   309,   63,  172,  165,  288,   48,   47,  243,  228,  237,
 /*   510 */   292,  106,    1,   45,  256,   95,  264,   93,  242,    2,
 /*   520 */   103,  272,   28,  229,  141,   60,    6,   58,  297,  241,
 /*   530 */   297,  297,  107,  297,  297,  297,  221,  223,  205,  240,
 /*   540 */   297,   14,  297,  117,  297,   40,  297,  297,  297,  297,
 /*   550 */   297,  297,  297,  297,  297,  297,  297,  297,  297,  297,
 /*   560 */   297,  165,  297,   48,   47,  243,  228,  237,  205,  106,
 /*   570 */     1,  297,  297,   95,  297,  310,  297,   43,   41,   46,
 /*   580 */    25,   42,   18,   22,   21,  323,  319,   23,   24,  318,
 /*   590 */   316,   27,   26,  297,   36,  297,   12,  297,  297,  297,
 /*   600 */   297,   29,  297,  205,  297,  297,  305,   43,   41,   46,
 /*   610 */    25,   42,   18,   22,   21,  323,  319,   23,   24,  318,
 /*   620 */   316,   27,   26,  297,  297,  297,  297,  297,  297,  297,
 /*   630 */   297,   12,  297,  205,  297,  297,   29,  297,  297,  297,
 /*   640 */   297,  297,   43,   41,   46,   25,   42,   18,   22,   21,
 /*   650 */   323,  319,   23,   24,  318,  316,   27,   26,  297,  297,
 /*   660 */   297,   12,  297,  297,  297,  297,   29,  297,  297,  297,
 /*   670 */   297,  297,   43,   41,   46,   25,   42,   18,   22,   21,
 /*   680 */   323,  319,   23,   24,  318,  316,   27,   26,  248,  205,
 /*   690 */   261,  266,  254,  258,  271,  260,  268,  269,  233,  235,
 /*   700 */   175,  297,  297,   28,  297,  297,  297,    6,   58,  297,
 /*   710 */   297,  297,  297,  107,  297,  205,  297,  221,  223,  297,
 /*   720 */   297,  297,  297,  297,  297,  297,  222,  297,   43,   41,
 /*   730 */    46,   25,   42,   18,   22,   21,  323,  319,   23,   24,
 /*   740 */   318,  316,   27,   26,  180,  205,  297,  297,  297,  297,
 /*   750 */   297,  297,  297,  297,   43,   41,   46,   25,   42,   18,
 /*   760 */    22,   21,  323,  319,   23,   24,  318,  316,   27,   26,
 /*   770 */   297,  297,  297,  297,  297,  297,  297,  297,  297,  297,
 /*   780 */   297,  297,  297,  297,   43,   41,   46,   25,   42,   18,
 /*   790 */    22,   21,  323,  319,   23,   24,  318,  316,   27,   26,
 /*   800 */   205,   33,  297,  297,  423,  297,  297,  297,  297,  297,
 /*   810 */   297,  283,  297,  297,  297,  297,  297,  297,  297,  297,
 /*   820 */   297,  297,  297,  297,  423,  297,  423,  423,  297,  423,
 /*   830 */   423,  423,  297,  297,  423,  297,  423,    5,  423,   43,
 /*   840 */    41,   46,   25,   42,   18,   22,   21,  323,  319,   23,
 /*   850 */    24,  318,  316,   27,   26,  205,  423,  297,  305,  297,
 /*   860 */   297,  297,  297,  297,  297,  324,  297,  423,  119,   56,
 /*   870 */   423,  120,  297,  118,  297,  297,  187,  115,  297,  297,
 /*   880 */   255,  297,  238,  265,  239,  234,  297,  282,  297,  297,
 /*   890 */   297,  297,  297,  297,   43,   41,   46,   25,   42,   18,
 /*   900 */    22,   21,  323,  319,   23,   24,  318,  316,   27,   26,
 /*   910 */   205,  297,  324,  297,  297,  297,   67,  297,  120,  297,
 /*   920 */   213,  297,  297,  187,  115,  297,  297,  255,  297,  238,
 /*   930 */   265,  239,  234,  297,  282,  297,  297,  297,  297,  297,
 /*   940 */   297,  297,  297,  297,  297,  297,  297,  297,  297,   43,
 /*   950 */    41,   46,   25,   42,   18,   22,   21,  323,  319,   23,
 /*   960 */    24,  318,  316,   27,   26,  205,  297,  297,  297,  297,
 /*   970 */   297,  297,  324,  297,  297,  297,   74,  297,  124,  287,
 /*   980 */   297,  205,  297,  187,  115,  297,  297,  255,  188,  238,
 /*   990 */   265,  239,  234,  297,  282,  297,  297,  297,  297,  297,
 /*  1000 */   297,  297,  198,  297,   43,   41,   46,   25,   42,   18,
 /*  1010 */    22,   21,  323,  319,   23,   24,  318,  316,   27,   26,
 /*  1020 */    43,   41,   46,   25,   42,   18,   22,   21,  323,  319,
 /*  1030 */    23,   24,  318,  316,   27,   26,  297,  297,  297,  297,
 /*  1040 */   297,  297,  297,  297,  297,   43,   41,   46,   25,   42,
 /*  1050 */    18,   22,   21,  323,  319,   23,   24,  318,  316,   27,
 /*  1060 */    26,  324,  297,  297,  297,   74,  297,  124,  297,  297,
 /*  1070 */   297,  297,  187,  115,  297,  297,  255,  297,  238,  265,
 /*  1080 */   239,  234,  297,  282,  324,  297,  297,  297,   80,  297,
 /*  1090 */   124,  201,  297,  297,  297,  187,   99,  297,  297,  255,
 /*  1100 */   297,  238,  265,  239,  234,  324,  282,  297,  297,   74,
 /*  1110 */   297,  124,  297,  297,  297,  297,  187,  115,  279,  297,
 /*  1120 */   255,  297,  238,  265,  239,  234,  324,  282,  297,  297,
 /*  1130 */    78,  297,  124,  297,  297,  202,  297,  187,  115,  297,
 /*  1140 */   297,  255,  297,  238,  265,  239,  234,  297,  282,  297,
 /*  1150 */   324,  297,  297,  297,   81,  297,  124,  297,  297,  297,
 /*  1160 */   297,  187,  115,  297,  297,  255,  297,  238,  265,  239,
 /*  1170 */   234,  297,  282,  324,  297,  297,  297,   85,  297,  124,
 /*  1180 */   297,  297,  297,  297,  187,  115,  297,  297,  255,  297,
 /*  1190 */   238,  265,  239,  234,  324,  282,  297,  297,   82,  297,
 /*  1200 */   124,  297,  297,  297,  297,  187,  115,  297,  297,  255,
 /*  1210 */   297,  238,  265,  239,  234,  324,  282,  297,  297,   83,
 /*  1220 */   297,  124,  297,  297,  297,  297,  187,  115,  297,  297,
 /*  1230 */   255,  297,  238,  265,  239,  234,  297,  282,  297,  324,
 /*  1240 */   297,  297,  297,   90,  297,  124,  297,  297,  297,  297,
 /*  1250 */   187,  115,  297,  297,  255,  297,  238,  265,  239,  234,
 /*  1260 */   297,  282,  324,  297,  297,  297,   88,  297,  124,  297,
 /*  1270 */   297,  297,  297,  187,  115,  297,  297,  255,  297,  238,
 /*  1280 */   265,  239,  234,  324,  282,  297,  297,   84,  297,  124,
 /*  1290 */   297,  297,  297,  297,  187,  115,  297,  297,  255,  297,
 /*  1300 */   238,  265,  239,  234,  324,  282,  297,  297,   51,  297,
 /*  1310 */   124,  297,  297,  297,  297,  187,  115,  297,  297,  255,
 /*  1320 */   297,  238,  265,  239,  234,  297,  282,  297,  324,  297,
 /*  1330 */   297,  297,   68,  297,  124,  297,  297,  297,  297,  187,
 /*  1340 */   115,  297,  297,  255,  297,  238,  265,  239,  234,  297,
 /*  1350 */   282,  324,  297,  297,  297,   77,  297,  124,  297,  297,
 /*  1360 */   297,  297,  187,  114,  297,  297,  255,  297,  238,  265,
 /*  1370 */   239,  234,  324,  282,  297,  297,   54,  297,  102,  297,
 /*  1380 */   297,  297,  297,  187,  115,  297,  297,  255,  297,  238,
 /*  1390 */   265,  239,  234,  324,  282,  297,  297,   70,  297,  124,
 /*  1400 */   297,  297,  297,  297,  187,  115,  297,  297,  255,  297,
 /*  1410 */   238,  265,  239,  234,  297,  282,  297,  324,  297,  297,
 /*  1420 */   297,   71,  297,  124,  297,  297,  297,  297,  187,   98,
 /*  1430 */   297,  297,  255,  297,  238,  265,  239,  234,  297,  282,
 /*  1440 */   324,  297,  297,  297,   76,  297,  124,  297,  297,  297,
 /*  1450 */   297,  187,  121,  297,  297,  255,  297,  238,  265,  239,
 /*  1460 */   234,  324,  282,  297,  297,   69,  297,  124,  297,  297,
 /*  1470 */   297,  297,  187,  115,  297,  297,  255,  297,  230,  265,
 /*  1480 */   239,  234,  324,  282,  297,  297,   53,  297,  124,  297,
 /*  1490 */   297,  297,  297,  187,  115,  297,  297,  255,  297,  238,
 /*  1500 */   265,  239,  234,  297,  282,  297,  324,  297,  297,  297,
 /*  1510 */    66,  297,  124,  297,  297,  297,  297,  187,  115,  297,
 /*  1520 */   297,  255,  297,  238,  265,  239,  234,  297,  282,  324,
 /*  1530 */   297,  297,  297,   50,  297,  102,  297,  297,  297,  297,
 /*  1540 */   187,  115,  297,  297,  255,  297,  227,  265,  239,  234,
 /*  1550 */   324,  282,  297,  297,   67,  297,  124,  297,  297,  297,
 /*  1560 */   297,  187,  115,  297,  297,  255,  297,  238,  265,  239,
 /*  1570 */   234,  324,  282,  297,  297,   86,  297,  124,  297,  297,
 /*  1580 */   297,  297,  187,  115,  297,  297,  255,  297,  238,  265,
 /*  1590 */   239,  234,  297,  282,  297,  324,  297,  297,  297,   72,
 /*  1600 */   297,  124,  297,  297,  297,  297,  187,  115,  297,  297,
 /*  1610 */   255,  297,  238,  265,  239,  234,  297,  282,  324,  297,
 /*  1620 */   297,  297,   87,  297,  124,  297,  297,  297,  297,  187,
 /*  1630 */   115,  297,  297,  255,  297,  238,  265,  239,  234,  324,
 /*  1640 */   282,  297,  297,   55,  297,  124,  297,  297,  297,  297,
 /*  1650 */   187,  115,  297,  297,  255,  297,  238,  265,  239,  234,
 /*  1660 */   324,  282,  297,  297,   73,  297,  124,  297,  297,  297,
 /*  1670 */   297,  187,  115,  297,  297,  255,  297,  238,  265,  239,
 /*  1680 */   234,  297,  282,  297,  324,  297,  297,  297,   91,  297,
 /*  1690 */   124,  297,  297,  297,  297,  187,  115,  297,  297,  255,
 /*  1700 */   297,  238,  265,  239,  234,  297,  282,  324,  297,  297,
 /*  1710 */   297,   89,  297,  124,  297,  297,  297,  297,  187,  115,
 /*  1720 */   297,  297,  255,  297,  238,  265,  239,  234,  324,  282,
 /*  1730 */   297,  297,   92,  297,  124,  297,  297,  297,  297,  187,
 /*  1740 */   115,  297,  297,  255,  297,  238,  265,  239,  234,  324,
 /*  1750 */   282,  297,  297,   52,  297,  124,  297,  297,  297,  297,
 /*  1760 */   187,  115,  297,  297,  255,  297,  238,  265,  239,  234,
 /*  1770 */   297,  282,  297,  324,  297,  297,  297,   75,  297,  124,
 /*  1780 */   297,  297,  297,  297,  187,  115,  297,  297,  255,  297,
 /*  1790 */   238,  265,  239,  234,  297,  282,  324,  297,  297,  297,
 /*  1800 */    79,  297,  124,  297,  297,  297,  297,  187,  115,  297,
 /*  1810 */   297,  255,  297,  238,  265,  239,  234,  324,  282,  297,
 /*  1820 */   297,  297,  297,  124,  297,  297,  297,  297,  187,  123,
 /*  1830 */   297,  297,  297,  297,  238,  265,  239,  234,  324,  282,
 /*  1840 */   297,  297,  297,  297,  124,  297,  297,  297,  297,  187,
 /*  1850 */   130,  297,  297,  297,  297,  238,  265,  239,  234,  297,
 /*  1860 */   282,  297,  324,  297,  297,  297,  297,  297,  124,  297,
 /*  1870 */   297,  297,  297,  187,  129,  297,  297,  297,  297,  238,
 /*  1880 */   265,  239,  234,  297,  282,  324,  297,  297,  297,  297,
 /*  1890 */   297,  124,  297,  297,  297,  297,  187,  127,  297,  297,
 /*  1900 */   297,  297,  238,  265,  239,  234,  324,  282,  297,  297,
 /*  1910 */   297,  297,  124,  297,  297,  297,  297,  187,  134,  297,
 /*  1920 */   297,  297,  297,  238,  265,  239,  234,  324,  282,  297,
 /*  1930 */   297,  297,  297,  124,  297,  297,  297,  297,  187,  131,
 /*  1940 */   297,  297,  297,  297,  238,  265,  239,  234,  297,  282,
 /*  1950 */   297,  324,  297,  297,  297,  297,  297,  124,  297,  297,
 /*  1960 */   297,  297,  187,  122,  297,  297,  297,  297,  238,  265,
 /*  1970 */   239,  234,  297,  282,  324,  297,  297,  297,  297,  297,
 /*  1980 */   124,  297,  297,  297,  297,  187,  126,  297,  297,  297,
 /*  1990 */   297,  238,  265,  239,  234,  324,  282,  297,  297,  297,
 /*  2000 */   297,  124,  297,  297,  297,  297,  187,  132,  297,  297,
 /*  2010 */   297,  297,  238,  265,  239,  234,  297,  282,
    );
    static public $yy_lookahead = array(
 /*     0 */    18,   37,   20,   82,   22,   23,   18,   25,   20,   18,
 /*    10 */    28,   20,   91,   84,   32,   33,   77,   35,  105,   37,
 /*    20 */    81,   39,   83,   41,  100,   37,   35,   88,   89,  108,
 /*    30 */    39,   92,   68,   94,   95,   96,   97,  108,   99,   57,
 /*    40 */    84,   59,   60,   61,   62,   63,  107,   65,   66,   67,
 /*    50 */    82,   69,   84,   74,   75,   76,   77,   78,   18,   91,
 /*    60 */    20,   31,   22,   23,  108,   25,   98,   37,   28,   76,
 /*    70 */    77,   78,   32,   33,   77,   35,  108,   37,   81,   39,
 /*    80 */    83,   41,    1,    1,    2,   88,   89,   21,   12,   92,
 /*    90 */    29,   94,   95,   96,   97,   34,   99,   57,   68,   59,
 /*   100 */    60,   61,   62,   63,   88,   65,   66,  110,  111,   69,
 /*   110 */    29,    2,   12,  104,  105,   34,   18,   29,   20,   31,
 /*   120 */    22,   23,   34,   25,  104,  105,   28,   18,   62,   20,
 /*   130 */    32,   33,   66,   35,   18,   37,   20,   39,    2,   41,
 /*   140 */     6,    7,    8,    9,   10,   69,   70,   71,   72,   15,
 /*   150 */    16,   17,   93,    1,   18,   57,   20,   59,   60,   61,
 /*   160 */    62,   63,  103,   65,   66,   39,    1,   69,   20,   69,
 /*   170 */    70,   71,   72,   82,   18,   37,   20,   68,   22,   23,
 /*   180 */    83,   25,   91,   31,   28,   88,   21,   39,   32,   33,
 /*   190 */    93,   35,   29,   37,   29,   39,   29,   41,   31,   34,
 /*   200 */    62,   34,   37,  106,   68,   67,   68,   83,   56,   85,
 /*   210 */    86,   19,   88,   57,    1,   59,   60,   61,   62,   63,
 /*   220 */   101,   65,   66,  104,  105,   69,   82,  102,   18,   37,
 /*   230 */    20,  106,   18,   68,   20,   91,   22,   23,   36,   25,
 /*   240 */    38,   62,   28,   30,    1,   66,   32,   33,   19,   35,
 /*   250 */    21,   37,   18,   39,  100,   41,   22,   23,   21,   82,
 /*   260 */    68,   84,   28,   82,   84,   84,   32,   33,   91,   56,
 /*   270 */    20,   57,   91,   59,   60,   61,   62,   63,   68,   65,
 /*   280 */    66,   36,   82,   69,   84,  108,  112,  113,  108,  108,
 /*   290 */    18,   91,   20,   82,   22,   23,   36,   25,   38,   56,
 /*   300 */    28,   82,   91,   84,   32,   33,   25,   35,  108,   37,
 /*   310 */    91,   39,   67,   41,   64,  100,   83,   82,   85,   84,
 /*   320 */    39,   88,   84,   18,   24,   20,   91,  108,   87,   57,
 /*   330 */    82,   59,   60,   61,   62,   63,   36,   65,   66,   91,
 /*   340 */    82,   69,   84,  108,   39,   37,  108,  109,   18,   91,
 /*   350 */    20,    1,   22,   23,    4,   25,  108,   84,   28,   83,
 /*   360 */     1,   85,   32,   33,   88,   35,  108,   37,   36,   39,
 /*   370 */    38,   41,   36,   18,   38,   20,   68,   37,   93,   39,
 /*   380 */    78,  108,   80,   18,   18,   20,   20,   57,  103,   59,
 /*   390 */    60,   61,   62,   63,   82,   65,   66,   88,   19,   69,
 /*   400 */    21,   77,   93,   91,   29,   82,   18,   87,   20,   34,
 /*   410 */    22,   23,   84,   25,   91,   82,   28,   93,   20,   18,
 /*   420 */    32,   33,    1,   35,   91,   37,   83,   39,   18,   41,
 /*   430 */    20,   88,   93,   18,   82,   20,  108,   39,   37,  100,
 /*   440 */    64,   88,   21,   91,   18,   57,   20,   59,   60,   61,
 /*   450 */    62,   63,  108,   65,   66,   88,   70,   69,   19,   26,
 /*   460 */    20,   20,   20,  109,   18,   65,   20,   38,   22,   23,
 /*   470 */    20,   25,   20,   64,   28,   20,   19,   58,   32,   33,
 /*   480 */    20,   35,   20,   37,    4,   39,   20,   41,   20,  100,
 /*   490 */   100,   19,   90,   35,   20,   65,   37,    4,   67,    4,
 /*   500 */   101,   90,   90,   57,   91,   59,   60,   61,   62,   63,
 /*   510 */   113,   65,   66,    2,   98,   69,   98,   79,   98,   37,
 /*   520 */    88,   16,   18,   88,   20,  100,   22,   23,  114,   25,
 /*   530 */   114,  114,   28,  114,  114,  114,   32,   33,    1,   35,
 /*   540 */   114,   37,  114,   39,  114,   41,  114,  114,  114,  114,
 /*   550 */   114,  114,  114,  114,  114,  114,  114,  114,  114,  114,
 /*   560 */   114,   57,  114,   59,   60,   61,   62,   63,    1,   65,
 /*   570 */    66,  114,  114,   69,  114,   38,  114,   40,   41,   42,
 /*   580 */    43,   44,   45,   46,   47,   48,   49,   50,   51,   52,
 /*   590 */    53,   54,   55,  114,   27,  114,   29,  114,  114,  114,
 /*   600 */   114,   34,  114,    1,  114,  114,    4,   40,   41,   42,
 /*   610 */    43,   44,   45,   46,   47,   48,   49,   50,   51,   52,
 /*   620 */    53,   54,   55,  114,  114,  114,  114,  114,  114,  114,
 /*   630 */   114,   29,  114,    1,  114,  114,   34,  114,  114,  114,
 /*   640 */   114,  114,   40,   41,   42,   43,   44,   45,   46,   47,
 /*   650 */    48,   49,   50,   51,   52,   53,   54,   55,  114,  114,
 /*   660 */   114,   29,  114,  114,  114,  114,   34,  114,  114,  114,
 /*   670 */   114,  114,   40,   41,   42,   43,   44,   45,   46,   47,
 /*   680 */    48,   49,   50,   51,   52,   53,   54,   55,    3,    1,
 /*   690 */     5,    6,    7,    8,    9,   10,   11,   12,   13,   14,
 /*   700 */    15,  114,  114,   18,  114,  114,  114,   22,   23,  114,
 /*   710 */   114,  114,  114,   28,  114,    1,  114,   32,   33,  114,
 /*   720 */   114,  114,  114,  114,  114,  114,   38,  114,   40,   41,
 /*   730 */    42,   43,   44,   45,   46,   47,   48,   49,   50,   51,
 /*   740 */    52,   53,   54,   55,   30,    1,  114,  114,  114,  114,
 /*   750 */   114,  114,  114,  114,   40,   41,   42,   43,   44,   45,
 /*   760 */    46,   47,   48,   49,   50,   51,   52,   53,   54,   55,
 /*   770 */   114,  114,  114,  114,  114,  114,  114,  114,  114,  114,
 /*   780 */   114,  114,  114,  114,   40,   41,   42,   43,   44,   45,
 /*   790 */    46,   47,   48,   49,   50,   51,   52,   53,   54,   55,
 /*   800 */     1,    2,  114,  114,    4,  114,  114,  114,  114,  114,
 /*   810 */   114,   67,  114,  114,  114,  114,  114,  114,  114,  114,
 /*   820 */   114,  114,  114,  114,   24,  114,   26,   27,  114,   29,
 /*   830 */    30,   31,  114,  114,   34,  114,   36,   37,   38,   40,
 /*   840 */    41,   42,   43,   44,   45,   46,   47,   48,   49,   50,
 /*   850 */    51,   52,   53,   54,   55,    1,   56,  114,    4,  114,
 /*   860 */   114,  114,  114,  114,  114,   77,  114,   67,   68,   81,
 /*   870 */    70,   83,  114,   85,  114,  114,   88,   89,  114,  114,
 /*   880 */    92,  114,   94,   95,   96,   97,  114,   99,  114,  114,
 /*   890 */   114,  114,  114,  114,   40,   41,   42,   43,   44,   45,
 /*   900 */    46,   47,   48,   49,   50,   51,   52,   53,   54,   55,
 /*   910 */     1,  114,   77,  114,  114,  114,   81,  114,   83,  114,
 /*   920 */    85,  114,  114,   88,   89,  114,  114,   92,  114,   94,
 /*   930 */    95,   96,   97,  114,   99,  114,  114,  114,  114,  114,
 /*   940 */   114,  114,  114,  114,  114,  114,  114,  114,  114,   40,
 /*   950 */    41,   42,   43,   44,   45,   46,   47,   48,   49,   50,
 /*   960 */    51,   52,   53,   54,   55,    1,  114,  114,  114,  114,
 /*   970 */   114,  114,   77,  114,  114,  114,   81,  114,   83,   70,
 /*   980 */   114,    1,  114,   88,   89,  114,  114,   92,   24,   94,
 /*   990 */    95,   96,   97,  114,   99,  114,  114,  114,  114,  114,
 /*  1000 */   114,  114,  107,  114,   40,   41,   42,   43,   44,   45,
 /*  1010 */    46,   47,   48,   49,   50,   51,   52,   53,   54,   55,
 /*  1020 */    40,   41,   42,   43,   44,   45,   46,   47,   48,   49,
 /*  1030 */    50,   51,   52,   53,   54,   55,  114,  114,  114,  114,
 /*  1040 */   114,  114,  114,  114,  114,   40,   41,   42,   43,   44,
 /*  1050 */    45,   46,   47,   48,   49,   50,   51,   52,   53,   54,
 /*  1060 */    55,   77,  114,  114,  114,   81,  114,   83,  114,  114,
 /*  1070 */   114,  114,   88,   89,  114,  114,   92,  114,   94,   95,
 /*  1080 */    96,   97,  114,   99,   77,  114,  114,  114,   81,  114,
 /*  1090 */    83,  107,  114,  114,  114,   88,   89,  114,  114,   92,
 /*  1100 */   114,   94,   95,   96,   97,   77,   99,  114,  114,   81,
 /*  1110 */   114,   83,  114,  114,  114,  114,   88,   89,  111,  114,
 /*  1120 */    92,  114,   94,   95,   96,   97,   77,   99,  114,  114,
 /*  1130 */    81,  114,   83,  114,  114,  107,  114,   88,   89,  114,
 /*  1140 */   114,   92,  114,   94,   95,   96,   97,  114,   99,  114,
 /*  1150 */    77,  114,  114,  114,   81,  114,   83,  114,  114,  114,
 /*  1160 */   114,   88,   89,  114,  114,   92,  114,   94,   95,   96,
 /*  1170 */    97,  114,   99,   77,  114,  114,  114,   81,  114,   83,
 /*  1180 */   114,  114,  114,  114,   88,   89,  114,  114,   92,  114,
 /*  1190 */    94,   95,   96,   97,   77,   99,  114,  114,   81,  114,
 /*  1200 */    83,  114,  114,  114,  114,   88,   89,  114,  114,   92,
 /*  1210 */   114,   94,   95,   96,   97,   77,   99,  114,  114,   81,
 /*  1220 */   114,   83,  114,  114,  114,  114,   88,   89,  114,  114,
 /*  1230 */    92,  114,   94,   95,   96,   97,  114,   99,  114,   77,
 /*  1240 */   114,  114,  114,   81,  114,   83,  114,  114,  114,  114,
 /*  1250 */    88,   89,  114,  114,   92,  114,   94,   95,   96,   97,
 /*  1260 */   114,   99,   77,  114,  114,  114,   81,  114,   83,  114,
 /*  1270 */   114,  114,  114,   88,   89,  114,  114,   92,  114,   94,
 /*  1280 */    95,   96,   97,   77,   99,  114,  114,   81,  114,   83,
 /*  1290 */   114,  114,  114,  114,   88,   89,  114,  114,   92,  114,
 /*  1300 */    94,   95,   96,   97,   77,   99,  114,  114,   81,  114,
 /*  1310 */    83,  114,  114,  114,  114,   88,   89,  114,  114,   92,
 /*  1320 */   114,   94,   95,   96,   97,  114,   99,  114,   77,  114,
 /*  1330 */   114,  114,   81,  114,   83,  114,  114,  114,  114,   88,
 /*  1340 */    89,  114,  114,   92,  114,   94,   95,   96,   97,  114,
 /*  1350 */    99,   77,  114,  114,  114,   81,  114,   83,  114,  114,
 /*  1360 */   114,  114,   88,   89,  114,  114,   92,  114,   94,   95,
 /*  1370 */    96,   97,   77,   99,  114,  114,   81,  114,   83,  114,
 /*  1380 */   114,  114,  114,   88,   89,  114,  114,   92,  114,   94,
 /*  1390 */    95,   96,   97,   77,   99,  114,  114,   81,  114,   83,
 /*  1400 */   114,  114,  114,  114,   88,   89,  114,  114,   92,  114,
 /*  1410 */    94,   95,   96,   97,  114,   99,  114,   77,  114,  114,
 /*  1420 */   114,   81,  114,   83,  114,  114,  114,  114,   88,   89,
 /*  1430 */   114,  114,   92,  114,   94,   95,   96,   97,  114,   99,
 /*  1440 */    77,  114,  114,  114,   81,  114,   83,  114,  114,  114,
 /*  1450 */   114,   88,   89,  114,  114,   92,  114,   94,   95,   96,
 /*  1460 */    97,   77,   99,  114,  114,   81,  114,   83,  114,  114,
 /*  1470 */   114,  114,   88,   89,  114,  114,   92,  114,   94,   95,
 /*  1480 */    96,   97,   77,   99,  114,  114,   81,  114,   83,  114,
 /*  1490 */   114,  114,  114,   88,   89,  114,  114,   92,  114,   94,
 /*  1500 */    95,   96,   97,  114,   99,  114,   77,  114,  114,  114,
 /*  1510 */    81,  114,   83,  114,  114,  114,  114,   88,   89,  114,
 /*  1520 */   114,   92,  114,   94,   95,   96,   97,  114,   99,   77,
 /*  1530 */   114,  114,  114,   81,  114,   83,  114,  114,  114,  114,
 /*  1540 */    88,   89,  114,  114,   92,  114,   94,   95,   96,   97,
 /*  1550 */    77,   99,  114,  114,   81,  114,   83,  114,  114,  114,
 /*  1560 */   114,   88,   89,  114,  114,   92,  114,   94,   95,   96,
 /*  1570 */    97,   77,   99,  114,  114,   81,  114,   83,  114,  114,
 /*  1580 */   114,  114,   88,   89,  114,  114,   92,  114,   94,   95,
 /*  1590 */    96,   97,  114,   99,  114,   77,  114,  114,  114,   81,
 /*  1600 */   114,   83,  114,  114,  114,  114,   88,   89,  114,  114,
 /*  1610 */    92,  114,   94,   95,   96,   97,  114,   99,   77,  114,
 /*  1620 */   114,  114,   81,  114,   83,  114,  114,  114,  114,   88,
 /*  1630 */    89,  114,  114,   92,  114,   94,   95,   96,   97,   77,
 /*  1640 */    99,  114,  114,   81,  114,   83,  114,  114,  114,  114,
 /*  1650 */    88,   89,  114,  114,   92,  114,   94,   95,   96,   97,
 /*  1660 */    77,   99,  114,  114,   81,  114,   83,  114,  114,  114,
 /*  1670 */   114,   88,   89,  114,  114,   92,  114,   94,   95,   96,
 /*  1680 */    97,  114,   99,  114,   77,  114,  114,  114,   81,  114,
 /*  1690 */    83,  114,  114,  114,  114,   88,   89,  114,  114,   92,
 /*  1700 */   114,   94,   95,   96,   97,  114,   99,   77,  114,  114,
 /*  1710 */   114,   81,  114,   83,  114,  114,  114,  114,   88,   89,
 /*  1720 */   114,  114,   92,  114,   94,   95,   96,   97,   77,   99,
 /*  1730 */   114,  114,   81,  114,   83,  114,  114,  114,  114,   88,
 /*  1740 */    89,  114,  114,   92,  114,   94,   95,   96,   97,   77,
 /*  1750 */    99,  114,  114,   81,  114,   83,  114,  114,  114,  114,
 /*  1760 */    88,   89,  114,  114,   92,  114,   94,   95,   96,   97,
 /*  1770 */   114,   99,  114,   77,  114,  114,  114,   81,  114,   83,
 /*  1780 */   114,  114,  114,  114,   88,   89,  114,  114,   92,  114,
 /*  1790 */    94,   95,   96,   97,  114,   99,   77,  114,  114,  114,
 /*  1800 */    81,  114,   83,  114,  114,  114,  114,   88,   89,  114,
 /*  1810 */   114,   92,  114,   94,   95,   96,   97,   77,   99,  114,
 /*  1820 */   114,  114,  114,   83,  114,  114,  114,  114,   88,   89,
 /*  1830 */   114,  114,  114,  114,   94,   95,   96,   97,   77,   99,
 /*  1840 */   114,  114,  114,  114,   83,  114,  114,  114,  114,   88,
 /*  1850 */    89,  114,  114,  114,  114,   94,   95,   96,   97,  114,
 /*  1860 */    99,  114,   77,  114,  114,  114,  114,  114,   83,  114,
 /*  1870 */   114,  114,  114,   88,   89,  114,  114,  114,  114,   94,
 /*  1880 */    95,   96,   97,  114,   99,   77,  114,  114,  114,  114,
 /*  1890 */   114,   83,  114,  114,  114,  114,   88,   89,  114,  114,
 /*  1900 */   114,  114,   94,   95,   96,   97,   77,   99,  114,  114,
 /*  1910 */   114,  114,   83,  114,  114,  114,  114,   88,   89,  114,
 /*  1920 */   114,  114,  114,   94,   95,   96,   97,   77,   99,  114,
 /*  1930 */   114,  114,  114,   83,  114,  114,  114,  114,   88,   89,
 /*  1940 */   114,  114,  114,  114,   94,   95,   96,   97,  114,   99,
 /*  1950 */   114,   77,  114,  114,  114,  114,  114,   83,  114,  114,
 /*  1960 */   114,  114,   88,   89,  114,  114,  114,  114,   94,   95,
 /*  1970 */    96,   97,  114,   99,   77,  114,  114,  114,  114,  114,
 /*  1980 */    83,  114,  114,  114,  114,   88,   89,  114,  114,  114,
 /*  1990 */   114,   94,   95,   96,   97,   77,   99,  114,  114,  114,
 /*  2000 */   114,   83,  114,  114,  114,  114,   88,   89,  114,  114,
 /*  2010 */   114,  114,   94,   95,   96,   97,  114,   99,
);
    const YY_SHIFT_USE_DFLT = -37;
    const YY_SHIFT_MAX = 232;
    static public $yy_shift_ofst = array(
 /*     0 */   685,  504,   40,  504,   40,   40,  446,  446,   40,  -18,
 /*    10 */    40,   40,  156,   98,   40,   40,   40,   40,   40,  156,
 /*    20 */    40,   40,   40,   40,   40,   40,   40,   40,   98,   40,
 /*    30 */    40,   40,  272,   40,   40,   40,   40,   40,  388,   40,
 /*    40 */   214,  214,  214,  214,  330,  214,  214,  214,  214,  165,
 /*    50 */   602,  567,  632,  632,  632,  632,  632,  305,  340,  685,
 /*    60 */    66,   81,   81,   82,  340,  340,  744,  688,  537,  909,
 /*    70 */   854,  714,  964,  799,  980,  980,  980,  980,  980,  980,
 /*    80 */   980,  980,  980,  980,  980,  980,  980,  980,  980,  980,
 /*    90 */   980, 1005, 1005,  134,  234,  100,   -9,  167,  213,  152,
 /*   100 */    88,  365,  379,   61,  426,  415,  398,  375,  366,  401,
 /*   110 */   365,   61,  410,  421,  243,  243,   61,  116,   61,  148,
 /*   120 */   229,  243,  359,  359,  237,  359,  359,  359,  237,  359,
 /*   130 */   359,  359,  359,  359,  -37,  800,   76,  138,  109,  136,
 /*   140 */   192,   30,  210,   61,   61,   61,  179,   61,  179,   61,
 /*   150 */    61,  350,  179,  179,  -36,   61,   61,   61,   61,   61,
 /*   160 */    61,  179,   61,  308,  281,  308,  -36,   61,   61,   61,
 /*   170 */   179,  359,  511,  126,  237,  505,  359,  482,  511,  237,
 /*   180 */   126,  163,  359,  359,  126,  126,  237,  376,  163,  -37,
 /*   190 */   -37,  -37,  -37,  -37,  -37,  -37,  -37,  -12,  202,  355,
 /*   200 */   260,  332,  336,  245,  300,  250,  459,  462,  442,  441,
 /*   210 */   439,  433,  400,  429,  457,  455,  409,  452,  466,  450,
 /*   220 */   460,  440,  419,  474,  430,  431,  495,  493,  458,  472,
 /*   230 */   386,  480,  468,
);
    const YY_REDUCE_USE_DFLT = -88;
    const YY_REDUCE_MAX = 196;
    static public $yy_reduce_ofst = array(
 /*     0 */   -21,   -3, 1028, 1007,  984,  895,  788,  835,  -61, 1429,
 /*    10 */  1405, 1384, 1363, 1452, 1473, 1562, 1541, 1518, 1494, 1340,
 /*    20 */  1316, 1162, 1138, 1117, 1073, 1096, 1185, 1206, 1295, 1274,
 /*    30 */  1251, 1227, 1583, 1607, 1696, 1049, 1672, 1719, 1651, 1630,
 /*    40 */  1897, 1850, 1740, 1761, 1874, 1829, 1918, 1808, 1785,  -32,
 /*    50 */   200,  235,  258,  219,  200,  181,  177,   97,  124,   -7,
 /*    60 */   119,  -79,  248,  238,  276,  233,  273,  273,  273,  273,
 /*    70 */   273,  273,  273,  273,  273,  273,  273,  273,  273,  273,
 /*    80 */   273,  273,  273,  273,  273,  273,  273,  273,  273,  273,
 /*    90 */   273,  273,  273,  302,  324,  174,  309,  312,  -71,  -71,
 /*   100 */   211,  285,   20,  352,   59,   59,  343,  323,   59,  339,
 /*   110 */   285,  333,   59,  328,  -71,  -71,  144,   59,   91,  125,
 /*   120 */    20,  -71,  -71,  -71,   20,  180,  -71,  -71,    9,  -71,
 /*   130 */   -71,  -71,  -71,  -44,  -71,  416,  397,  416,  418,  418,
 /*   140 */   416,  416,  418,  413,  413,  413,  399,  413,  399,  413,
 /*   150 */   413,  344,  399,  399,  416,  413,  413,  413,  413,  413,
 /*   160 */   413,  399,  413,  420,  435,  420,  416,  413,  413,  413,
 /*   170 */   399,  344,  354,  432,  -87,  438,  344,  425,  354,  -87,
 /*   180 */    16,  241,  344,  344,  353,  367,  -87,  215,  320,  -76,
 /*   190 */   154,  412,  215,  411,  402,  390,  389,
);
    static public $yyExpectedTokens = array(
        /* 0 */ array(3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 22, 23, 28, 32, 33, ),
        /* 1 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 2 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 3 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 4 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 5 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 6 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 7 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 8 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 9 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 67, 69, ),
        /* 10 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 11 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 12 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 13 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 14 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 15 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 16 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 17 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 18 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 19 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 20 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 21 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 22 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 23 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 24 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 25 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 26 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 27 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 28 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 29 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 30 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 31 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 32 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 33 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 34 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 35 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 36 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 37 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 38 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 39 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 40 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 41 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 42 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 43 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 44 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 45 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 46 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 47 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 48 */ array(18, 20, 22, 23, 25, 28, 32, 33, 35, 37, 39, 41, 57, 59, 60, 61, 62, 63, 65, 66, 69, ),
        /* 49 */ array(1, 21, 29, 34, 37, 68, ),
        /* 50 */ array(1, 4, 29, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 51 */ array(1, 27, 29, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 52 */ array(1, 29, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 53 */ array(1, 29, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 54 */ array(1, 29, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 55 */ array(1, 29, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 56 */ array(1, 29, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 57 */ array(18, 20, 39, ),
        /* 58 */ array(37, 39, ),
        /* 59 */ array(3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 22, 23, 28, 32, 33, ),
        /* 60 */ array(21, 62, 66, ),
        /* 61 */ array(1, 29, 34, ),
        /* 62 */ array(1, 29, 34, ),
        /* 63 */ array(1, 2, ),
        /* 64 */ array(37, 39, ),
        /* 65 */ array(37, 39, ),
        /* 66 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 67, ),
        /* 67 */ array(1, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 68 */ array(1, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 69 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 70, ),
        /* 70 */ array(1, 4, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 71 */ array(1, 30, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 72 */ array(1, 24, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 73 */ array(1, 2, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 74 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 75 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 76 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 77 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 78 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 79 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 80 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 81 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 82 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 83 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 84 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 85 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 86 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 87 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 88 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 89 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 90 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 91 */ array(40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 92 */ array(40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, ),
        /* 93 */ array(6, 7, 8, 9, 10, 15, 16, 17, ),
        /* 94 */ array(18, 22, 23, 28, 32, 33, ),
        /* 95 */ array(12, 69, 70, 71, 72, ),
        /* 96 */ array(18, 20, 35, 39, ),
        /* 97 */ array(29, 31, 34, ),
        /* 98 */ array(1, 30, 56, ),
        /* 99 */ array(1, 31, 56, ),
        /* 100 */ array(29, 31, 34, ),
        /* 101 */ array(18, 20, ),
        /* 102 */ array(19, 21, ),
        /* 103 */ array(29, 34, ),
        /* 104 */ array(18, 20, ),
        /* 105 */ array(18, 20, ),
        /* 106 */ array(20, 39, ),
        /* 107 */ array(29, 34, ),
        /* 108 */ array(18, 20, ),
        /* 109 */ array(18, 37, ),
        /* 110 */ array(18, 20, ),
        /* 111 */ array(29, 34, ),
        /* 112 */ array(18, 20, ),
        /* 113 */ array(1, 21, ),
        /* 114 */ array(1, 56, ),
        /* 115 */ array(1, 56, ),
        /* 116 */ array(29, 34, ),
        /* 117 */ array(18, 20, ),
        /* 118 */ array(29, 34, ),
        /* 119 */ array(20, 39, ),
        /* 120 */ array(19, 21, ),
        /* 121 */ array(1, 56, ),
        /* 122 */ array(1, ),
        /* 123 */ array(1, ),
        /* 124 */ array(21, ),
        /* 125 */ array(1, ),
        /* 126 */ array(1, ),
        /* 127 */ array(1, ),
        /* 128 */ array(21, ),
        /* 129 */ array(1, ),
        /* 130 */ array(1, ),
        /* 131 */ array(1, ),
        /* 132 */ array(1, ),
        /* 133 */ array(1, ),
        /* 134 */ array(),
        /* 135 */ array(4, 24, 26, 27, 29, 30, 31, 34, 36, 37, 38, 56, 67, 68, 70, ),
        /* 136 */ array(12, 69, 70, 71, 72, ),
        /* 137 */ array(37, 62, 67, 68, ),
        /* 138 */ array(2, 18, 20, 68, ),
        /* 139 */ array(2, 18, 20, 68, ),
        /* 140 */ array(19, 37, 68, ),
        /* 141 */ array(31, 37, 68, ),
        /* 142 */ array(18, 20, 68, ),
        /* 143 */ array(29, 34, ),
        /* 144 */ array(29, 34, ),
        /* 145 */ array(29, 34, ),
        /* 146 */ array(62, 66, ),
        /* 147 */ array(29, 34, ),
        /* 148 */ array(62, 66, ),
        /* 149 */ array(29, 34, ),
        /* 150 */ array(29, 34, ),
        /* 151 */ array(1, 4, ),
        /* 152 */ array(62, 66, ),
        /* 153 */ array(62, 66, ),
        /* 154 */ array(37, 68, ),
        /* 155 */ array(29, 34, ),
        /* 156 */ array(29, 34, ),
        /* 157 */ array(29, 34, ),
        /* 158 */ array(29, 34, ),
        /* 159 */ array(29, 34, ),
        /* 160 */ array(29, 34, ),
        /* 161 */ array(62, 66, ),
        /* 162 */ array(29, 34, ),
        /* 163 */ array(37, 68, ),
        /* 164 */ array(25, 39, ),
        /* 165 */ array(37, 68, ),
        /* 166 */ array(37, 68, ),
        /* 167 */ array(29, 34, ),
        /* 168 */ array(29, 34, ),
        /* 169 */ array(29, 34, ),
        /* 170 */ array(62, 66, ),
        /* 171 */ array(1, ),
        /* 172 */ array(2, ),
        /* 173 */ array(39, ),
        /* 174 */ array(21, ),
        /* 175 */ array(16, ),
        /* 176 */ array(1, ),
        /* 177 */ array(37, ),
        /* 178 */ array(2, ),
        /* 179 */ array(21, ),
        /* 180 */ array(39, ),
        /* 181 */ array(29, ),
        /* 182 */ array(1, ),
        /* 183 */ array(1, ),
        /* 184 */ array(39, ),
        /* 185 */ array(39, ),
        /* 186 */ array(21, ),
        /* 187 */ array(64, ),
        /* 188 */ array(29, ),
        /* 189 */ array(),
        /* 190 */ array(),
        /* 191 */ array(),
        /* 192 */ array(),
        /* 193 */ array(),
        /* 194 */ array(),
        /* 195 */ array(),
        /* 196 */ array(),
        /* 197 */ array(18, 20, 37, ),
        /* 198 */ array(36, 38, ),
        /* 199 */ array(18, 20, ),
        /* 200 */ array(36, 38, ),
        /* 201 */ array(36, 38, ),
        /* 202 */ array(36, 38, ),
        /* 203 */ array(36, 67, ),
        /* 204 */ array(24, 36, ),
        /* 205 */ array(20, 64, ),
        /* 206 */ array(37, ),
        /* 207 */ array(20, ),
        /* 208 */ array(20, ),
        /* 209 */ array(20, ),
        /* 210 */ array(19, ),
        /* 211 */ array(26, ),
        /* 212 */ array(65, ),
        /* 213 */ array(38, ),
        /* 214 */ array(19, ),
        /* 215 */ array(20, ),
        /* 216 */ array(64, ),
        /* 217 */ array(20, ),
        /* 218 */ array(20, ),
        /* 219 */ array(20, ),
        /* 220 */ array(20, ),
        /* 221 */ array(20, ),
        /* 222 */ array(58, ),
        /* 223 */ array(20, ),
        /* 224 */ array(65, ),
        /* 225 */ array(67, ),
        /* 226 */ array(4, ),
        /* 227 */ array(4, ),
        /* 228 */ array(35, ),
        /* 229 */ array(19, ),
        /* 230 */ array(70, ),
        /* 231 */ array(4, ),
        /* 232 */ array(20, ),
        /* 233 */ array(),
        /* 234 */ array(),
        /* 235 */ array(),
        /* 236 */ array(),
        /* 237 */ array(),
        /* 238 */ array(),
        /* 239 */ array(),
        /* 240 */ array(),
        /* 241 */ array(),
        /* 242 */ array(),
        /* 243 */ array(),
        /* 244 */ array(),
        /* 245 */ array(),
        /* 246 */ array(),
        /* 247 */ array(),
        /* 248 */ array(),
        /* 249 */ array(),
        /* 250 */ array(),
        /* 251 */ array(),
        /* 252 */ array(),
        /* 253 */ array(),
        /* 254 */ array(),
        /* 255 */ array(),
        /* 256 */ array(),
        /* 257 */ array(),
        /* 258 */ array(),
        /* 259 */ array(),
        /* 260 */ array(),
        /* 261 */ array(),
        /* 262 */ array(),
        /* 263 */ array(),
        /* 264 */ array(),
        /* 265 */ array(),
        /* 266 */ array(),
        /* 267 */ array(),
        /* 268 */ array(),
        /* 269 */ array(),
        /* 270 */ array(),
        /* 271 */ array(),
        /* 272 */ array(),
        /* 273 */ array(),
        /* 274 */ array(),
        /* 275 */ array(),
        /* 276 */ array(),
        /* 277 */ array(),
        /* 278 */ array(),
        /* 279 */ array(),
        /* 280 */ array(),
        /* 281 */ array(),
        /* 282 */ array(),
        /* 283 */ array(),
        /* 284 */ array(),
        /* 285 */ array(),
        /* 286 */ array(),
        /* 287 */ array(),
        /* 288 */ array(),
        /* 289 */ array(),
        /* 290 */ array(),
        /* 291 */ array(),
        /* 292 */ array(),
        /* 293 */ array(),
        /* 294 */ array(),
        /* 295 */ array(),
        /* 296 */ array(),
        /* 297 */ array(),
        /* 298 */ array(),
        /* 299 */ array(),
        /* 300 */ array(),
        /* 301 */ array(),
        /* 302 */ array(),
        /* 303 */ array(),
        /* 304 */ array(),
        /* 305 */ array(),
        /* 306 */ array(),
        /* 307 */ array(),
        /* 308 */ array(),
        /* 309 */ array(),
        /* 310 */ array(),
        /* 311 */ array(),
        /* 312 */ array(),
        /* 313 */ array(),
        /* 314 */ array(),
        /* 315 */ array(),
        /* 316 */ array(),
        /* 317 */ array(),
        /* 318 */ array(),
        /* 319 */ array(),
        /* 320 */ array(),
        /* 321 */ array(),
        /* 322 */ array(),
        /* 323 */ array(),
        /* 324 */ array(),
);
    static public $yy_default = array(
 /*     0 */   328,  488,  472,  506,  472,  472,  506,  506,  472,  506,
 /*    10 */   506,  506,  506,  506,  506,  506,  506,  506,  506,  506,
 /*    20 */   506,  506,  506,  506,  506,  506,  506,  506,  506,  506,
 /*    30 */   506,  506,  506,  506,  506,  506,  506,  506,  506,  506,
 /*    40 */   506,  506,  506,  506,  506,  506,  506,  506,  506,  377,
 /*    50 */   506,  377,  377,  377,  377,  377,  377,  506,  506,  325,
 /*    60 */   483,  377,  377,  369,  506,  506,  506,  506,  506,  506,
 /*    70 */   506,  382,  506,  506,  471,  384,  382,  379,  387,  470,
 /*    80 */   491,  404,  403,  399,  407,  396,  398,  489,  408,  490,
 /*    90 */   400,  414,  413,  506,  503,  506,  506,  377,  383,  389,
 /*   100 */   377,  455,  435,  377,  506,  506,  506,  377,  506,  442,
 /*   110 */   454,  377,  506,  371,  380,  389,  377,  506,  377,  506,
 /*   120 */   435,  383,  411,  397,  435,  506,  416,  418,  480,  417,
 /*   130 */   392,  393,  394,  373,  479,  391,  506,  423,  453,  453,
 /*   140 */   381,  423,  453,  367,  366,  362,  464,  356,  461,  361,
 /*   150 */   365,  506,  439,  438,  423,  363,  364,  353,  359,  360,
 /*   160 */   357,  440,  354,  410,  506,  431,  409,  358,  368,  355,
 /*   170 */   463,  372,  473,  506,  484,  345,  395,  442,  474,  458,
 /*   180 */   506,  505,  434,  374,  506,  506,  481,  442,  505,  442,
 /*   190 */   442,  478,  442,  478,  478,  442,  442,  453,  506,  453,
 /*   200 */   506,  506,  506,  506,  506,  506,  482,  506,  506,  506,
 /*   210 */   506,  385,  506,  506,  420,  506,  443,  506,  506,  506,
 /*   220 */   506,  506,  425,  506,  506,  506,  506,  415,  506,  506,
 /*   230 */   415,  506,  506,  340,  427,  341,  388,  426,  415,  424,
 /*   240 */   420,  428,  430,  419,  326,  468,  475,  476,  329,  327,
 /*   250 */   332,  457,  456,  504,  334,  390,  429,  330,  335,  386,
 /*   260 */   337,  331,  422,  391,  432,  421,  333,  378,  338,  339,
 /*   270 */   452,  336,  342,  350,  485,  351,  352,  495,  349,  487,
 /*   280 */   448,  449,  437,  450,  486,  502,  501,  497,  375,  459,
 /*   290 */   496,  498,  494,  493,  500,  499,  376,  492,  451,  436,
 /*   300 */   445,  444,  446,  343,  447,  412,  467,  460,  466,  441,
 /*   310 */   425,  344,  465,  347,  346,  469,  406,  348,  405,  402,
 /*   320 */   477,  370,  462,  401,  433,
);
    const YYNOCODE = 115;
    const YYSTACKDEPTH = 500;
    const YYNSTATE = 325;
    const YYNRULE = 181;
    const YYERRORSYMBOL = 73;
    const YYERRSYMDT = 'yy0';
    const YYFALLBACK = 0;
    public static $yyFallback = array(
    );
    public static function Trace($TraceFILE, $zTracePrompt)
    {
        if (!$TraceFILE) {
            $zTracePrompt = 0;
        } elseif (!$zTracePrompt) {
            $TraceFILE = 0;
        }
        self::$yyTraceFILE = $TraceFILE;
        self::$yyTracePrompt = $zTracePrompt;
    }

    public static function PrintTrace()
    {
        self::$yyTraceFILE = fopen('php://output', 'w');
        self::$yyTracePrompt = '<br>';
    }

    public static $yyTraceFILE;
    public static $yyTracePrompt;
    public $yyidx;                    /* Index of top element in stack */
    public $yyerrcnt;                 /* Shifts left before out of the error */
    public $yystack = array();  /* The parser's stack */

    public $yyTokenName = array(
  '$',             'VERT',          'COLON',         'TEMPLATEINIT',
  'RDEL',          'COMMENT',       'PHPSTARTTAG',   'PHPENDTAG',   
  'ASPSTARTTAG',   'ASPENDTAG',     'FAKEPHPSTARTTAG',  'XMLTAG',      
  'TEXT',          'STRIPON',       'STRIPOFF',      'LITERALSTART',
  'LITERALEND',    'LITERAL',       'LDEL',          'EQUAL',       
  'ID',            'PTR',           'LDELIF',        'LDELFOR',     
  'SEMICOLON',     'IDINCDEC',      'TO',            'STEP',        
  'LDELFOREACH',   'SPACE',         'AS',            'APTR',        
  'LDELSETFILTER',  'LDELSLASH',     'ATTR',          'INTEGER',     
  'COMMA',         'OPENP',         'CLOSEP',        'DOLLAR',      
  'MATH',          'UNIMATH',       'ANDSYM',        'IFCOND',      
  'ISIN',          'LOP',           'ISDIVBY',       'ISNOTDIVBY',  
  'ISEVEN',        'ISNOTEVEN',     'ISEVENBY',      'ISNOTEVENBY', 
  'ISODD',         'ISNOTODD',      'ISODDBY',       'ISNOTODDBY',  
  'INSTANCEOF',    'NAMESPACE',     'QMARK',         'NOT',         
  'TYPECAST',      'NUMBER',        'DOT',           'SINGLEQUOTESTRING',
  'AT',            'HATCH',         'OPENB',         'CLOSEB',      
  'DOUBLECOLON',   'QUOTE',         'BACKTICK',      'DOLLARID',    
  'DQTAG',         'error',         'start',         'template',    
  'template_element',  'smartytag',     'literal',       'literal_elements',
  'literal_element',  'expr',          'attributes',    'varindexed',  
  'modifierlist',  'statement',     'statements',    'optspace',    
  'varvar',        'value',         'modparameters',  'attribute',   
  'ternary',       'ldelexprrdel',  'variable',      'array',       
  'function',      'doublequoted_with_quotes',  'static',        'object',      
  'arrayindex',    'indexdef',      'static_class_access',  'varvarele',   
  'objectchain',   'objectelement',  'method',        'params',      
  'modifier',      'modparameter',  'arrayelements',  'arrayelement',
  'doublequoted',  'doublequotedcontent',
    );

    public static $yyRuleName = array(
 /*   0 */ "start ::= template",
 /*   1 */ "template ::= template_element",
 /*   2 */ "template ::= template template_element",
 /*   3 */ "template ::=",
 /*   4 */ "template_element ::= TEMPLATEINIT",
 /*   5 */ "template_element ::= smartytag RDEL",
 /*   6 */ "template_element ::= COMMENT",
 /*   7 */ "template_element ::= literal",
 /*   8 */ "template_element ::= PHPSTARTTAG",
 /*   9 */ "template_element ::= PHPENDTAG",
 /*  10 */ "template_element ::= ASPSTARTTAG",
 /*  11 */ "template_element ::= ASPENDTAG",
 /*  12 */ "template_element ::= FAKEPHPSTARTTAG",
 /*  13 */ "template_element ::= XMLTAG",
 /*  14 */ "template_element ::= TEXT",
 /*  15 */ "template_element ::= STRIPON",
 /*  16 */ "template_element ::= STRIPOFF",
 /*  17 */ "literal ::= LITERALSTART LITERALEND",
 /*  18 */ "literal ::= LITERALSTART literal_elements LITERALEND",
 /*  19 */ "literal_elements ::= literal_elements literal_element",
 /*  20 */ "literal_elements ::=",
 /*  21 */ "literal_element ::= literal",
 /*  22 */ "literal_element ::= LITERAL",
 /*  23 */ "literal_element ::= PHPSTARTTAG",
 /*  24 */ "literal_element ::= FAKEPHPSTARTTAG",
 /*  25 */ "literal_element ::= PHPENDTAG",
 /*  26 */ "literal_element ::= ASPSTARTTAG",
 /*  27 */ "literal_element ::= ASPENDTAG",
 /*  28 */ "smartytag ::= LDEL expr attributes",
 /*  29 */ "smartytag ::= LDEL varindexed EQUAL expr attributes",
 /*  30 */ "smartytag ::= LDEL ID attributes",
 /*  31 */ "smartytag ::= LDEL ID modifierlist attributes",
 /*  32 */ "smartytag ::= LDEL ID PTR ID modifierlist attributes",
 /*  33 */ "smartytag ::= LDELIF expr attributes",
 /*  34 */ "smartytag ::= LDELIF statement attributes",
 /*  35 */ "smartytag ::= LDELFOR statements SEMICOLON optspace expr SEMICOLON optspace varvar EQUAL expr attributes",
 /*  36 */ "smartytag ::= LDELFOR statements SEMICOLON optspace expr SEMICOLON optspace IDINCDEC attributes",
 /*  37 */ "smartytag ::= LDELFOR statement TO expr attributes",
 /*  38 */ "smartytag ::= LDELFOR statement TO expr STEP expr attributes",
 /*  39 */ "smartytag ::= LDELFOREACH attributes",
 /*  40 */ "smartytag ::= LDELFOREACH SPACE value AS varvar attributes",
 /*  41 */ "smartytag ::= LDELFOREACH SPACE value AS varvar APTR varvar attributes",
 /*  42 */ "smartytag ::= LDELFOREACH SPACE expr AS varvar attributes",
 /*  43 */ "smartytag ::= LDELFOREACH SPACE expr AS varvar APTR varvar attributes",
 /*  44 */ "smartytag ::= LDELSETFILTER ID modparameters",
 /*  45 */ "smartytag ::= LDELSETFILTER ID modparameters modifierlist RDEL",
 /*  46 */ "smartytag ::= LDELSLASH ID",
 /*  47 */ "smartytag ::= LDELSLASH ID modifierlist",
 /*  48 */ "smartytag ::= LDELSLASH ID PTR ID",
 /*  49 */ "smartytag ::= LDELSLASH ID PTR ID modifierlist",
 /*  50 */ "attributes ::= attributes attribute",
 /*  51 */ "attributes ::= attribute",
 /*  52 */ "attributes ::=",
 /*  53 */ "attribute ::= SPACE ID EQUAL ID",
 /*  54 */ "attribute ::= ATTR expr",
 /*  55 */ "attribute ::= ATTR value",
 /*  56 */ "attribute ::= SPACE ID",
 /*  57 */ "attribute ::= SPACE expr",
 /*  58 */ "attribute ::= SPACE value",
 /*  59 */ "attribute ::= SPACE INTEGER EQUAL expr",
 /*  60 */ "statements ::= statement",
 /*  61 */ "statements ::= statements COMMA statement",
 /*  62 */ "statement ::= varindexed EQUAL expr",
 /*  63 */ "statement ::= OPENP statement CLOSEP",
 /*  64 */ "expr ::= value",
 /*  65 */ "expr ::= ternary",
 /*  66 */ "expr ::= DOLLAR ID COLON ID",
 /*  67 */ "expr ::= expr MATH value",
 /*  68 */ "expr ::= expr UNIMATH value",
 /*  69 */ "expr ::= expr ANDSYM value",
 /*  70 */ "expr ::= expr modifierlist",
 /*  71 */ "expr ::= expr IFCOND expr",
 /*  72 */ "expr ::= expr ISIN value",
 /*  73 */ "expr ::= expr LOP expr",
 /*  74 */ "expr ::= expr ISDIVBY expr",
 /*  75 */ "expr ::= expr ISNOTDIVBY expr",
 /*  76 */ "expr ::= expr ISEVEN",
 /*  77 */ "expr ::= expr ISNOTEVEN",
 /*  78 */ "expr ::= expr ISEVENBY expr",
 /*  79 */ "expr ::= expr ISNOTEVENBY expr",
 /*  80 */ "expr ::= expr ISODD",
 /*  81 */ "expr ::= expr ISNOTODD",
 /*  82 */ "expr ::= expr ISODDBY expr",
 /*  83 */ "expr ::= expr ISNOTODDBY expr",
 /*  84 */ "expr ::= value INSTANCEOF ID",
 /*  85 */ "expr ::= value INSTANCEOF NAMESPACE",
 /*  86 */ "expr ::= value INSTANCEOF value",
 /*  87 */ "ldelexprrdel ::= LDEL expr RDEL",
 /*  88 */ "ternary ::= OPENP expr CLOSEP QMARK DOLLAR ID COLON expr",
 /*  89 */ "ternary ::= OPENP expr CLOSEP QMARK expr COLON expr",
 /*  90 */ "value ::= variable",
 /*  91 */ "value ::= UNIMATH value",
 /*  92 */ "value ::= NOT value",
 /*  93 */ "value ::= TYPECAST value",
 /*  94 */ "value ::= NUMBER",
 /*  95 */ "value ::= INTEGER",
 /*  96 */ "value ::= array",
 /*  97 */ "value ::= DOT INTEGER",
 /*  98 */ "value ::= ID",
 /*  99 */ "value ::= function",
 /* 100 */ "value ::= OPENP expr CLOSEP",
 /* 101 */ "value ::= SINGLEQUOTESTRING",
 /* 102 */ "value ::= doublequoted_with_quotes",
 /* 103 */ "value ::= IDINCDEC",
 /* 104 */ "value ::= ID static",
 /* 105 */ "value ::= NAMESPACE static",
 /* 106 */ "value ::= NAMESPACE",
 /* 107 */ "value ::= DOLLAR ID static",
 /* 108 */ "value ::= smartytag",
 /* 109 */ "value ::= value modifierlist",
 /* 110 */ "variable ::= varindexed",
 /* 111 */ "variable ::= varvar AT ID",
 /* 112 */ "variable ::= object",
 /* 113 */ "variable ::= HATCH ID HATCH arrayindex",
 /* 114 */ "variable ::= HATCH varindexed HATCH arrayindex",
 /* 115 */ "varindexed ::= varvar arrayindex",
 /* 116 */ "arrayindex ::= arrayindex indexdef",
 /* 117 */ "arrayindex ::=",
 /* 118 */ "indexdef ::= DOT varvar",
 /* 119 */ "indexdef ::= DOT varvar AT ID",
 /* 120 */ "indexdef ::= DOT ID",
 /* 121 */ "indexdef ::= DOT INTEGER",
 /* 122 */ "indexdef ::= DOT ldelexprrdel",
 /* 123 */ "indexdef ::= OPENB ID CLOSEB",
 /* 124 */ "indexdef ::= OPENB ID DOT ID CLOSEB",
 /* 125 */ "indexdef ::= OPENB expr CLOSEB",
 /* 126 */ "indexdef ::= OPENB CLOSEB",
 /* 127 */ "static ::= DOUBLECOLON static_class_access",
 /* 128 */ "varvar ::= DOLLAR ID",
 /* 129 */ "varvar ::= DOLLAR varvarele",
 /* 130 */ "varvarele ::= varvarele varvarele",
 /* 131 */ "varvarele ::= ID",
 /* 132 */ "varvarele ::= ldelexprrdel",
 /* 133 */ "object ::= varindexed objectchain",
 /* 134 */ "objectchain ::= objectelement",
 /* 135 */ "objectchain ::= objectchain objectelement",
 /* 136 */ "objectelement ::= PTR ID arrayindex",
 /* 137 */ "objectelement ::= PTR varindexed",
 /* 138 */ "objectelement ::= PTR ldelexprrdel arrayindex",
 /* 139 */ "objectelement ::= PTR ID ldelexprrdel arrayindex",
 /* 140 */ "objectelement ::= PTR method",
 /* 141 */ "function ::= ID OPENP params CLOSEP",
 /* 142 */ "function ::= NAMESPACE OPENP params CLOSEP",
 /* 143 */ "method ::= ID OPENP params CLOSEP",
 /* 144 */ "method ::= DOLLAR ID OPENP params CLOSEP",
 /* 145 */ "params ::= params COMMA expr",
 /* 146 */ "params ::= expr",
 /* 147 */ "params ::=",
 /* 148 */ "modifierlist ::= modifierlist modifier modparameters",
 /* 149 */ "modifierlist ::= modifier modparameters",
 /* 150 */ "modifier ::= VERT AT ID",
 /* 151 */ "modifier ::= VERT ID",
 /* 152 */ "modparameters ::= modparameters modparameter",
 /* 153 */ "modparameters ::=",
 /* 154 */ "modparameter ::= COLON value",
 /* 155 */ "static_class_access ::= method",
 /* 156 */ "static_class_access ::= method objectchain",
 /* 157 */ "static_class_access ::= ID",
 /* 158 */ "static_class_access ::= DOLLAR ID arrayindex",
 /* 159 */ "static_class_access ::= DOLLAR ID arrayindex objectchain",
 /* 160 */ "array ::= OPENB arrayelements CLOSEB",
 /* 161 */ "arrayelements ::= arrayelement",
 /* 162 */ "arrayelements ::= arrayelements COMMA arrayelement",
 /* 163 */ "arrayelements ::=",
 /* 164 */ "arrayelement ::= value APTR expr",
 /* 165 */ "arrayelement ::= ID APTR expr",
 /* 166 */ "arrayelement ::= expr",
 /* 167 */ "doublequoted_with_quotes ::= QUOTE QUOTE",
 /* 168 */ "doublequoted_with_quotes ::= QUOTE doublequoted QUOTE",
 /* 169 */ "doublequoted ::= doublequoted doublequotedcontent",
 /* 170 */ "doublequoted ::= doublequotedcontent",
 /* 171 */ "doublequotedcontent ::= BACKTICK variable BACKTICK",
 /* 172 */ "doublequotedcontent ::= BACKTICK expr BACKTICK",
 /* 173 */ "doublequotedcontent ::= DOLLARID",
 /* 174 */ "doublequotedcontent ::= DQTAG LDEL variable RDEL",
 /* 175 */ "doublequotedcontent ::= DQTAG ldelexprrdel",
 /* 176 */ "doublequotedcontent ::= DQTAG smartytag RDEL",
 /* 177 */ "doublequotedcontent ::= TEXT",
 /* 178 */ "doublequotedcontent ::= DQTAG",
 /* 179 */ "optspace ::= SPACE",
 /* 180 */ "optspace ::=",
    );

    public function tokenName($tokenType)
    {
        if ($tokenType === 0) {
            return 'End of Input';
        }
        if ($tokenType > 0 && $tokenType < count($this->yyTokenName)) {
            return $this->yyTokenName[$tokenType];
        } else {
            return "Unknown";
        }
    }

    public static function yy_destructor($yymajor, $yypminor)
    {
        switch ($yymajor) {
            default:  break;   /* If no destructor action specified: do nothing */
        }
    }

    public function yy_pop_parser_stack()
    {
        if (!count($this->yystack)) {
            return;
        }
        $yytos = array_pop($this->yystack);
        if (self::$yyTraceFILE && $this->yyidx >= 0) {
            fwrite(self::$yyTraceFILE,
                self::$yyTracePrompt . 'Popping ' . $this->yyTokenName[$yytos->major] .
                    "\n");
        }
        $yymajor = $yytos->major;
        self::yy_destructor($yymajor, $yytos->minor);
        $this->yyidx--;

        return $yymajor;
    }

    public function __destruct()
    {
        while ($this->yystack !== Array()) {
            $this->yy_pop_parser_stack();
        }
        if (is_resource(self::$yyTraceFILE)) {
            fclose(self::$yyTraceFILE);
        }
    }

    public function yy_get_expected_tokens($token)
    {
        $state = $this->yystack[$this->yyidx]->stateno;
        $expected = self::$yyExpectedTokens[$state];
        if (in_array($token, self::$yyExpectedTokens[$state], true)) {
            return $expected;
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return array_unique($expected);
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[$yyruleno]['rhs'];
                    $nextstate = $this->yy_find_reduce_action(
                        $this->yystack[$this->yyidx]->stateno,
                        self::$yyRuleInfo[$yyruleno]['lhs']);
                    if (isset(self::$yyExpectedTokens[$nextstate])) {
                $expected = array_merge($expected, self::$yyExpectedTokens[$nextstate]);
                            if (in_array($token,
                                  self::$yyExpectedTokens[$nextstate], true)) {
                            $this->yyidx = $yyidx;
                            $this->yystack = $stack;

                            return array_unique($expected);
                        }
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[$yyruleno]['lhs'];
                        $this->yystack[$this->yyidx] = $x;
                        continue 2;
                    } elseif ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return array_unique($expected);
                    } elseif ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return $expected;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
    $this->yyidx = $yyidx;
    $this->yystack = $stack;

        return array_unique($expected);
    }

    public function yy_is_expected_token($token)
    {
        if ($token === 0) {
            return true; // 0 is not part of this
        }
        $state = $this->yystack[$this->yyidx]->stateno;
        if (in_array($token, self::$yyExpectedTokens[$state], true)) {
            return true;
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return true;
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[$yyruleno]['rhs'];
                    $nextstate = $this->yy_find_reduce_action(
                        $this->yystack[$this->yyidx]->stateno,
                        self::$yyRuleInfo[$yyruleno]['lhs']);
                    if (isset(self::$yyExpectedTokens[$nextstate]) &&
                          in_array($token, self::$yyExpectedTokens[$nextstate], true)) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;

                        return true;
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[$yyruleno]['lhs'];
                        $this->yystack[$this->yyidx] = $x;
                        continue 2;
                    } elseif ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        if (!$token) {
                            // end of input: this is valid
                            return true;
                        }
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return false;
                    } elseif ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return true;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
        $this->yyidx = $yyidx;
        $this->yystack = $stack;

        return true;
    }

   public function yy_find_shift_action($iLookAhead)
    {
        $stateno = $this->yystack[$this->yyidx]->stateno;

        /* if ($this->yyidx < 0) return self::YY_NO_ACTION;  */
        if (!isset(self::$yy_shift_ofst[$stateno])) {
            // no shift actions
            return self::$yy_default[$stateno];
        }
        $i = self::$yy_shift_ofst[$stateno];
        if ($i === self::YY_SHIFT_USE_DFLT) {
            return self::$yy_default[$stateno];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
              self::$yy_lookahead[$i] != $iLookAhead) {
            if (count(self::$yyFallback) && $iLookAhead < count(self::$yyFallback)
                   && ($iFallback = self::$yyFallback[$iLookAhead]) != 0) {
                if (self::$yyTraceFILE) {
                    fwrite(self::$yyTraceFILE, self::$yyTracePrompt . "FALLBACK " .
                        $this->yyTokenName[$iLookAhead] . " => " .
                        $this->yyTokenName[$iFallback] . "\n");
                }

                return $this->yy_find_shift_action($iFallback);
            }

            return self::$yy_default[$stateno];
        } else {
            return self::$yy_action[$i];
        }
    }

    public function yy_find_reduce_action($stateno, $iLookAhead)
    {
        /* $stateno = $this->yystack[$this->yyidx]->stateno; */

        if (!isset(self::$yy_reduce_ofst[$stateno])) {
            return self::$yy_default[$stateno];
        }
        $i = self::$yy_reduce_ofst[$stateno];
        if ($i == self::YY_REDUCE_USE_DFLT) {
            return self::$yy_default[$stateno];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
              self::$yy_lookahead[$i] != $iLookAhead) {
            return self::$yy_default[$stateno];
        } else {
            return self::$yy_action[$i];
        }
    }

    public function yy_shift($yyNewState, $yyMajor, $yypMinor)
    {
        $this->yyidx++;
        if ($this->yyidx >= self::YYSTACKDEPTH) {
            $this->yyidx--;
            if (self::$yyTraceFILE) {
                fprintf(self::$yyTraceFILE, "%sStack Overflow!\n", self::$yyTracePrompt);
            }
            while ($this->yyidx >= 0) {
                $this->yy_pop_parser_stack();
            }
#line 85 "Smarty_Compiler_Template_Php_Parser.y"

    $this->internalError = true;
    $this->compiler->error("Stack overflow in template parser");
#line 1535 "Smarty_Compiler_Template_Php_Parser.php"

            return;
        }
        $yytos = new TP_yyStackEntry;
        $yytos->stateno = $yyNewState;
        $yytos->major = $yyMajor;
        $yytos->minor = $yypMinor;
        array_push($this->yystack, $yytos);
        if (self::$yyTraceFILE && $this->yyidx > 0) {
            fprintf(self::$yyTraceFILE, "%sShift %d\n", self::$yyTracePrompt,
                $yyNewState);
            fprintf(self::$yyTraceFILE, "%sStack:", self::$yyTracePrompt);
            for ($i = 1; $i <= $this->yyidx; $i++) {
                fprintf(self::$yyTraceFILE, " %s",
                    $this->yyTokenName[$this->yystack[$i]->major]);
            }
            fwrite(self::$yyTraceFILE,"\n");
        }
    }

    public static $yyRuleInfo = array(
  array( 'lhs' => 74, 'rhs' => 1 ),
  array( 'lhs' => 75, 'rhs' => 1 ),
  array( 'lhs' => 75, 'rhs' => 2 ),
  array( 'lhs' => 75, 'rhs' => 0 ),
  array( 'lhs' => 76, 'rhs' => 1 ),
  array( 'lhs' => 76, 'rhs' => 2 ),
  array( 'lhs' => 76, 'rhs' => 1 ),
  array( 'lhs' => 76, 'rhs' => 1 ),
  array( 'lhs' => 76, 'rhs' => 1 ),
  array( 'lhs' => 76, 'rhs' => 1 ),
  array( 'lhs' => 76, 'rhs' => 1 ),
  array( 'lhs' => 76, 'rhs' => 1 ),
  array( 'lhs' => 76, 'rhs' => 1 ),
  array( 'lhs' => 76, 'rhs' => 1 ),
  array( 'lhs' => 76, 'rhs' => 1 ),
  array( 'lhs' => 76, 'rhs' => 1 ),
  array( 'lhs' => 76, 'rhs' => 1 ),
  array( 'lhs' => 78, 'rhs' => 2 ),
  array( 'lhs' => 78, 'rhs' => 3 ),
  array( 'lhs' => 79, 'rhs' => 2 ),
  array( 'lhs' => 79, 'rhs' => 0 ),
  array( 'lhs' => 80, 'rhs' => 1 ),
  array( 'lhs' => 80, 'rhs' => 1 ),
  array( 'lhs' => 80, 'rhs' => 1 ),
  array( 'lhs' => 80, 'rhs' => 1 ),
  array( 'lhs' => 80, 'rhs' => 1 ),
  array( 'lhs' => 80, 'rhs' => 1 ),
  array( 'lhs' => 80, 'rhs' => 1 ),
  array( 'lhs' => 77, 'rhs' => 3 ),
  array( 'lhs' => 77, 'rhs' => 5 ),
  array( 'lhs' => 77, 'rhs' => 3 ),
  array( 'lhs' => 77, 'rhs' => 4 ),
  array( 'lhs' => 77, 'rhs' => 6 ),
  array( 'lhs' => 77, 'rhs' => 3 ),
  array( 'lhs' => 77, 'rhs' => 3 ),
  array( 'lhs' => 77, 'rhs' => 11 ),
  array( 'lhs' => 77, 'rhs' => 9 ),
  array( 'lhs' => 77, 'rhs' => 5 ),
  array( 'lhs' => 77, 'rhs' => 7 ),
  array( 'lhs' => 77, 'rhs' => 2 ),
  array( 'lhs' => 77, 'rhs' => 6 ),
  array( 'lhs' => 77, 'rhs' => 8 ),
  array( 'lhs' => 77, 'rhs' => 6 ),
  array( 'lhs' => 77, 'rhs' => 8 ),
  array( 'lhs' => 77, 'rhs' => 3 ),
  array( 'lhs' => 77, 'rhs' => 5 ),
  array( 'lhs' => 77, 'rhs' => 2 ),
  array( 'lhs' => 77, 'rhs' => 3 ),
  array( 'lhs' => 77, 'rhs' => 4 ),
  array( 'lhs' => 77, 'rhs' => 5 ),
  array( 'lhs' => 82, 'rhs' => 2 ),
  array( 'lhs' => 82, 'rhs' => 1 ),
  array( 'lhs' => 82, 'rhs' => 0 ),
  array( 'lhs' => 91, 'rhs' => 4 ),
  array( 'lhs' => 91, 'rhs' => 2 ),
  array( 'lhs' => 91, 'rhs' => 2 ),
  array( 'lhs' => 91, 'rhs' => 2 ),
  array( 'lhs' => 91, 'rhs' => 2 ),
  array( 'lhs' => 91, 'rhs' => 2 ),
  array( 'lhs' => 91, 'rhs' => 4 ),
  array( 'lhs' => 86, 'rhs' => 1 ),
  array( 'lhs' => 86, 'rhs' => 3 ),
  array( 'lhs' => 85, 'rhs' => 3 ),
  array( 'lhs' => 85, 'rhs' => 3 ),
  array( 'lhs' => 81, 'rhs' => 1 ),
  array( 'lhs' => 81, 'rhs' => 1 ),
  array( 'lhs' => 81, 'rhs' => 4 ),
  array( 'lhs' => 81, 'rhs' => 3 ),
  array( 'lhs' => 81, 'rhs' => 3 ),
  array( 'lhs' => 81, 'rhs' => 3 ),
  array( 'lhs' => 81, 'rhs' => 2 ),
  array( 'lhs' => 81, 'rhs' => 3 ),
  array( 'lhs' => 81, 'rhs' => 3 ),
  array( 'lhs' => 81, 'rhs' => 3 ),
  array( 'lhs' => 81, 'rhs' => 3 ),
  array( 'lhs' => 81, 'rhs' => 3 ),
  array( 'lhs' => 81, 'rhs' => 2 ),
  array( 'lhs' => 81, 'rhs' => 2 ),
  array( 'lhs' => 81, 'rhs' => 3 ),
  array( 'lhs' => 81, 'rhs' => 3 ),
  array( 'lhs' => 81, 'rhs' => 2 ),
  array( 'lhs' => 81, 'rhs' => 2 ),
  array( 'lhs' => 81, 'rhs' => 3 ),
  array( 'lhs' => 81, 'rhs' => 3 ),
  array( 'lhs' => 81, 'rhs' => 3 ),
  array( 'lhs' => 81, 'rhs' => 3 ),
  array( 'lhs' => 81, 'rhs' => 3 ),
  array( 'lhs' => 93, 'rhs' => 3 ),
  array( 'lhs' => 92, 'rhs' => 8 ),
  array( 'lhs' => 92, 'rhs' => 7 ),
  array( 'lhs' => 89, 'rhs' => 1 ),
  array( 'lhs' => 89, 'rhs' => 2 ),
  array( 'lhs' => 89, 'rhs' => 2 ),
  array( 'lhs' => 89, 'rhs' => 2 ),
  array( 'lhs' => 89, 'rhs' => 1 ),
  array( 'lhs' => 89, 'rhs' => 1 ),
  array( 'lhs' => 89, 'rhs' => 1 ),
  array( 'lhs' => 89, 'rhs' => 2 ),
  array( 'lhs' => 89, 'rhs' => 1 ),
  array( 'lhs' => 89, 'rhs' => 1 ),
  array( 'lhs' => 89, 'rhs' => 3 ),
  array( 'lhs' => 89, 'rhs' => 1 ),
  array( 'lhs' => 89, 'rhs' => 1 ),
  array( 'lhs' => 89, 'rhs' => 1 ),
  array( 'lhs' => 89, 'rhs' => 2 ),
  array( 'lhs' => 89, 'rhs' => 2 ),
  array( 'lhs' => 89, 'rhs' => 1 ),
  array( 'lhs' => 89, 'rhs' => 3 ),
  array( 'lhs' => 89, 'rhs' => 1 ),
  array( 'lhs' => 89, 'rhs' => 2 ),
  array( 'lhs' => 94, 'rhs' => 1 ),
  array( 'lhs' => 94, 'rhs' => 3 ),
  array( 'lhs' => 94, 'rhs' => 1 ),
  array( 'lhs' => 94, 'rhs' => 4 ),
  array( 'lhs' => 94, 'rhs' => 4 ),
  array( 'lhs' => 83, 'rhs' => 2 ),
  array( 'lhs' => 100, 'rhs' => 2 ),
  array( 'lhs' => 100, 'rhs' => 0 ),
  array( 'lhs' => 101, 'rhs' => 2 ),
  array( 'lhs' => 101, 'rhs' => 4 ),
  array( 'lhs' => 101, 'rhs' => 2 ),
  array( 'lhs' => 101, 'rhs' => 2 ),
  array( 'lhs' => 101, 'rhs' => 2 ),
  array( 'lhs' => 101, 'rhs' => 3 ),
  array( 'lhs' => 101, 'rhs' => 5 ),
  array( 'lhs' => 101, 'rhs' => 3 ),
  array( 'lhs' => 101, 'rhs' => 2 ),
  array( 'lhs' => 98, 'rhs' => 2 ),
  array( 'lhs' => 88, 'rhs' => 2 ),
  array( 'lhs' => 88, 'rhs' => 2 ),
  array( 'lhs' => 103, 'rhs' => 2 ),
  array( 'lhs' => 103, 'rhs' => 1 ),
  array( 'lhs' => 103, 'rhs' => 1 ),
  array( 'lhs' => 99, 'rhs' => 2 ),
  array( 'lhs' => 104, 'rhs' => 1 ),
  array( 'lhs' => 104, 'rhs' => 2 ),
  array( 'lhs' => 105, 'rhs' => 3 ),
  array( 'lhs' => 105, 'rhs' => 2 ),
  array( 'lhs' => 105, 'rhs' => 3 ),
  array( 'lhs' => 105, 'rhs' => 4 ),
  array( 'lhs' => 105, 'rhs' => 2 ),
  array( 'lhs' => 96, 'rhs' => 4 ),
  array( 'lhs' => 96, 'rhs' => 4 ),
  array( 'lhs' => 106, 'rhs' => 4 ),
  array( 'lhs' => 106, 'rhs' => 5 ),
  array( 'lhs' => 107, 'rhs' => 3 ),
  array( 'lhs' => 107, 'rhs' => 1 ),
  array( 'lhs' => 107, 'rhs' => 0 ),
  array( 'lhs' => 84, 'rhs' => 3 ),
  array( 'lhs' => 84, 'rhs' => 2 ),
  array( 'lhs' => 108, 'rhs' => 3 ),
  array( 'lhs' => 108, 'rhs' => 2 ),
  array( 'lhs' => 90, 'rhs' => 2 ),
  array( 'lhs' => 90, 'rhs' => 0 ),
  array( 'lhs' => 109, 'rhs' => 2 ),
  array( 'lhs' => 102, 'rhs' => 1 ),
  array( 'lhs' => 102, 'rhs' => 2 ),
  array( 'lhs' => 102, 'rhs' => 1 ),
  array( 'lhs' => 102, 'rhs' => 3 ),
  array( 'lhs' => 102, 'rhs' => 4 ),
  array( 'lhs' => 95, 'rhs' => 3 ),
  array( 'lhs' => 110, 'rhs' => 1 ),
  array( 'lhs' => 110, 'rhs' => 3 ),
  array( 'lhs' => 110, 'rhs' => 0 ),
  array( 'lhs' => 111, 'rhs' => 3 ),
  array( 'lhs' => 111, 'rhs' => 3 ),
  array( 'lhs' => 111, 'rhs' => 1 ),
  array( 'lhs' => 97, 'rhs' => 2 ),
  array( 'lhs' => 97, 'rhs' => 3 ),
  array( 'lhs' => 112, 'rhs' => 2 ),
  array( 'lhs' => 112, 'rhs' => 1 ),
  array( 'lhs' => 113, 'rhs' => 3 ),
  array( 'lhs' => 113, 'rhs' => 3 ),
  array( 'lhs' => 113, 'rhs' => 1 ),
  array( 'lhs' => 113, 'rhs' => 4 ),
  array( 'lhs' => 113, 'rhs' => 2 ),
  array( 'lhs' => 113, 'rhs' => 3 ),
  array( 'lhs' => 113, 'rhs' => 1 ),
  array( 'lhs' => 113, 'rhs' => 1 ),
  array( 'lhs' => 87, 'rhs' => 1 ),
  array( 'lhs' => 87, 'rhs' => 0 ),
    );

    public static $yyReduceMap = array(
        0 => 0,
        1 => 1,
        2 => 1,
        4 => 1,
        6 => 1,
        5 => 5,
        7 => 7,
        8 => 8,
        9 => 9,
        10 => 10,
        11 => 11,
        12 => 12,
        13 => 13,
        14 => 14,
        15 => 15,
        16 => 16,
        17 => 17,
        20 => 17,
        180 => 17,
        18 => 18,
        63 => 18,
        87 => 18,
        168 => 18,
        19 => 19,
        91 => 19,
        93 => 19,
        116 => 19,
        156 => 19,
        21 => 21,
        22 => 21,
        23 => 21,
        24 => 21,
        25 => 21,
        26 => 21,
        27 => 21,
        57 => 21,
        58 => 21,
        64 => 21,
        65 => 21,
        90 => 21,
        94 => 21,
        95 => 21,
        96 => 21,
        99 => 21,
        101 => 21,
        102 => 21,
        106 => 21,
        112 => 21,
        128 => 21,
        155 => 21,
        157 => 21,
        161 => 21,
        166 => 21,
        179 => 21,
        28 => 28,
        29 => 29,
        30 => 30,
        31 => 31,
        32 => 32,
        33 => 33,
        34 => 33,
        35 => 35,
        36 => 36,
        37 => 37,
        38 => 38,
        39 => 39,
        40 => 40,
        42 => 40,
        41 => 41,
        43 => 41,
        44 => 44,
        45 => 45,
        46 => 46,
        47 => 47,
        48 => 48,
        49 => 49,
        50 => 50,
        51 => 51,
        60 => 51,
        146 => 51,
        150 => 51,
        154 => 51,
        52 => 52,
        147 => 52,
        153 => 52,
        53 => 53,
        54 => 54,
        55 => 54,
        56 => 56,
        59 => 59,
        61 => 61,
        62 => 62,
        66 => 66,
        67 => 67,
        68 => 67,
        69 => 67,
        70 => 70,
        109 => 70,
        71 => 71,
        73 => 71,
        72 => 72,
        74 => 74,
        75 => 75,
        76 => 76,
        81 => 76,
        77 => 77,
        80 => 77,
        78 => 78,
        83 => 78,
        79 => 79,
        82 => 79,
        84 => 84,
        85 => 84,
        86 => 86,
        88 => 88,
        89 => 89,
        92 => 92,
        97 => 97,
        98 => 98,
        100 => 100,
        103 => 103,
        104 => 104,
        105 => 105,
        107 => 107,
        108 => 108,
        110 => 110,
        111 => 111,
        113 => 113,
        114 => 114,
        115 => 115,
        117 => 117,
        163 => 117,
        118 => 118,
        119 => 119,
        120 => 120,
        121 => 121,
        122 => 121,
        123 => 123,
        124 => 124,
        125 => 125,
        126 => 126,
        127 => 127,
        129 => 129,
        130 => 130,
        131 => 131,
        132 => 132,
        133 => 133,
        134 => 134,
        135 => 135,
        136 => 136,
        137 => 137,
        138 => 138,
        139 => 139,
        140 => 140,
        141 => 141,
        142 => 142,
        143 => 143,
        144 => 144,
        145 => 145,
        148 => 148,
        149 => 149,
        151 => 151,
        152 => 152,
        158 => 158,
        159 => 159,
        160 => 160,
        162 => 162,
        164 => 164,
        165 => 165,
        167 => 167,
        169 => 169,
        170 => 170,
        171 => 171,
        174 => 171,
        172 => 172,
        173 => 173,
        175 => 175,
        176 => 176,
        177 => 177,
        178 => 178,
    );
#line 96 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r0(){
   // execute end of template
   if ($this->compiler->caching) {
       $this->compiler->has_code = true;
       $this->compiler->nocache_nolog = true;
   }
    }
#line 1930 "Smarty_Compiler_Template_Php_Parser.php"
#line 108 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r1(){
    }
#line 1934 "Smarty_Compiler_Template_Php_Parser.php"
#line 127 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r5(){
    if ($this->compiler->has_code) {
        $this->compiler->nocacheCode($this->yystack[$this->yyidx + -1]->minor,true);
    } else { 
        $this->compiler->template_code->raw($this->yystack[$this->yyidx + -1]->minor);
    }  
    $this->block_nesting_level = count($this->compiler->_tag_stack);
    }
#line 1944 "Smarty_Compiler_Template_Php_Parser.php"
#line 141 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r7(){
    $this->compiler->template_code->php('echo ')->string($this->yystack[$this->yyidx + 0]->minor)->raw(";\n");
    }
#line 1949 "Smarty_Compiler_Template_Php_Parser.php"
#line 146 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r8(){
    if ($this->php_handling == Smarty::PHP_PASSTHRU) {
        $this->compiler->template_code->php("echo '<?php';\n");
    } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
        $this->compiler->template_code->php("echo '&lt;?php';\n");
    } elseif ($this->php_handling == Smarty::PHP_ALLOW) {
        if (!($this->compiler->template instanceof SmartyBC)) {
            $this->compiler->error (self::Err3);
        }
        $this->text_is_php = true;
    }
    }
#line 1963 "Smarty_Compiler_Template_Php_Parser.php"
#line 160 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r9(){
    if ($this->is_xml) {
        $this->is_xml = false;
        $this->compiler->template_code->php("echo '?>';\n");
    } elseif ($this->php_handling == Smarty::PHP_PASSTHRU) {
        $this->compiler->template_code->php("echo '?>';\n");
    } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
        $this->compiler->template_code->php("echo '?&gt;';\n");
    } elseif ($this->php_handling == Smarty::PHP_ALLOW) {
        $this->text_is_php = false;
    }
    }
#line 1977 "Smarty_Compiler_Template_Php_Parser.php"
#line 174 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r10(){
    if ($this->php_handling == Smarty::PHP_PASSTHRU) {
        $this->compiler->template_code->php("echo '<%';\n");
    } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
        $this->compiler->template_code->php("echo '&lt;%';\n");
    } elseif ($this->php_handling == Smarty::PHP_ALLOW) {
        if ($this->asp_tags) {
            if (!($this->compiler->template instanceof SmartyBC)) {
                $this->compiler->error (self::Err3);
            }
            $this->text_is_php = true;
        } else {
            $this->compiler->template_code->php("echo '<%';\n");
        }
    } elseif ($this->php_handling == Smarty::PHP_REMOVE) {
        if (!$this->asp_tags) {
            $this->compiler->template_code->php("echo '<%';\n");
        }
    }
    }
#line 1999 "Smarty_Compiler_Template_Php_Parser.php"
#line 196 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r11(){
    if ($this->php_handling == Smarty::PHP_PASSTHRU) {
        $this->compiler->template_code->php("echo '%>';\n");
    } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
        $this->compiler->template_code->php("echo '%&gt;';\n");
    } elseif ($this->php_handling == Smarty::PHP_ALLOW) {
        if ($this->asp_tags) {
            $this->text_is_php = false;
        } else {
            $this->compiler->template_code->php("echo '%>';\n");
        }
    } elseif ($this->php_handling == Smarty::PHP_REMOVE) {
        if (!$this->asp_tags) {
            $this->compiler->template_code->php("echo '%>';\n");
        }
    }
    }
#line 2018 "Smarty_Compiler_Template_Php_Parser.php"
#line 214 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r12(){
    if ($this->strip) {
        $this->compiler->template_code->php('echo ')->string(preg_replace('![\t ]*[\r\n]+[\t ]*!', '', $this->yystack[$this->yyidx + 0]->minor))->raw(";\n");
    } else {
        $this->compiler->template_code->php('echo ')->string($this->yystack[$this->yyidx + 0]->minor)->raw(";\n");
    }
    }
#line 2027 "Smarty_Compiler_Template_Php_Parser.php"
#line 223 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r13(){
    $this->is_xml = true; 
    $this->compiler->template_code->php("echo '<?xml';\n");
    }
#line 2033 "Smarty_Compiler_Template_Php_Parser.php"
#line 229 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r14(){
    if ($this->text_is_php) {
        $this->compiler->prefix_code[] = $this->yystack[$this->yyidx + 0]->minor;
        $this->compiler->nocacheCode('', true);
    } else {
        // inheritance child templates shall not output text
        if (!$this->compiler->isInheritanceChild || $this->compiler->block_nesting_level > 0) {
            if ($this->strip) {
                $this->compiler->template_code->php('echo ')->string(preg_replace('![\t ]*[\r\n]+[\t ]*!', '', $this->yystack[$this->yyidx + 0]->minor))->raw(";\n");
            } else {
                $this->compiler->template_code->php('echo ')->string($this->yystack[$this->yyidx + 0]->minor)->raw(";\n");
            }
        }
    }
    }
#line 2050 "Smarty_Compiler_Template_Php_Parser.php"
#line 246 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r15(){
    $this->strip = true;
    }
#line 2055 "Smarty_Compiler_Template_Php_Parser.php"
#line 250 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r16(){
    $this->strip = false;
    }
#line 2060 "Smarty_Compiler_Template_Php_Parser.php"
#line 255 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r17(){
    $this->_retvalue = '';
    }
#line 2065 "Smarty_Compiler_Template_Php_Parser.php"
#line 259 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r18(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;
    }
#line 2070 "Smarty_Compiler_Template_Php_Parser.php"
#line 263 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r19(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2075 "Smarty_Compiler_Template_Php_Parser.php"
#line 271 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r21(){
    $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;
    }
#line 2080 "Smarty_Compiler_Template_Php_Parser.php"
#line 312 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r28(){
    $this->_retvalue = $this->compiler->compileTag('Internal_PrintExpression',$this->yystack[$this->yyidx + 0]->minor,array('value'=>$this->yystack[$this->yyidx + -1]->minor));
    }
#line 2085 "Smarty_Compiler_Template_Php_Parser.php"
#line 333 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r29(){
    $this->_retvalue = $this->compiler->compileTag('assign',array_merge(array(array('value'=>$this->yystack[$this->yyidx + -1]->minor),array('var'=>$this->yystack[$this->yyidx + -3]->minor['var'])),$this->yystack[$this->yyidx + 0]->minor),array('smarty_internal_index'=>$this->yystack[$this->yyidx + -3]->minor['smarty_internal_index']));
    }
#line 2090 "Smarty_Compiler_Template_Php_Parser.php"
#line 338 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r30(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor);
    }
#line 2095 "Smarty_Compiler_Template_Php_Parser.php"
#line 352 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r31(){
    $this->_retvalue = 'ob_start(); '.$this->compiler->compileTag($this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + 0]->minor).' echo ';
    $this->_retvalue .= $this->compiler->compileTag('Internal_Modifier',array(),array('modifierlist'=>$this->yystack[$this->yyidx + -1]->minor,'value'=>'ob_get_clean()')).';';
    }
#line 2101 "Smarty_Compiler_Template_Php_Parser.php"
#line 358 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r32(){
    $this->_retvalue = 'ob_start(); '.$this->compiler->compileTag($this->yystack[$this->yyidx + -4]->minor,$this->yystack[$this->yyidx + 0]->minor,array('object_method'=>$this->yystack[$this->yyidx + -2]->minor)).' echo ';
    $this->_retvalue .= $this->compiler->compileTag('Internal_Modifier',array(),array('modifierlist'=>$this->yystack[$this->yyidx + -1]->minor,'value'=>'ob_get_clean()')).';';
    }
#line 2107 "Smarty_Compiler_Template_Php_Parser.php"
#line 369 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r33(){
    $tag = trim(substr($this->yystack[$this->yyidx + -2]->minor,$this->lex->ldel_length));
    $this->_retvalue = $this->compiler->compileTag(($tag == 'else if')? 'elseif' : $tag,$this->yystack[$this->yyidx + 0]->minor,array('if condition'=>$this->yystack[$this->yyidx + -1]->minor));
    }
#line 2113 "Smarty_Compiler_Template_Php_Parser.php"
#line 385 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r35(){
    $this->_retvalue = $this->compiler->compileTag('for',array_merge($this->yystack[$this->yyidx + 0]->minor,array(array('start'=>$this->yystack[$this->yyidx + -9]->minor),array('ifexp'=>$this->yystack[$this->yyidx + -6]->minor),array('var'=>$this->yystack[$this->yyidx + -3]->minor),array('step'=>'='.$this->yystack[$this->yyidx + -1]->minor))),1);
    }
#line 2118 "Smarty_Compiler_Template_Php_Parser.php"
#line 388 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r36(){
    $len =strlen($this->yystack[$this->yyidx + -1]->minor);
    $this->_retvalue = $this->compiler->compileTag('for',array_merge($this->yystack[$this->yyidx + 0]->minor,array(array('start'=>$this->yystack[$this->yyidx + -7]->minor),array('ifexp'=>$this->yystack[$this->yyidx + -4]->minor),array('var'=>substr($this->yystack[$this->yyidx + -1]->minor,1,$len-3)),array('step'=>substr($this->yystack[$this->yyidx + -1]->minor,$len-2)))),1);
    }
#line 2124 "Smarty_Compiler_Template_Php_Parser.php"
#line 393 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r37(){
    $this->_retvalue = $this->compiler->compileTag('for',array_merge($this->yystack[$this->yyidx + 0]->minor,array(array('start'=>$this->yystack[$this->yyidx + -3]->minor),array('to'=>$this->yystack[$this->yyidx + -1]->minor))),0);
    }
#line 2129 "Smarty_Compiler_Template_Php_Parser.php"
#line 397 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r38(){
    $this->_retvalue = $this->compiler->compileTag('for',array_merge($this->yystack[$this->yyidx + 0]->minor,array(array('start'=>$this->yystack[$this->yyidx + -5]->minor),array('to'=>$this->yystack[$this->yyidx + -3]->minor),array('step'=>$this->yystack[$this->yyidx + -1]->minor))),0);
    }
#line 2134 "Smarty_Compiler_Template_Php_Parser.php"
#line 402 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r39(){
    $this->_retvalue = $this->compiler->compileTag('foreach',$this->yystack[$this->yyidx + 0]->minor);
    }
#line 2139 "Smarty_Compiler_Template_Php_Parser.php"
#line 407 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r40(){
    $this->_retvalue = $this->compiler->compileTag('foreach',array_merge($this->yystack[$this->yyidx + 0]->minor,array(array('from'=>$this->yystack[$this->yyidx + -3]->minor),array('item'=>$this->yystack[$this->yyidx + -1]->minor))));
    }
#line 2144 "Smarty_Compiler_Template_Php_Parser.php"
#line 411 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r41(){
    $this->_retvalue = $this->compiler->compileTag('foreach',array_merge($this->yystack[$this->yyidx + 0]->minor,array(array('from'=>$this->yystack[$this->yyidx + -5]->minor),array('item'=>$this->yystack[$this->yyidx + -1]->minor),array('key'=>$this->yystack[$this->yyidx + -3]->minor))));
    }
#line 2149 "Smarty_Compiler_Template_Php_Parser.php"
#line 424 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r44(){
    $this->_retvalue = $this->compiler->compileTag('setfilter',array(),array('modifier_list'=>array(array_merge(array($this->yystack[$this->yyidx + -1]->minor),$this->yystack[$this->yyidx + 0]->minor))));
    }
#line 2154 "Smarty_Compiler_Template_Php_Parser.php"
#line 428 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r45(){
    $this->_retvalue = $this->compiler->compileTag('setfilter',array(),array('modifier_list'=>array_merge(array(array_merge(array($this->yystack[$this->yyidx + -3]->minor),$this->yystack[$this->yyidx + -2]->minor)),$this->yystack[$this->yyidx + -1]->minor)));
    }
#line 2159 "Smarty_Compiler_Template_Php_Parser.php"
#line 435 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r46(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + 0]->minor.'close',array());
    }
#line 2164 "Smarty_Compiler_Template_Php_Parser.php"
#line 439 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r47(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -1]->minor.'close',array(),array('modifierlist'=>$this->yystack[$this->yyidx + 0]->minor));
    }
#line 2169 "Smarty_Compiler_Template_Php_Parser.php"
#line 444 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r48(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -2]->minor.'close',array(),array('object_method'=>$this->yystack[$this->yyidx + 0]->minor));
    }
#line 2174 "Smarty_Compiler_Template_Php_Parser.php"
#line 448 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r49(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -3]->minor.'close',array(),array('object_method'=>$this->yystack[$this->yyidx + -1]->minor,'modifierlist'=>$this->yystack[$this->yyidx + 0]->minor));
    }
#line 2179 "Smarty_Compiler_Template_Php_Parser.php"
#line 456 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r50(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;
    $this->_retvalue[] = $this->yystack[$this->yyidx + 0]->minor;
    }
#line 2185 "Smarty_Compiler_Template_Php_Parser.php"
#line 462 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r51(){
    $this->_retvalue = array($this->yystack[$this->yyidx + 0]->minor);
    }
#line 2190 "Smarty_Compiler_Template_Php_Parser.php"
#line 467 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r52(){
    $this->_retvalue = array();
    }
#line 2195 "Smarty_Compiler_Template_Php_Parser.php"
#line 472 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r53(){
    if (preg_match('~^true$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>'true');
    } elseif (preg_match('~^false$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>'false');
    } elseif (preg_match('~^null$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>'null');
    } else {
        $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>"'".$this->yystack[$this->yyidx + 0]->minor."'");
    }
    }
#line 2208 "Smarty_Compiler_Template_Php_Parser.php"
#line 484 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r54(){
    $this->_retvalue = array(trim($this->yystack[$this->yyidx + -1]->minor," =\n\r\t")=>$this->yystack[$this->yyidx + 0]->minor);
    }
#line 2213 "Smarty_Compiler_Template_Php_Parser.php"
#line 492 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r56(){
    $this->_retvalue = "'".$this->yystack[$this->yyidx + 0]->minor."'";
    }
#line 2218 "Smarty_Compiler_Template_Php_Parser.php"
#line 504 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r59(){
    $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>$this->yystack[$this->yyidx + 0]->minor);
    }
#line 2223 "Smarty_Compiler_Template_Php_Parser.php"
#line 517 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r61(){
    $this->yystack[$this->yyidx + -2]->minor[]=$this->yystack[$this->yyidx + 0]->minor;
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor;
    }
#line 2229 "Smarty_Compiler_Template_Php_Parser.php"
#line 526 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r62(){
    $this->_retvalue = array('var' => $this->yystack[$this->yyidx + -2]->minor, 'value'=>$this->yystack[$this->yyidx + 0]->minor);
    }
#line 2234 "Smarty_Compiler_Template_Php_Parser.php"
#line 550 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r66(){
    $this->_retvalue = '$_smarty_tpl->getStreamVariable(\''. $this->yystack[$this->yyidx + -2]->minor .'://'. $this->yystack[$this->yyidx + 0]->minor . '\')';
    }
#line 2239 "Smarty_Compiler_Template_Php_Parser.php"
#line 555 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r67(){
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor . trim($this->yystack[$this->yyidx + -1]->minor) . $this->yystack[$this->yyidx + 0]->minor;
    }
#line 2244 "Smarty_Compiler_Template_Php_Parser.php"
#line 574 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r70(){
    $this->_retvalue = $this->compiler->compileTag('Internal_Modifier',array(),array('value'=>$this->yystack[$this->yyidx + -1]->minor,'modifierlist'=>$this->yystack[$this->yyidx + 0]->minor));
    }
#line 2249 "Smarty_Compiler_Template_Php_Parser.php"
#line 580 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r71(){
    $operator = strtolower(trim($this->yystack[$this->yyidx + -1]->minor));
    if (isset($this->opMap[$operator])) {
        $operator = $this->opMap[$operator];
    }
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor." {$operator} ".$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2258 "Smarty_Compiler_Template_Php_Parser.php"
#line 592 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r72(){
    $this->_retvalue = 'in_array('.$this->yystack[$this->yyidx + -2]->minor.',(array)'.$this->yystack[$this->yyidx + 0]->minor.')';
    }
#line 2263 "Smarty_Compiler_Template_Php_Parser.php"
#line 604 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r74(){
    $this->_retvalue = '!('.$this->yystack[$this->yyidx + -2]->minor.' % '.$this->yystack[$this->yyidx + 0]->minor.')';
    }
#line 2268 "Smarty_Compiler_Template_Php_Parser.php"
#line 608 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r75(){
    $this->_retvalue = '('.$this->yystack[$this->yyidx + -2]->minor.' % '.$this->yystack[$this->yyidx + 0]->minor.')';
    }
#line 2273 "Smarty_Compiler_Template_Php_Parser.php"
#line 612 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r76(){
    $this->_retvalue = '!(1 & '.$this->yystack[$this->yyidx + -1]->minor.')';
    }
#line 2278 "Smarty_Compiler_Template_Php_Parser.php"
#line 616 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r77(){
    $this->_retvalue = '(1 & '.$this->yystack[$this->yyidx + -1]->minor.')';
    }
#line 2283 "Smarty_Compiler_Template_Php_Parser.php"
#line 620 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r78(){
    $this->_retvalue = '!(1 & '.$this->yystack[$this->yyidx + -2]->minor.' / '.$this->yystack[$this->yyidx + 0]->minor.')';
    }
#line 2288 "Smarty_Compiler_Template_Php_Parser.php"
#line 624 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r79(){
    $this->_retvalue = '(1 & '.$this->yystack[$this->yyidx + -2]->minor.' / '.$this->yystack[$this->yyidx + 0]->minor.')';
    }
#line 2293 "Smarty_Compiler_Template_Php_Parser.php"
#line 644 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r84(){
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2298 "Smarty_Compiler_Template_Php_Parser.php"
#line 652 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r86(){
    $this->prefix_number++;
    $this->compiler->prefix_code[] = '$_tmp'.$this->prefix_number.'='.$this->yystack[$this->yyidx + 0]->minor.';';
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.'$_tmp'.$this->prefix_number;
    }
#line 2305 "Smarty_Compiler_Template_Php_Parser.php"
#line 665 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r88(){
    $this->_retvalue = $this->yystack[$this->yyidx + -6]->minor.' ? '. $this->compiler->compileVariable("'".$this->yystack[$this->yyidx + -2]->minor."'") . ' : '.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2310 "Smarty_Compiler_Template_Php_Parser.php"
#line 669 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r89(){
    $this->_retvalue = $this->yystack[$this->yyidx + -5]->minor.' ? '.$this->yystack[$this->yyidx + -2]->minor.' : '.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2315 "Smarty_Compiler_Template_Php_Parser.php"
#line 685 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r92(){
    $operator = strtolower(trim($this->yystack[$this->yyidx + -1]->minor));
    if (isset($this->opMap[$operator])) {
        $operator = $this->opMap[$operator];
    }

    $this->_retvalue = $operator.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2325 "Smarty_Compiler_Template_Php_Parser.php"
#line 711 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r97(){
    $this->_retvalue = '.'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2330 "Smarty_Compiler_Template_Php_Parser.php"
#line 716 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r98(){
    if (preg_match('~^true$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = 'true';
    } elseif (preg_match('~^false$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = 'false';
    } elseif (preg_match('~^null$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = 'null';
    } else {
        $this->_retvalue = "'".$this->yystack[$this->yyidx + 0]->minor."'";
    }
    }
#line 2343 "Smarty_Compiler_Template_Php_Parser.php"
#line 734 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r100(){
    $this->_retvalue = "(". $this->yystack[$this->yyidx + -1]->minor .")";
    }
#line 2348 "Smarty_Compiler_Template_Php_Parser.php"
#line 748 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r103(){
    $len = strlen($this->yystack[$this->yyidx + 0]->minor);
    $this->_retvalue = '$_scope->' . substr($this->yystack[$this->yyidx + 0]->minor,1,$len-3) . '->value' . substr($this->yystack[$this->yyidx + 0]->minor,$len-2);
    }
#line 2354 "Smarty_Compiler_Template_Php_Parser.php"
#line 754 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r104(){
    if (!$this->security || isset($this->compiler->tpl_obj->registered_classes[$this->yystack[$this->yyidx + -1]->minor]) || $this->compiler->tpl_obj->security_policy->isTrustedStaticClass($this->yystack[$this->yyidx + -1]->minor, $this->compiler)) {
        if (isset($this->compiler->tpl_obj->registered_classes[$this->yystack[$this->yyidx + -1]->minor])) {
            $this->_retvalue = $this->compiler->tpl_obj->registered_classes[$this->yystack[$this->yyidx + -1]->minor].$this->yystack[$this->yyidx + 0]->minor;
        } else {
            $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
        } 
    } else {
        $this->compiler->error ("static class '".$this->yystack[$this->yyidx + -1]->minor."' is undefined or not allowed by security setting");
    }
    }
#line 2367 "Smarty_Compiler_Template_Php_Parser.php"
#line 767 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r105(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.r;
    }
#line 2372 "Smarty_Compiler_Template_Php_Parser.php"
#line 776 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r107(){
    $this->_retvalue = $this->compiler->compileVariable($this->yystack[$this->yyidx + -1]->minor).$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2377 "Smarty_Compiler_Template_Php_Parser.php"
#line 781 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r108(){
    $this->prefix_number++;
    $code = new Smarty_Compiler_Code();
    $code->iniTagCode($this->compiler);
    $code->php("ob_start();")->newline();
    $code->mergeCode($this->yystack[$this->yyidx + 0]->minor);
    $code->php("\$_tmp{$this->prefix_number} = ob_get_clean();")->newline();
    $this->compiler->prefix_code[] = $code;
    $this->_retvalue = '$_tmp'.$this->prefix_number;
    }
#line 2389 "Smarty_Compiler_Template_Php_Parser.php"
#line 802 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r110(){
    if ($this->yystack[$this->yyidx + 0]->minor['var'] == '\'smarty\'') {
        $this->_retvalue = $this->compiler->compileTag('Internal_SpecialVariable',array(),$this->yystack[$this->yyidx + 0]->minor['smarty_internal_index']);
    } else {
        $this->_retvalue = $this->compiler->compileVariable($this->yystack[$this->yyidx + 0]->minor['var']).$this->yystack[$this->yyidx + 0]->minor['smarty_internal_index'];
    }
    }
#line 2398 "Smarty_Compiler_Template_Php_Parser.php"
#line 811 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r111(){
    $this->_retvalue = '$_scope->' . trim($this->yystack[$this->yyidx + -2]->minor,"'") . '->' . $this->yystack[$this->yyidx + 0]->minor;
    }
#line 2403 "Smarty_Compiler_Template_Php_Parser.php"
#line 826 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r113(){
    $var = trim($this->yystack[$this->yyidx + -2]->minor,'\'');
    $this->_retvalue = "\$_scope->___config_var_{$var}".$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2409 "Smarty_Compiler_Template_Php_Parser.php"
#line 835 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r114(){
    $this->_retvalue = "\$_scope->___config_var_{{$this->yystack[$this->yyidx + -2]->minor}}".$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2414 "Smarty_Compiler_Template_Php_Parser.php"
#line 839 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r115(){
    $this->_retvalue = array('var'=>$this->yystack[$this->yyidx + -1]->minor, 'smarty_internal_index'=>$this->yystack[$this->yyidx + 0]->minor);
    }
#line 2419 "Smarty_Compiler_Template_Php_Parser.php"
#line 852 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r117(){
    return;
    }
#line 2424 "Smarty_Compiler_Template_Php_Parser.php"
#line 858 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r118(){
    $this->_retvalue = '['.$this->yystack[$this->yyidx + 0]->minor.']';
    }
#line 2429 "Smarty_Compiler_Template_Php_Parser.php"
#line 862 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r119(){
    $this->_retvalue = '['.$this->yystack[$this->yyidx + -2]->minor.'->'.$this->yystack[$this->yyidx + 0]->minor.']';
    }
#line 2434 "Smarty_Compiler_Template_Php_Parser.php"
#line 866 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r120(){
    $this->_retvalue = "['". $this->yystack[$this->yyidx + 0]->minor ."']";
    }
#line 2439 "Smarty_Compiler_Template_Php_Parser.php"
#line 870 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r121(){
    $this->_retvalue = "[". $this->yystack[$this->yyidx + 0]->minor ."]";
    }
#line 2444 "Smarty_Compiler_Template_Php_Parser.php"
#line 879 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r123(){
    $this->_retvalue = '['.$this->compiler->compileTag('Internal_SpecialVariable',array(),'[\'section\'][\''.$this->yystack[$this->yyidx + -1]->minor.'\'][\'index\']').']';
    }
#line 2449 "Smarty_Compiler_Template_Php_Parser.php"
#line 883 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r124(){
    $this->_retvalue = '['.$this->compiler->compileTag('Internal_SpecialVariable',array(),'[\'section\'][\''.$this->yystack[$this->yyidx + -3]->minor.'\'][\''.$this->yystack[$this->yyidx + -1]->minor.'\']').']';
    }
#line 2454 "Smarty_Compiler_Template_Php_Parser.php"
#line 888 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r125(){
    $this->_retvalue = "[". $this->yystack[$this->yyidx + -1]->minor ."]";
    }
#line 2459 "Smarty_Compiler_Template_Php_Parser.php"
#line 893 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r126(){
    $this->_retvalue = '[]';
    }
#line 2464 "Smarty_Compiler_Template_Php_Parser.php"
#line 897 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r127(){
    $this->_retvalue = '::'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2469 "Smarty_Compiler_Template_Php_Parser.php"
#line 909 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r129(){
    $this->prefix_number++;
    $code = new Smarty_Compiler_Code;
    $code->iniTagCode($this->compiler);
    $code->php('$_tmp'.$this->prefix_number.'='.$this->yystack[$this->yyidx + 0]->minor.";\n");
    $this->compiler->prefix_code[] = $code;
    $this->_retvalue = '$_tmp'.$this->prefix_number;
    }
#line 2479 "Smarty_Compiler_Template_Php_Parser.php"
#line 919 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r130(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.'.'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2484 "Smarty_Compiler_Template_Php_Parser.php"
#line 924 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r131(){
    $this->_retvalue = '\''.$this->yystack[$this->yyidx + 0]->minor.'\'';
    }
#line 2489 "Smarty_Compiler_Template_Php_Parser.php"
#line 929 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r132(){
    $this->_retvalue = '('.$this->yystack[$this->yyidx + 0]->minor.')';
    }
#line 2494 "Smarty_Compiler_Template_Php_Parser.php"
#line 936 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r133(){
    if ($this->yystack[$this->yyidx + -1]->minor['var'] == '\'smarty\'') {
        $this->_retvalue =  $this->compiler->compileTag('Internal_SpecialVariable',array(),$this->yystack[$this->yyidx + -1]->minor['smarty_internal_index']).$this->yystack[$this->yyidx + 0]->minor;
    } else {
        $this->_retvalue = $this->compiler->compileVariable($this->yystack[$this->yyidx + -1]->minor['var']).$this->yystack[$this->yyidx + -1]->minor['smarty_internal_index'].$this->yystack[$this->yyidx + 0]->minor;
    }
    }
#line 2503 "Smarty_Compiler_Template_Php_Parser.php"
#line 945 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r134(){
    $this->_retvalue  = $this->yystack[$this->yyidx + 0]->minor;
    }
#line 2508 "Smarty_Compiler_Template_Php_Parser.php"
#line 950 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r135(){
    $this->_retvalue  = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2513 "Smarty_Compiler_Template_Php_Parser.php"
#line 955 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r136(){
    if ($this->security && substr($this->yystack[$this->yyidx + -1]->minor,0,1) == '_') {
        $this->compiler->error (self::Err1);
    }
    $this->_retvalue = '->'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2521 "Smarty_Compiler_Template_Php_Parser.php"
#line 962 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r137(){
    if ($this->security) {
        $this->compiler->error (self::Err2);
    }
    $this->_retvalue = '->{'.$this->yystack[$this->yyidx + 0]->minor.'}';
    }
#line 2529 "Smarty_Compiler_Template_Php_Parser.php"
#line 969 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r138(){
    if ($this->security) {
        $this->compiler->error (self::Err2);
    }
    $this->_retvalue = '->{'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor.'}';
    }
#line 2537 "Smarty_Compiler_Template_Php_Parser.php"
#line 976 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r139(){
    if ($this->security) {
        $this->compiler->error (self::Err2);
    }
    $this->_retvalue = '->{\''.$this->yystack[$this->yyidx + -2]->minor.'\'.'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor.'}';
    }
#line 2545 "Smarty_Compiler_Template_Php_Parser.php"
#line 984 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r140(){
    $this->_retvalue = '->'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2550 "Smarty_Compiler_Template_Php_Parser.php"
#line 992 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r141(){
    if (!$this->security || $this->compiler->tpl_obj->security_policy->isTrustedPhpFunction($this->yystack[$this->yyidx + -3]->minor, $this->compiler)) {
        if (strcasecmp($this->yystack[$this->yyidx + -3]->minor,'isset') === 0 || strcasecmp($this->yystack[$this->yyidx + -3]->minor,'empty') === 0 || strcasecmp($this->yystack[$this->yyidx + -3]->minor,'array') === 0 || is_callable($this->yystack[$this->yyidx + -3]->minor)) {
            $func_name = strtolower($this->yystack[$this->yyidx + -3]->minor);
            if ($func_name == 'isset') {
                if (count($this->yystack[$this->yyidx + -1]->minor) == 0) {
                    $this->compiler->error ('Illegal number of paramer in "isset()"');
                }
                $par = implode(',',$this->yystack[$this->yyidx + -1]->minor);
                preg_match('/\$_scope->([0-9]*[a-zA-Z_]\w*)(.*)/',$par,$match);
                if (isset($match[1])) {
                    $search = array('/\$_scope->([0-9]*[a-zA-Z_]\w*)/','/->value.*/');
                    $replace = array('$_smarty_tpl->getVariable(\'\1\', null, true, false)','');
                    $this->prefix_number++;
                    $code = new Smarty_Compiler_Code();
                    $code->iniTagCode($this->compiler);
                    $code->php("\$_tmp{$this->prefix_number} = "  .preg_replace($search, $replace, $par) . ';')->newline();
                    $this->compiler->prefix_code[] = $code;
                    $isset_par = '$_tmp'.$this->prefix_number.$match[2];
                } else {
                    $this->prefix_number++;
                    $code = new Smarty_Compiler_Code();
                    $code->iniTagCode($this->compiler);
                    $code->php("\$_tmp{$this->prefix_number} = " . $par . ';')->newline();
                    $this->compiler->prefix_code[] = $code;
                    $isset_par = '$_tmp'.$this->prefix_number;
                }
                $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". $isset_par .")";
            } elseif (in_array($func_name,array('empty','reset','current','end','prev','next'))){
                if (count($this->yystack[$this->yyidx + -1]->minor) != 1) {
                    $this->compiler->error ("Illegal number of paramer in \"{$func_name}\"");
                }
                $this->_retvalue = $func_name.'('.$this->yystack[$this->yyidx + -1]->minor[0].')';
            } else {
                $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". implode(',',$this->yystack[$this->yyidx + -1]->minor) .")";
            }
        } else {
            $this->compiler->error ("unknown function \"" . $this->yystack[$this->yyidx + -3]->minor . "\"");
        }
    }
    }
#line 2593 "Smarty_Compiler_Template_Php_Parser.php"
#line 1037 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r142(){
    if (!$this->security || $this->compiler->tpl_obj->security_policy->isTrustedPhpFunction($this->yystack[$this->yyidx + -3]->minor, $this->compiler)) {
        if (is_callable($this->yystack[$this->yyidx + -3]->minor)) {
            $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". implode(',',$this->yystack[$this->yyidx + -1]->minor) .")";
        } else {
            $this->compiler->error ("unknown function \"" . $this->yystack[$this->yyidx + -3]->minor . "\"");
        }
    }
    }
#line 2604 "Smarty_Compiler_Template_Php_Parser.php"
#line 1050 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r143(){
    if ($this->security && substr($this->yystack[$this->yyidx + -3]->minor,0,1) == '_') {
        $this->compiler->error (self::Err1);
    }
    $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". implode(',',$this->yystack[$this->yyidx + -1]->minor) .")";
    }
#line 2612 "Smarty_Compiler_Template_Php_Parser.php"
#line 1057 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r144(){
    if ($this->security) {
        $this->compiler->error (self::Err2);
    }
    $this->prefix_number++;
    $code = new Smarty_Compiler_Code();
    $code->iniTagCode($this->compiler);
    $code->php("\$_tmp{$this->prefix_number} = " . $this->compiler->compileVariable("'".$this->yystack[$this->yyidx + -3]->minor."'") . ';')->newline();
    $this->compiler->prefix_code[] = $code;
    $this->_retvalue = '$_tmp'.$this->prefix_number.'('. implode(',',$this->yystack[$this->yyidx + -1]->minor) .')';
    }
#line 2625 "Smarty_Compiler_Template_Php_Parser.php"
#line 1071 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r145(){
    $this->_retvalue = array_merge($this->yystack[$this->yyidx + -2]->minor,array($this->yystack[$this->yyidx + 0]->minor));
    }
#line 2630 "Smarty_Compiler_Template_Php_Parser.php"
#line 1091 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r148(){
    $this->_retvalue = array_merge($this->yystack[$this->yyidx + -2]->minor,array(array_merge($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor)));
    }
#line 2635 "Smarty_Compiler_Template_Php_Parser.php"
#line 1095 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r149(){
    $this->_retvalue = array(array_merge($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor));
    }
#line 2640 "Smarty_Compiler_Template_Php_Parser.php"
#line 1103 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r151(){
    $this->_retvalue =  array($this->yystack[$this->yyidx + 0]->minor);
    }
#line 2645 "Smarty_Compiler_Template_Php_Parser.php"
#line 1111 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r152(){
    $this->_retvalue = array_merge($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor);
    }
#line 2650 "Smarty_Compiler_Template_Php_Parser.php"
#line 1141 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r158(){
    $this->_retvalue = '$'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2655 "Smarty_Compiler_Template_Php_Parser.php"
#line 1146 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r159(){
    $this->_retvalue = '$'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2660 "Smarty_Compiler_Template_Php_Parser.php"
#line 1155 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r160(){
    $this->_retvalue = 'array('.$this->yystack[$this->yyidx + -1]->minor.')';
    }
#line 2665 "Smarty_Compiler_Template_Php_Parser.php"
#line 1163 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r162(){
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.','.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2670 "Smarty_Compiler_Template_Php_Parser.php"
#line 1171 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r164(){
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'=>'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2675 "Smarty_Compiler_Template_Php_Parser.php"
#line 1175 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r165(){ 
    $this->_retvalue = '\''.$this->yystack[$this->yyidx + -2]->minor.'\'=>'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2680 "Smarty_Compiler_Template_Php_Parser.php"
#line 1187 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r167(){
    $this->_retvalue = "''";
    }
#line 2685 "Smarty_Compiler_Template_Php_Parser.php"
#line 1196 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r169(){
    if ($this->yystack[$this->yyidx + 0]->minor === false) {
       $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;
    } else {
       $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor. '.' . $this->yystack[$this->yyidx + 0]->minor;
    }
    }
#line 2694 "Smarty_Compiler_Template_Php_Parser.php"
#line 1204 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r170(){
    if ($this->yystack[$this->yyidx + 0]->minor === false) {
       $this->_retvalue = "''";
    } else {
       $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;
    }
    }
#line 2703 "Smarty_Compiler_Template_Php_Parser.php"
#line 1212 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r171(){
    if (empty($this->db_quote_code_buffer)) {
        $this->_retvalue = '(string)'.$this->yystack[$this->yyidx + -1]->minor;
    } else {
        $this->db_quote_code_buffer .= 'echo (string)'.$this->yystack[$this->yyidx + -1]->minor.';';
        $this->_retvalue = false;
    }
    }
#line 2713 "Smarty_Compiler_Template_Php_Parser.php"
#line 1221 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r172(){
    if (empty($this->db_quote_code_buffer)) {
        $this->_retvalue = '(string)('.$this->yystack[$this->yyidx + -1]->minor.')';
    } else {
        $this->db_quote_code_buffer .= 'echo (string)('.$this->yystack[$this->yyidx + -1]->minor.');';
        $this->_retvalue = false;
    }
    }
#line 2723 "Smarty_Compiler_Template_Php_Parser.php"
#line 1230 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r173(){
    if (empty($this->db_quote_code_buffer)) {
        $this->_retvalue = '(string)$_scope->'. substr($this->yystack[$this->yyidx + 0]->minor,1) . '->value';
    } else {
        $this->db_quote_code_buffer .= 'echo (string)$_scope->'. substr($this->yystack[$this->yyidx + 0]->minor,1) . '->value;';
        $this->_retvalue = false;
    }
    }
#line 2733 "Smarty_Compiler_Template_Php_Parser.php"
#line 1248 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r175(){
    if (empty($this->db_quote_code_buffer)) {
        $this->_retvalue = '(string)('.$this->yystack[$this->yyidx + 0]->minor.')';
    } else {
        $this->db_quote_code_buffer .= 'echo (string)('.$this->yystack[$this->yyidx + 0]->minor.');';
        $this->_retvalue = false;
    }
    }
#line 2743 "Smarty_Compiler_Template_Php_Parser.php"
#line 1257 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r176(){
    if (empty($this->db_quote_code_buffer)) {
            $this->db_quote_code_buffer = 'ob_start();';
    }
    $this->db_quote_code_buffer .= $this->yystack[$this->yyidx + -1]->minor->buffer;
        if ($this->block_nesting_level == count($this->compiler->_tag_stack)) {
        $this->prefix_number++;
        $code = new Smarty_Compiler_Code();
        $code->iniTagCode($this->compiler);
        $code->php( $this->db_quote_code_buffer . ' $_tmp'.$this->prefix_number.'=ob_get_clean();')->newline();
        $this->compiler->prefix_code[] = $code;
        $this->db_quote_code_buffer = '';
        $this->_retvalue = '$_tmp'.$this->prefix_number;
    } else {
        $this->_retvalue = false;
    }

    }
#line 2763 "Smarty_Compiler_Template_Php_Parser.php"
#line 1276 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r177(){
    if (empty($this->db_quote_code_buffer)) {
        $this->_retvalue = '"'.$this->yystack[$this->yyidx + 0]->minor.'"';
    } else {
        $this->db_quote_code_buffer .= 'echo ' . sprintf('"%s"', addcslashes($this->yystack[$this->yyidx + 0]->minor, "\0\t\n\r\"\$\\")) . ';';
        $this->_retvalue = false;
    }
    }
#line 2773 "Smarty_Compiler_Template_Php_Parser.php"
#line 1285 "Smarty_Compiler_Template_Php_Parser.y"
    function yy_r178(){
    $this->compiler->lex->yypopstate();
    $this->_retvalue = '';
    }
#line 2779 "Smarty_Compiler_Template_Php_Parser.php"

    private $_retvalue;

    public function yy_reduce($yyruleno)
    {
        $yymsp = $this->yystack[$this->yyidx];
        if (self::$yyTraceFILE && $yyruleno >= 0
              && $yyruleno < count(self::$yyRuleName)) {
            fprintf(self::$yyTraceFILE, "%sReduce (%d) [%s].\n",
                self::$yyTracePrompt, $yyruleno,
                self::$yyRuleName[$yyruleno]);
        }

        $this->_retvalue = $yy_lefthand_side = null;
        if (array_key_exists($yyruleno, self::$yyReduceMap)) {
            // call the action
            $this->_retvalue = null;
            $this->{'yy_r' . self::$yyReduceMap[$yyruleno]}();
            $yy_lefthand_side = $this->_retvalue;
        }
        $yygoto = self::$yyRuleInfo[$yyruleno]['lhs'];
        $yysize = self::$yyRuleInfo[$yyruleno]['rhs'];
        $this->yyidx -= $yysize;
        for ($i = $yysize; $i; $i--) {
            // pop all of the right-hand side parameters
            array_pop($this->yystack);
        }
        $yyact = $this->yy_find_reduce_action($this->yystack[$this->yyidx]->stateno, $yygoto);
        if ($yyact < self::YYNSTATE) {
            if (!self::$yyTraceFILE && $yysize) {
                $this->yyidx++;
                $x = new TP_yyStackEntry;
                $x->stateno = $yyact;
                $x->major = $yygoto;
                $x->minor = $yy_lefthand_side;
                $this->yystack[$this->yyidx] = $x;
            } else {
                $this->yy_shift($yyact, $yygoto, $yy_lefthand_side);
            }
        } elseif ($yyact == self::YYNSTATE + self::YYNRULE + 1) {
            $this->yy_accept();
        }
    }

    public function yy_parse_failed()
    {
        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sFail!\n", self::$yyTracePrompt);
        }
        while ($this->yyidx >= 0) {
            $this->yy_pop_parser_stack();
        }
    }

    public function yy_syntax_error($yymajor, $TOKEN)
    {
#line 64 "Smarty_Compiler_Template_Php_Parser.y"

    $this->internalError = true;
    // expected token from parser
    $error_text = "<br> Syntax error :Unexpected '<b>{$this->lex->value}</b>'";
    if (count($this->yy_get_expected_tokens($yymajor)) <= 4) {
        foreach ($this->yy_get_expected_tokens($yymajor) as $token) {
            $exp_token = $this->yyTokenName[$token];
            if (isset($this->lex->smarty_token_names[$exp_token])) {
                // token type from lexer
                $expect[] = "'<b>{$this->lex->smarty_token_names[$exp_token]}</b>'";
            } else {
                // otherwise internal token name
                $expect[] = $this->yyTokenName[$token];
            }
        }
        $error_text .= ', expected one of: ' . implode(' , ', $expect) . '<br>';
    }
    $this->compiler->error($error_text);
#line 2856 "Smarty_Compiler_Template_Php_Parser.php"
    }

    public function yy_accept()
    {
        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sAccept!\n", self::$yyTracePrompt);
        } while ($this->yyidx >= 0) {
            $stack = $this->yy_pop_parser_stack();
        }
#line 56 "Smarty_Compiler_Template_Php_Parser.y"

    $this->successful = !$this->internalError;
    $this->internalError = false;
    $this->retvalue = $this->_retvalue;
    //echo $this->retvalue."\n\n";
#line 2873 "Smarty_Compiler_Template_Php_Parser.php"
    }

    public function doParse($yymajor, $yytokenvalue)
    {
        $yyerrorhit = 0;   /* True if yymajor has invoked an error */

        if ($this->yyidx === null || $this->yyidx < 0) {
            $this->yyidx = 0;
            $this->yyerrcnt = -1;
            $x = new TP_yyStackEntry;
            $x->stateno = 0;
            $x->major = 0;
            $this->yystack = array();
            array_push($this->yystack, $x);
        }
        $yyendofinput = ($yymajor==0);

        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sInput %s\n",
                self::$yyTracePrompt, $this->yyTokenName[$yymajor]);
        }

        do {
            $yyact = $this->yy_find_shift_action($yymajor);
            if ($yymajor < self::YYERRORSYMBOL &&
                  !$this->yy_is_expected_token($yymajor)) {
                // force a syntax error
                $yyact = self::YY_ERROR_ACTION;
            }
            if ($yyact < self::YYNSTATE) {
                $this->yy_shift($yyact, $yymajor, $yytokenvalue);
                $this->yyerrcnt--;
                if ($yyendofinput && $this->yyidx >= 0) {
                    $yymajor = 0;
                } else {
                    $yymajor = self::YYNOCODE;
                }
            } elseif ($yyact < self::YYNSTATE + self::YYNRULE) {
                $this->yy_reduce($yyact - self::YYNSTATE);
            } elseif ($yyact == self::YY_ERROR_ACTION) {
                if (self::$yyTraceFILE) {
                    fprintf(self::$yyTraceFILE, "%sSyntax Error!\n",
                        self::$yyTracePrompt);
                }
                if (self::YYERRORSYMBOL) {
                    if ($this->yyerrcnt < 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $yymx = $this->yystack[$this->yyidx]->major;
                    if ($yymx == self::YYERRORSYMBOL || $yyerrorhit) {
                        if (self::$yyTraceFILE) {
                            fprintf(self::$yyTraceFILE, "%sDiscard input token %s\n",
                                self::$yyTracePrompt, $this->yyTokenName[$yymajor]);
                        }
                        $this->yy_destructor($yymajor, $yytokenvalue);
                        $yymajor = self::YYNOCODE;
                    } else {
                        while ($this->yyidx >= 0 &&
                                 $yymx != self::YYERRORSYMBOL &&
        ($yyact = $this->yy_find_shift_action(self::YYERRORSYMBOL)) >= self::YYNSTATE
                              ){
                            $this->yy_pop_parser_stack();
                        }
                        if ($this->yyidx < 0 || $yymajor==0) {
                            $this->yy_destructor($yymajor, $yytokenvalue);
                            $this->yy_parse_failed();
                            $yymajor = self::YYNOCODE;
                        } elseif ($yymx != self::YYERRORSYMBOL) {
                            $u2 = 0;
                            $this->yy_shift($yyact, self::YYERRORSYMBOL, $u2);
                        }
                    }
                    $this->yyerrcnt = 3;
                    $yyerrorhit = 1;
                } else {
                    if ($this->yyerrcnt <= 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $this->yyerrcnt = 3;
                    $this->yy_destructor($yymajor, $yytokenvalue);
                    if ($yyendofinput) {
                        $this->yy_parse_failed();
                    }
                    $yymajor = self::YYNOCODE;
                }
            } else {
                $this->yy_accept();
                $yymajor = self::YYNOCODE;
            }
        } while ($yymajor != self::YYNOCODE && $this->yyidx >= 0);
    }
}
